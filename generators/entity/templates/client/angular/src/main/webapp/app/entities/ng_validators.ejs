<%#	Returns a string of all angular validators required for the input field. -%>
<%
const field = fields[idx];
let result = '';

if (field.fieldValidate == true) {
	const rules = field.fieldValidateRules;
	const validators = [];

    if (rules.indexOf('required') != -1 && field.fieldType != 'Boolean') {
        validators.push('required');
    }
    if (rules.indexOf('minlength') != -1) {
        validators.push('minlength="' + field.fieldValidateRulesMinlength + '"');
    }
    if (rules.indexOf('maxlength') != -1) {
        validators.push('maxlength="' + field.fieldValidateRulesMaxlength + '"');
    }
    if (rules.indexOf('min') != -1) {
        validators.push('min="' + field.fieldValidateRulesMin + '"');
    }
    if (rules.indexOf('max') != -1) {
        validators.push('max="' + field.fieldValidateRulesMax + '"');
    }
    if (rules.indexOf('minbytes') != -1) {
        validators.push('minbytes="' + field.fieldValidateRulesMinbytes +'"');
    }
    if (rules.indexOf('maxbytes') != -1) {
        validators.push('maxbytes="' + field.fieldValidateRulesMaxbytes +'"');
    }
    if (rules.indexOf('pattern') != -1) {
        validators.push('pattern="' + field.fieldValidateRulesPattern.replace(/"/g, '&#34;') + '"');
    }

    result = validators.join(' ');
}
-%>
<%- result -%>
