// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generator - Docker Compose gateway and 1 microservice, with 1 couchbase cluster should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "01-gateway",
      "10-couchbase"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": [
      "10-couchbase"
    ],
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "01-gateway",
      "10-couchbase"
    ],
    "serviceDiscoveryType": "consul"
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Service registry and configuration server:
- [Consul](http://localhost:8500)

### Applications and dependencies:
- jhgate (gateway application)
- jhgate's mysql database
- mscouchbase (microservice application)
- mscouchbase's couchbase database

### Additional Services:

",
    "stateCleared": "modified",
  },
  "central-server-config/application.yml": {
    "contents": "#common configuration shared between all applications
configserver:
  name: Service Registry
  status: Connected to Consul running in Docker

jhipster:
  security:
    authentication:
      jwt:
        base64-secret: SECRET--50


",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  jhgate:
    image: jhgate
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:mariadb://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    ports:
      - '8080:8080'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      jhgate-mysql:
        condition: service_healthy
  jhgate-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=jhgate
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  mscouchbase:
    image: mscouchbase
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_COUCHBASE_CONNECTION_STRING=mscouchbase-couchbase
      - JHIPSTER_DATABASE_COUCHBASE_BUCKET_NAME=mscouchbase
      - JHIPSTER_SLEEP=20
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      mscouchbase-couchbase:
        condition: service_healthy
  mscouchbase-couchbase-node:
    build:
      context: 10-couchbase/src/main/docker
      dockerfile: couchbase/Couchbase.Dockerfile
    environment:
      - TYPE=WORKER
      - BUCKET=mscouchbase
      - COUCHBASE_MASTER=mscouchbase-couchbase
      - AUTO_REBALANCE=false
  mscouchbase-couchbase:
    build:
      context: 10-couchbase/src/main/docker
      dockerfile: couchbase/Couchbase.Dockerfile
    environment:
      - TYPE=MASTER
      - BUCKET=mscouchbase
  
  consul:
    image: consul-placeholder
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: consul-config-loader-placeholder
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose gateway and 1 microservice, with Cassandra should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "01-gateway",
      "05-cassandra"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": {},
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "01-gateway",
      "05-cassandra"
    ],
    "serviceDiscoveryType": "consul"
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Service registry and configuration server:
- [Consul](http://localhost:8500)

### Applications and dependencies:
- jhgate (gateway application)
- jhgate's mysql database
- mscassandra (microservice application)
- mscassandra's cassandra database

### Additional Services:

",
    "stateCleared": "modified",
  },
  "central-server-config/application.yml": {
    "contents": "#common configuration shared between all applications
configserver:
  name: Service Registry
  status: Connected to Consul running in Docker

jhipster:
  security:
    authentication:
      jwt:
        base64-secret: SECRET--50


",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  jhgate:
    image: jhgate
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:mariadb://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    ports:
      - '8080:8080'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      jhgate-mysql:
        condition: service_healthy
  jhgate-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=jhgate
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  mscassandra:
    image: mscassandra
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_CASSANDRA_CONTACTPOINTS=mscassandra-cassandra
      - JHIPSTER_SLEEP=10
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      mscassandra-cassandra:
        condition: service_healthy
      mscassandra-cassandra-migration:
        condition: service_completed_successfully
  mscassandra-cassandra-migration:
    environment:
      - CASSANDRA_CONTACT_POINT=mscassandra-cassandra
      - USER=docker-cassandra-migration
      - CREATE_KEYSPACE_SCRIPT=create-keyspace.cql
    build:
      context: 05-cassandra/src/main/docker
      dockerfile: cassandra/Cassandra-Migration.Dockerfile
    volumes:
      - 05-cassandra/src/main/resources/config/cql:/cql:ro
  mscassandra-cassandra:
    image: cassandra-placeholder
    container_name: mscassandra-cassandra
    healthcheck:
      test:
        - CMD-SHELL
        - '[ $$(nodetool statusgossip) = running ]'
      interval: 5s
      timeout: 25s
      retries: 10
  
  consul:
    image: consul-placeholder
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: consul-config-loader-placeholder
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose gateway and multi microservices should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "01-gateway",
      "02-mysql",
      "03-psql",
      "04-mongo",
      "07-mariadb"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": [],
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "01-gateway",
      "02-mysql",
      "03-psql",
      "04-mongo",
      "07-mariadb"
    ],
    "serviceDiscoveryType": "consul"
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Service registry and configuration server:
- [Consul](http://localhost:8500)

### Applications and dependencies:
- jhgate (gateway application)
- jhgate's mysql database
- msmysql (microservice application)
- msmysql's mysql database
- mspsql (microservice application)
- mspsql's postgresql database
- mspsql's elasticsearch search engine
- msmongodb (microservice application)
- msmongodb's mongodb database
- msmariadb (microservice application)
- msmariadb's mariadb database

### Additional Services:

",
    "stateCleared": "modified",
  },
  "central-server-config/application.yml": {
    "contents": "#common configuration shared between all applications
configserver:
  name: Service Registry
  status: Connected to Consul running in Docker

jhipster:
  security:
    authentication:
      jwt:
        base64-secret: SECRET--50


",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  jhgate:
    image: jhgate
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:mariadb://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    ports:
      - '8080:8080'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      jhgate-mysql:
        condition: service_healthy
  jhgate-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=jhgate
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  msmysql:
    image: msmysql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmysql-mysql:
        condition: service_healthy
  msmysql-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=msmysql
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  mspsql:
    image: mspsql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:postgresql://mspsql-postgresql:5432/mspsql
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://mspsql-postgresql:5432/mspsql
      - SPRING_ELASTICSEARCH_URIS=http://mspsql-elasticsearch:9200
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      mspsql-postgresql:
        condition: service_healthy
      mspsql-elasticsearch:
        condition: service_healthy
  mspsql-postgresql:
    image: postgresql-placeholder
    environment:
      - POSTGRES_USER=mspsql
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready
      interval: 5s
      timeout: 5s
      retries: 10
  mspsql-elasticsearch:
    image: elasticsearch-placeholder
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:9200/_cluster/health?wait_for_status=green&timeout=10s
      interval: 5s
      timeout: 10s
      retries: 10
  
  msmongodb:
    image: msmongodb
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATA_MONGODB_URI=mongodb://msmongodb-mongodb:27017
      - SPRING_DATA_MONGODB_DATABASE=msmongodb
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmongodb-mongodb:
        condition: service_healthy
  msmongodb-mongodb:
    image: mongodb-placeholder
    healthcheck:
      test:
        - CMD
        - echo
        - '''db.runCommand("ping").ok'''
        - '|'
        - mongo
        - localhost:27017/test
        - '--quiet'
      interval: 5s
      timeout: 5s
      retries: 10
  
  msmariadb:
    image: msmariadb
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mariadb://msmariadb-mariadb:3306/msmariadb?useLegacyDatetimeCode=false&serverTimezone=UTC
      - SPRING_LIQUIBASE_URL=jdbc:mariadb://msmariadb-mariadb:3306/msmariadb?useLegacyDatetimeCode=false&serverTimezone=UTC
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmariadb-mariadb:
        condition: service_healthy
  msmariadb-mariadb:
    image: mariadb-placeholder
    volumes:
      - ./config/mariadb:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=msmariadb
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - /usr/local/bin/healthcheck.sh
        - '--connect'
        - '--innodb_initialized'
      interval: 5s
      timeout: 5s
      retries: 10
  
  consul:
    image: consul-placeholder
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: consul-config-loader-placeholder
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose gateway and multi microservices using oauth2 should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "01-gateway",
      "02-mysql",
      "03-psql",
      "10-couchbase",
      "07-mariadb"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": [],
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "01-gateway",
      "02-mysql",
      "03-psql",
      "07-mariadb",
      "10-couchbase"
    ],
    "serviceDiscoveryType": "consul"
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Service registry and configuration server:
- [Consul](http://localhost:8500)

### Applications and dependencies:
- jhgate (gateway application)
- jhgate's mysql database
- msmysql (microservice application)
- msmysql's mysql database
- mspsql (microservice application)
- mspsql's postgresql database
- mspsql's elasticsearch search engine
- mscouchbase (microservice application)
- mscouchbase's couchbase database
- msmariadb (microservice application)
- msmariadb's mariadb database

### Additional Services:

- [Keycloak server](http://localhost:9080)
",
    "stateCleared": "modified",
  },
  "central-server-config/application.yml": {
    "contents": "#common configuration shared between all applications
configserver:
  name: Service Registry
  status: Connected to Consul running in Docker

jhipster:
  security:
    authentication:
      jwt:
        base64-secret: SECRET--50


",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  jhgate:
    image: jhgate
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:mariadb://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=web_app
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=web_app
    ports:
      - '8080:8080'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      jhgate-mysql:
        condition: service_healthy
      keycloak:
        condition: service_healthy
  jhgate-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=jhgate
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  msmysql:
    image: msmysql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=internal
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=internal
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmysql-mysql:
        condition: service_healthy
      keycloak:
        condition: service_healthy
  msmysql-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=msmysql
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  mspsql:
    image: mspsql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:postgresql://mspsql-postgresql:5432/mspsql
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://mspsql-postgresql:5432/mspsql
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=internal
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=internal
      - SPRING_ELASTICSEARCH_URIS=http://mspsql-elasticsearch:9200
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      mspsql-postgresql:
        condition: service_healthy
      mspsql-elasticsearch:
        condition: service_healthy
      keycloak:
        condition: service_healthy
  mspsql-postgresql:
    image: postgresql-placeholder
    environment:
      - POSTGRES_USER=mspsql
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready
      interval: 5s
      timeout: 5s
      retries: 10
  mspsql-elasticsearch:
    image: elasticsearch-placeholder
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:9200/_cluster/health?wait_for_status=green&timeout=10s
      interval: 5s
      timeout: 10s
      retries: 10
  
  mscouchbase:
    image: mscouchbase
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_COUCHBASE_CONNECTION_STRING=mscouchbase-couchbase
      - JHIPSTER_DATABASE_COUCHBASE_BUCKET_NAME=mscouchbase
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=internal
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=internal
      - JHIPSTER_SLEEP=20
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      mscouchbase-couchbase:
        condition: service_healthy
      keycloak:
        condition: service_healthy
  mscouchbase-couchbase:
    build:
      context: 10-couchbase/src/main/docker
      dockerfile: couchbase/Couchbase.Dockerfile
    environment:
      - BUCKET=mscouchbase
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8091/ui/index.html
      interval: 5s
      timeout: 5s
      retries: 10
  
  msmariadb:
    image: msmariadb
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mariadb://msmariadb-mariadb:3306/msmariadb?useLegacyDatetimeCode=false&serverTimezone=UTC
      - SPRING_LIQUIBASE_URL=jdbc:mariadb://msmariadb-mariadb:3306/msmariadb?useLegacyDatetimeCode=false&serverTimezone=UTC
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=internal
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=internal
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmariadb-mariadb:
        condition: service_healthy
      keycloak:
        condition: service_healthy
  msmariadb-mariadb:
    image: mariadb-placeholder
    volumes:
      - ./config/mariadb:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=msmariadb
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - /usr/local/bin/healthcheck.sh
        - '--connect'
        - '--innodb_initialized'
      interval: 5s
      timeout: 5s
      retries: 10
  
  consul:
    image: consul-placeholder
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: consul-config-loader-placeholder
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
  keycloak:
    image: keycloak-placeholder
    command: ['start-dev --import-realm']
    volumes:
      - ./realm-config:/opt/keycloak/data/import
    environment:
      - KC_DB=dev-file
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_FEATURES=scripts
      - KC_HTTP_PORT=9080
      - KC_HTTPS_PORT=9443
    ports:
      - 9080:9080
      - 9443:9443
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9080/realms/jhipster"]
      interval: 5s
      timeout: 5s
      retries: 20
",
    "stateCleared": "modified",
  },
  "realm-config/jhipster-realm.json": {
    "contents": Any<String>,
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose gateway and multi microservices, with 1 mongodb cluster should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "01-gateway",
      "02-mysql",
      "03-psql",
      "04-mongo"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": [
      "04-mongo"
    ],
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "01-gateway",
      "02-mysql",
      "03-psql",
      "04-mongo"
    ],
    "serviceDiscoveryType": "consul"
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Service registry and configuration server:
- [Consul](http://localhost:8500)

### Applications and dependencies:
- jhgate (gateway application)
- jhgate's mysql database
- msmysql (microservice application)
- msmysql's mysql database
- mspsql (microservice application)
- mspsql's postgresql database
- mspsql's elasticsearch search engine
- msmongodb (microservice application)
- msmongodb's mongodb database

### Additional Services:

",
    "stateCleared": "modified",
  },
  "central-server-config/application.yml": {
    "contents": "#common configuration shared between all applications
configserver:
  name: Service Registry
  status: Connected to Consul running in Docker

jhipster:
  security:
    authentication:
      jwt:
        base64-secret: SECRET--50


",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  jhgate:
    image: jhgate
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:mariadb://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    ports:
      - '8080:8080'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      jhgate-mysql:
        condition: service_healthy
  jhgate-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=jhgate
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  msmysql:
    image: msmysql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmysql-mysql:
        condition: service_healthy
  msmysql-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=msmysql
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  mspsql:
    image: mspsql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:postgresql://mspsql-postgresql:5432/mspsql
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://mspsql-postgresql:5432/mspsql
      - SPRING_ELASTICSEARCH_URIS=http://mspsql-elasticsearch:9200
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      mspsql-postgresql:
        condition: service_healthy
      mspsql-elasticsearch:
        condition: service_healthy
  mspsql-postgresql:
    image: postgresql-placeholder
    environment:
      - POSTGRES_USER=mspsql
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready
      interval: 5s
      timeout: 5s
      retries: 10
  mspsql-elasticsearch:
    image: elasticsearch-placeholder
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:9200/_cluster/health?wait_for_status=green&timeout=10s
      interval: 5s
      timeout: 10s
      retries: 10
  
  msmongodb:
    image: msmongodb
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATA_MONGODB_URI=mongodb://msmongodb-mongodb:27017
      - SPRING_DATA_MONGODB_DATABASE=msmongodb
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmongodb-mongodb:
        condition: service_healthy
  msmongodb-mongodb-node:
    build:
      context: 04-mongo/src/main/docker
      dockerfile: mongodb/MongoDB.Dockerfile
    command: mongod --shardsvr --replSet rs1
  msmongodb-mongodb-config:
    image: mongodb-placeholder
    container_name: msmongodb-mongodb-config
    command: mongod --configsvr --dbpath /data/db --replSet csvr
  msmongodb-mongodb:
    image: mongodb-placeholder
    command: mongos --configdb csvr/msmongodb-mongodb-config --bind_ip 0.0.0.0
  
  consul:
    image: consul-placeholder
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: consul-config-loader-placeholder
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose gateway and multi microservices, with couchbase should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "01-gateway",
      "02-mysql",
      "03-psql",
      "10-couchbase",
      "07-mariadb"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": [],
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "01-gateway",
      "02-mysql",
      "03-psql",
      "07-mariadb",
      "10-couchbase"
    ],
    "serviceDiscoveryType": "consul"
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Service registry and configuration server:
- [Consul](http://localhost:8500)

### Applications and dependencies:
- jhgate (gateway application)
- jhgate's mysql database
- msmysql (microservice application)
- msmysql's mysql database
- mspsql (microservice application)
- mspsql's postgresql database
- mspsql's elasticsearch search engine
- mscouchbase (microservice application)
- mscouchbase's couchbase database
- msmariadb (microservice application)
- msmariadb's mariadb database

### Additional Services:

",
    "stateCleared": "modified",
  },
  "central-server-config/application.yml": {
    "contents": "#common configuration shared between all applications
configserver:
  name: Service Registry
  status: Connected to Consul running in Docker

jhipster:
  security:
    authentication:
      jwt:
        base64-secret: SECRET--50


",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  jhgate:
    image: jhgate
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:mariadb://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    ports:
      - '8080:8080'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      jhgate-mysql:
        condition: service_healthy
  jhgate-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=jhgate
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  msmysql:
    image: msmysql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmysql-mysql:
        condition: service_healthy
  msmysql-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=msmysql
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  mspsql:
    image: mspsql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:postgresql://mspsql-postgresql:5432/mspsql
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://mspsql-postgresql:5432/mspsql
      - SPRING_ELASTICSEARCH_URIS=http://mspsql-elasticsearch:9200
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      mspsql-postgresql:
        condition: service_healthy
      mspsql-elasticsearch:
        condition: service_healthy
  mspsql-postgresql:
    image: postgresql-placeholder
    environment:
      - POSTGRES_USER=mspsql
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready
      interval: 5s
      timeout: 5s
      retries: 10
  mspsql-elasticsearch:
    image: elasticsearch-placeholder
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:9200/_cluster/health?wait_for_status=green&timeout=10s
      interval: 5s
      timeout: 10s
      retries: 10
  
  mscouchbase:
    image: mscouchbase
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_COUCHBASE_CONNECTION_STRING=mscouchbase-couchbase
      - JHIPSTER_DATABASE_COUCHBASE_BUCKET_NAME=mscouchbase
      - JHIPSTER_SLEEP=20
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      mscouchbase-couchbase:
        condition: service_healthy
  mscouchbase-couchbase:
    build:
      context: 10-couchbase/src/main/docker
      dockerfile: couchbase/Couchbase.Dockerfile
    environment:
      - BUCKET=mscouchbase
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8091/ui/index.html
      interval: 5s
      timeout: 5s
      retries: 10
  
  msmariadb:
    image: msmariadb
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mariadb://msmariadb-mariadb:3306/msmariadb?useLegacyDatetimeCode=false&serverTimezone=UTC
      - SPRING_LIQUIBASE_URL=jdbc:mariadb://msmariadb-mariadb:3306/msmariadb?useLegacyDatetimeCode=false&serverTimezone=UTC
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmariadb-mariadb:
        condition: service_healthy
  msmariadb-mariadb:
    image: mariadb-placeholder
    volumes:
      - ./config/mariadb:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=msmariadb
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - /usr/local/bin/healthcheck.sh
        - '--connect'
        - '--innodb_initialized'
      interval: 5s
      timeout: 5s
      retries: 10
  
  consul:
    image: consul-placeholder
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: consul-config-loader-placeholder
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose gateway and one microservice should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "01-gateway",
      "02-mysql"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": {},
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "01-gateway",
      "02-mysql"
    ],
    "serviceDiscoveryType": "consul"
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Service registry and configuration server:
- [Consul](http://localhost:8500)

### Applications and dependencies:
- jhgate (gateway application)
- jhgate's mysql database
- msmysql (microservice application)
- msmysql's mysql database

### Additional Services:

",
    "stateCleared": "modified",
  },
  "central-server-config/application.yml": {
    "contents": "#common configuration shared between all applications
configserver:
  name: Service Registry
  status: Connected to Consul running in Docker

jhipster:
  security:
    authentication:
      jwt:
        base64-secret: SECRET--50


",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  jhgate:
    image: jhgate
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:mariadb://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    ports:
      - '8080:8080'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      jhgate-mysql:
        condition: service_healthy
  jhgate-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=jhgate
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  msmysql:
    image: msmysql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmysql-mysql:
        condition: service_healthy
  msmysql-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=msmysql
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  consul:
    image: consul-placeholder
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: consul-config-loader-placeholder
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose gateway and one microservice, with curator should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "01-gateway",
      "02-mysql"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": {},
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "01-gateway",
      "02-mysql"
    ],
    "serviceDiscoveryType": "consul"
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Service registry and configuration server:
- [Consul](http://localhost:8500)

### Applications and dependencies:
- jhgate (gateway application)
- jhgate's mysql database
- msmysql (microservice application)
- msmysql's mysql database

### Additional Services:

",
    "stateCleared": "modified",
  },
  "central-server-config/application.yml": {
    "contents": "#common configuration shared between all applications
configserver:
  name: Service Registry
  status: Connected to Consul running in Docker

jhipster:
  security:
    authentication:
      jwt:
        base64-secret: SECRET--50


",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  jhgate:
    image: jhgate
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:mariadb://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    ports:
      - '8080:8080'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      jhgate-mysql:
        condition: service_healthy
  jhgate-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=jhgate
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  msmysql:
    image: msmysql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmysql-mysql:
        condition: service_healthy
  msmysql-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=msmysql
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  consul:
    image: consul-placeholder
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: consul-config-loader-placeholder
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose gateway and one microservice, with prometheus should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "01-gateway",
      "02-mysql"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": {},
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "prometheus",
    "packages": [
      "01-gateway",
      "02-mysql"
    ],
    "serviceDiscoveryType": "consul"
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Service registry and configuration server:
- [Consul](http://localhost:8500)

### Applications and dependencies:
- jhgate (gateway application)
- jhgate's mysql database
- msmysql (microservice application)
- msmysql's mysql database

### Additional Services:

- [Prometheus server](http://localhost:9090)
- [Prometheus Alertmanager](http://localhost:9093)
- [Grafana](http://localhost:3000)
",
    "stateCleared": "modified",
  },
  "alertmanager-conf/config.yml": {
    "contents": "route:
  receiver: 'webhook'
  group_by: ['alertname']
  group_wait:      10s
  group_interval:  1m
  repeat_interval: 2h

receivers:
- name: 'webhook'
  webhook_configs:
  # For testing, create a sample alerting webhook at http://webhook.site/
  - url: 'http://webhook.site/<UUID>'
    send_resolved: true
",
    "stateCleared": "modified",
  },
  "central-server-config/application.yml": {
    "contents": "#common configuration shared between all applications
configserver:
  name: Service Registry
  status: Connected to Consul running in Docker

jhipster:
  security:
    authentication:
      jwt:
        base64-secret: SECRET--50
management:
  prometheus:
    metrics:
      export:
        enabled: true


",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  jhgate:
    image: jhgate
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:mariadb://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    ports:
      - '8080:8080'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      jhgate-mysql:
        condition: service_healthy
  jhgate-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=jhgate
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  msmysql:
    image: msmysql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmysql-mysql:
        condition: service_healthy
  msmysql-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=msmysql
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  consul:
    image: consul-placeholder
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: consul-config-loader-placeholder
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500

  prometheus:
    image: prometheus-placeholder
    volumes:
      - ./prometheus-conf/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
  alertmanager:
    image: prometheus-alertmanager-placeholder
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager-conf/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  grafana:
    image: grafana-placeholder
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

volumes:
  prometheus_data: {}
  grafana_data: {}
",
    "stateCleared": "modified",
  },
  "prometheus-conf/alert_rules.yml": {
    "contents": "groups:
- name: example
  rules:
  - alert: InstanceDown
    # Based on https://prometheus.io/docs/prometheus/latest/configuration/template_examples/
    expr: up == 0
    for: 10s
    labels:
      severity: page
    annotations:
      summary: "Instance {{$labels.instance}} down"
      description: "{{$labels.instance}} of job {{$labels.job}} has been down for more than 10 seconds."
",
    "stateCleared": "modified",
  },
  "prometheus-conf/prometheus.yml": {
    "contents": "global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'my-project'

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - alertmanager:9093

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  - alert_rules.yml

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label \`job=<job_name>\` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    # scheme defaults to 'http'.
    metrics_path: /management/prometheus
    static_configs:
    - targets:
        - jhgate:8080
        - msmysql:8081
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose gateway and one microservice, without monitoring should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "01-gateway",
      "02-mysql"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": {},
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "01-gateway",
      "02-mysql"
    ],
    "serviceDiscoveryType": "consul"
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Service registry and configuration server:
- [Consul](http://localhost:8500)

### Applications and dependencies:
- jhgate (gateway application)
- jhgate's mysql database
- msmysql (microservice application)
- msmysql's mysql database

### Additional Services:

",
    "stateCleared": "modified",
  },
  "central-server-config/application.yml": {
    "contents": "#common configuration shared between all applications
configserver:
  name: Service Registry
  status: Connected to Consul running in Docker

jhipster:
  security:
    authentication:
      jwt:
        base64-secret: SECRET--50


",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  jhgate:
    image: jhgate
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:mariadb://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    ports:
      - '8080:8080'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      jhgate-mysql:
        condition: service_healthy
  jhgate-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=jhgate
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  msmysql:
    image: msmysql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmysql-mysql:
        condition: service_healthy
  msmysql-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=msmysql
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  consul:
    image: consul-placeholder
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: consul-config-loader-placeholder
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose monolith should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "08-monolith"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": {},
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "08-monolith"
    ],
    "serviceDiscoveryType": false
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Applications and dependencies:
- sampleMysql (monolith application)
- sampleMysql's mysql database
- sampleMysql's elasticsearch search engine

### Additional Services:

",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  samplemysql:
    image: samplemysql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_DATASOURCE_URL=jdbc:mysql://samplemysql-mysql:3306/samplemysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://samplemysql-mysql:3306/samplemysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_ELASTICSEARCH_URIS=http://samplemysql-elasticsearch:9200
    ports:
      - '8080:8080'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      samplemysql-mysql:
        condition: service_healthy
      samplemysql-elasticsearch:
        condition: service_healthy
  samplemysql-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=samplemysql
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  samplemysql-elasticsearch:
    image: elasticsearch-placeholder
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:9200/_cluster/health?wait_for_status=green&timeout=10s
      interval: 5s
      timeout: 10s
      retries: 10
  
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose one microservice and a directory path without a trailing slash should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "02-mysql"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": {},
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "02-mysql"
    ],
    "serviceDiscoveryType": "consul"
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Service registry and configuration server:
- [Consul](http://localhost:8500)

### Applications and dependencies:
- msmysql (microservice application)
- msmysql's mysql database

### Additional Services:

",
    "stateCleared": "modified",
  },
  "central-server-config/application.yml": {
    "contents": "#common configuration shared between all applications
configserver:
  name: Service Registry
  status: Connected to Consul running in Docker

jhipster:
  security:
    authentication:
      jwt:
        base64-secret: SECRET--50


",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  msmysql:
    image: msmysql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmysql-mysql:
        condition: service_healthy
  msmysql-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=msmysql
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  consul:
    image: consul-placeholder
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: consul-config-loader-placeholder
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose only gateway should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "01-gateway"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": {},
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "01-gateway"
    ],
    "serviceDiscoveryType": "consul"
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Service registry and configuration server:
- [Consul](http://localhost:8500)

### Applications and dependencies:
- jhgate (gateway application)
- jhgate's mysql database

### Additional Services:

",
    "stateCleared": "modified",
  },
  "central-server-config/application.yml": {
    "contents": "#common configuration shared between all applications
configserver:
  name: Service Registry
  status: Connected to Consul running in Docker

jhipster:
  security:
    authentication:
      jwt:
        base64-secret: SECRET--50


",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  jhgate:
    image: jhgate
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_R2DBC_URL=r2dbc:mariadb://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://jhgate-mysql:3306/jhgate?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    ports:
      - '8080:8080'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      jhgate-mysql:
        condition: service_healthy
  jhgate-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=jhgate
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  consul:
    image: consul-placeholder
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: consul-config-loader-placeholder
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose only one microservice should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "02-mysql"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": {},
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "02-mysql"
    ],
    "serviceDiscoveryType": "consul"
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Service registry and configuration server:
- [Consul](http://localhost:8500)

### Applications and dependencies:
- msmysql (microservice application)
- msmysql's mysql database

### Additional Services:

",
    "stateCleared": "modified",
  },
  "central-server-config/application.yml": {
    "contents": "#common configuration shared between all applications
configserver:
  name: Service Registry
  status: Connected to Consul running in Docker

jhipster:
  security:
    authentication:
      jwt:
        base64-secret: SECRET--50


",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  msmysql:
    image: msmysql
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
      - SPRING_LIQUIBASE_URL=jdbc:mysql://msmysql-mysql:3306/msmysql?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8081/management/health
      interval: 5s
      timeout: 5s
      retries: 40
    depends_on:
      msmysql-mysql:
        condition: service_healthy
  msmysql-mysql:
    image: mysql-placeholder
    volumes:
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=msmysql
    command: mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp
    healthcheck:
      test:
        - CMD
        - mysql
        - '-e'
        - SHOW DATABASES;
      interval: 5s
      timeout: 5s
      retries: 10
  
  consul:
    image: consul-placeholder
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: consul-config-loader-placeholder
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Docker Compose oracle monolith should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "appsFolders": [
      "12-oracle"
    ],
    "baseName": "workspaces",
    "clientPackageManager": "npm",
    "clusteredDbApps": {},
    "directoryPath": "./",
    "gatewayType": "SpringCloudGateway",
    "jwtSecretKey": "SECRET--50",
    "monitoring": "no",
    "packages": [
      "12-oracle"
    ],
    "serviceDiscoveryType": false
  }
}
",
    "stateCleared": "modified",
  },
  "README-DOCKER-COMPOSE.md": {
    "contents": "# JHipster generated Docker-Compose configuration

## Usage

Launch all your infrastructure by running: \`docker compose up -d\`.

## Configured Docker services

### Applications and dependencies:
- oracle-mono (monolith application)
- oracle-mono's oracle database

### Additional Services:

",
    "stateCleared": "modified",
  },
  "docker-compose.yml": {
    "contents": "services:
  oracle-mono:
    image: oracle-mono
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - SPRING_DATASOURCE_URL=jdbc:oracle:thin:@oracle-mono-oracle:1521:oracle-mono
      - SPRING_LIQUIBASE_URL=jdbc:oracle:thin:@oracle-mono-oracle:1521:oracle-mono
    ports:
      - '8080:8080'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - http://localhost:8080/management/health
      interval: 5s
      timeout: 5s
      retries: 40
  
",
    "stateCleared": "modified",
  },
}
`;
