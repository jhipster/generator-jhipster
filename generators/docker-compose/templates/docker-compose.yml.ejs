<%#
 Copyright 2013-2023 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
services:
<%_ for(let i = 0; i < appConfigs.length; i++) { _%>
<%- appsYaml[i] %>
<%_ } _%>
<%_ if (useKafka) { _%>
  zookeeper:
    image: <%- dockerContainers.zookeeper %>
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
  kafka:
    image: <%- dockerContainers.kafka %>
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      #ports:
      # - 9092:9092 # Uncomment to make Kafka available externally
<%_ } _%>
<%_ if (serviceDiscoveryEureka) { _%>
  jhipster-registry:
    image: <%- dockerContainers.jhipsterRegistry %>
    volumes:
      - ./central-server-config:/central-config
    # By default the JHipster Registry runs with the "dev" and "native"
    # Spring profiles.
    # "native" profile means the filesystem is used to store data, see
    # http://cloud.spring.io/spring-cloud-config/spring-cloud-config.html
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=dev<% if (usesOauth2) { %>,oauth2<% } %>
      - SPRING_SECURITY_USER_PASSWORD=<%= adminPassword %>
      - JHIPSTER_REGISTRY_PASSWORD=<%= adminPassword %>
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=native
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_LOCATIONS=file:./central-config
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=git
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_URI=https://github.com/jhipster/jhipster-registry/
      # - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_PATHS=central-config
  <%_ if (monitoringELK) { _%>
      - JHIPSTER_LOGGING_LOGSTASH_ENABLED=true
      - JHIPSTER_LOGGING_LOGSTASH_HOST=jhipster-logstash
  <%_ } _%>
  <%_ if (monitoringPrometheus) { _%>
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
  <%_ } _%>
  <%_ if (usesOauth2) { _%>
      # For Keycloak to work, you need to add '127.0.0.1 keycloak' to your hosts file
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=jhipster-registry
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=jhipster-registry
    depends_on:
      keycloak:
        condition: 'service_healthy'
  <%_ } _%>
    ports:
      - 8761:8761
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/management/health"]
      interval: 5s
      timeout: 5s
      retries: 10
<%_ } _%>
<%_ if (serviceDiscoveryConsul) { _%>
  consul:
    image: <%- dockerContainers.consul %>
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  consul-config-loader:
    image: <%- dockerContainers.consulConfigLoader %>
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
<%_ } _%>
<%_ if (usesOauth2) { _%>
  keycloak:
    image: <%- dockerContainers.keycloak %>
    command: ['start-dev --import-realm']
    volumes:
      - ./realm-config:/opt/keycloak/data/import
    environment:
      - KC_DB=dev-file
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_FEATURES=scripts
      - KC_HTTP_PORT=9080
      - KC_HTTPS_PORT=9443
    ports:
      - 9080:9080
      - 9443:9443
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9080/realms/jhipster"]
      interval: 5s
      timeout: 5s
      retries: 20
<%_ } _%>
<%_ if (monitoringPrometheus) { _%>

  prometheus:
    image: <%- dockerContainers.prometheus %>
    volumes:
      - ./prometheus-conf/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
  alertmanager:
    image: <%- dockerContainers.prometheusAlertmanager %>
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager-conf/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  grafana:
    image: <%- dockerContainers.grafana %>
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

volumes:
  prometheus_data: {}
  grafana_data: {}
<%_ } _%>
