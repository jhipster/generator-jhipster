{project-name}
==============
:toc:

:library: Asciidoctor
ifdef::asciidoctor[]
:source-highlighter: coderay
endif::asciidoctor[]
:idprefix:
:imagesdir: images
//:backend: docbook45
//:backend: html5
//:doctype: book
//:sectids!:
:plus: &#43;

NOTE: This document is a work in progress. It is subject to change without cautions.

== General purpose
<%_
let DOCUMENTATION_ARCHIVE_URL = `${DOCUMENTATION_URL + DOCUMENTATION_ARCHIVE_PATH}v${jhipsterVersion}`;
_%>
This application was generated using JHipster <%= jhipsterVersion %>, you can find documentation and help at [<%= DOCUMENTATION_ARCHIVE_URL %>].
<%_ if (applicationType === 'gateway' || applicationType === 'microservice' || applicationType === 'uaa') { _%>

This is a "<%= applicationType %>" application intended to be part of a microservice architecture, please refer to the [Doing microservices with JHipster][] page of the documentation for more information.
    <% if (applicationType === 'uaa') { %>
        This is also a JHipster User Account and Authentication (UAA) Server, refer to [Using UAA for Microservice Security][] for details on how to secure JHipster microservices with OAuth2.<% } %>
<%_ } _%>
<%_ if (applicationType === 'gateway' || applicationType === 'microservice' || applicationType === 'uaa') { _%>
    This application is configured for Service Discovery and Configuration with <% if (serviceDiscoveryType === 'eureka') { %>the JHipster-Registry<% } %><% if (serviceDiscoveryType === 'consul') { %>Consul<% } %>. On launch, it will refuse to start if it is not able to connect to <% if (serviceDiscoveryType === 'eureka') { %>the JHipster-Registry at [http://localhost:8761](http://localhost:8761)<% } %><% if (serviceDiscoveryType === 'consul') { %>Consul at [http://localhost:8500](http://localhost:8500)<% } %>.<% if (serviceDiscoveryType === 'eureka') { %> For more information, read our documentation on [Service Discovery and Configuration with the JHipster-Registry][].<% } %><% if (serviceDiscoveryType === 'consul') { %> For more information, read our documentation on [Service Discovery and Configuration with Consul][].<% } %>
<%_ } _%>


== Configuration

include::auth.adoc[]

include::db.adoc[]

<%_ if (applicationType !== 'microservice') { _%>
include::front-end.adoc[]
<%_ } _%>

// jhipster-needle-add-extra-doc - JHipster will add extra doc here -->

== Links

[[Javadoc]]link:<%_ if (buildTool === 'gradle') { _%>../javadoc<%_ } else { _%>apidocs<%_ } _%>/index.html[Java documentation^]

[[Typedoc]]link:typedocs/index.html[TypeScript documentation^]

