// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generator - common with default config should succeed 1`] = `
{
  ".editorconfig": {
    "contents": "# EditorConfig helps developers define and maintain consistent
# coding styles between different editors and IDEs
# editorconfig.org

root = true

[*]

# We recommend you to keep these unchanged
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true

# Change these settings to your own preference
indent_style = space
indent_size = 4

[*.{ts,tsx,js,jsx,json,css,scss,yml,html,vue}]
indent_size = 2

[*.md]
trim_trailing_whitespace = false
",
    "stateCleared": "modified",
  },
  ".husky/pre-commit": {
    "contents": "#!/bin/sh
. "$(dirname "$0")/_/husky.sh"


"$(dirname "$0")/../npmw" exec --no-install lint-staged
",
    "stateCleared": "modified",
  },
  ".lintstagedrc.cjs": {
    "contents": "module.exports = {
  '{,**/}*.{md,json,yml,html,cjs,mjs,js,ts,tsx,css,scss,java}': ['prettier --write'],
};
",
    "stateCleared": "modified",
  },
  ".prettierignore": {
    "contents": "node_modules
package-lock.json
.git
target/
",
    "stateCleared": "modified",
  },
  ".prettierrc": {
    "contents": "# Prettier configuration

printWidth: 140
singleQuote: true
tabWidth: 2
useTabs: false

# js and ts rules:
arrowParens: avoid

# jsx and tsx rules:
bracketSameLine: false

plugins:
  - prettier-plugin-packagejson
  - prettier-plugin-java
  
# java rules:
overrides:
  - files: "*.java"
    options:
      tabWidth: 4
",
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "baseName": "jhipster",
    "creationTimestamp": 1577836800000,
    "entities": []
  }
}
",
    "stateCleared": "modified",
  },
  "README.md": {
    "contents": "# jhipster

This application was generated using JHipster JHIPSTER_VERSION, you can find documentation and help at [https://www.jhipster.tech/documentation-archive/vJHIPSTER_VERSION](https://www.jhipster.tech/documentation-archive/vJHIPSTER_VERSION).


## Project Structure


## Development



## Building for production


## Testing



[JHipster Homepage and latest documentation]: https://www.jhipster.tech
[JHipster JHIPSTER_VERSION archive]: https://www.jhipster.tech/documentation-archive/vJHIPSTER_VERSION
[Using JHipster in development]: https://www.jhipster.tech/documentation-archive/vJHIPSTER_VERSION/development/
[Using Docker and Docker-Compose]: https://www.jhipster.tech/documentation-archive/vJHIPSTER_VERSION/docker-compose
[Using JHipster in production]: https://www.jhipster.tech/documentation-archive/vJHIPSTER_VERSION/production/
[Running tests page]: https://www.jhipster.tech/documentation-archive/vJHIPSTER_VERSION/running-tests/
[Code quality page]: https://www.jhipster.tech/documentation-archive/vJHIPSTER_VERSION/code-quality/
[Setting up Continuous Integration]: https://www.jhipster.tech/documentation-archive/vJHIPSTER_VERSION/setting-up-ci/

[Node.js]: https://nodejs.org/
[NPM]: https://www.npmjs.com/
",
    "stateCleared": "modified",
  },
  "package.json": {
    "contents": "{
  "devDependencies": {
    "generator-jhipster": "JHIPSTER_VERSION",
    "husky": "HUSKY_VERSION",
    "lint-staged": "LINT_STAGED_VERSION",
    "prettier": "PRETTIER_VERSION",
    "prettier-plugin-packagejson": "PRETTIER_PLUGIN_PACKAGEJSON_VERSION",
    "prettier-plugin-java": "PRETTIER_PLUGIN_JAVA_VERSION"
  },
  "scripts": {
    "prepare": "husky install"
  }
}
",
    "stateCleared": "modified",
  },
  "sonar-project.properties": {
    "contents": "sonar.projectKey = jhipster
sonar.projectName = jhipster generated by jhipster

# Typescript tests files must be inside sources and tests, otherwise \`INFO: 
# Test execution data ignored for 80 unknown files, including:\` is shown.
sonar.sources = src
sonar.tests = src
sonar.host.url = http://localhost:9001

sonar.test.inclusions = src/test/**/*.*, src/main/webapp/app/**/*.spec.ts
sonar.coverage.jacoco.xmlReportPaths = target/site/**/jacoco*.xml
sonar.java.codeCoveragePlugin = jacoco
sonar.junit.reportPaths = target/surefire-reports,target/failsafe-reports
sonar.testExecutionReportPaths = target/test-results/jest/TESTS-results-sonar.\\
  xml
sonar.javascript.lcov.reportPaths = target/test-results/lcov.info

sonar.sourceEncoding = UTF-8
sonar.exclusions = src/main/webapp/content/**/*.*, src/main/webapp/i18n/*.js, \\
  target/classes/static/**/*.*

sonar.issue.ignore.multicriteria = S3437,S4502,S4684,S5145,UndocumentedApi

# Rule https://rules.sonarsource.com/java/RSPEC-3437 is ignored, as a 
# JPA-managed field cannot be transient
sonar.issue.ignore.multicriteria.S3437.resourceKey = src/main/java/**/*
sonar.issue.ignore.multicriteria.S3437.ruleKey = squid:S3437
# Rule https://rules.sonarsource.com/java/RSPEC-4502 is ignored, as for JWT 
# tokens we are not subject to CSRF attack
sonar.issue.ignore.multicriteria.S4502.resourceKey = src/main/java/**/*
sonar.issue.ignore.multicriteria.S4502.ruleKey = java:S4502
# Rule https://rules.sonarsource.com/java/RSPEC-4684
sonar.issue.ignore.multicriteria.S4684.resourceKey = src/main/java/**/*
sonar.issue.ignore.multicriteria.S4684.ruleKey = java:S4684
# Rule https://rules.sonarsource.com/java/RSPEC-5145 log filter is applied
sonar.issue.ignore.multicriteria.S5145.resourceKey = src/main/java/**/*
sonar.issue.ignore.multicriteria.S5145.ruleKey = javasecurity:S5145
# Rule https://rules.sonarsource.com/java/RSPEC-1176 is ignored, as we want to 
# follow "clean code" guidelines and classes, methods and arguments names 
# should be self-explanatory
sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey = \\
  src/main/java/**/*
sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey = squid:UndocumentedApi
",
    "stateCleared": "modified",
  },
}
`;
