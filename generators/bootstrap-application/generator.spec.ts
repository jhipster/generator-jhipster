/**
 * Copyright 2013-2025 the original author or authors from the JHipster project.
 *
 * This file is part of the JHipster project, see https://www.jhipster.tech/
 * for more information.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { basename, dirname } from 'path';
import { fileURLToPath } from 'url';
import { before, describe, expect, it } from 'esmocha';
import { snakeCase } from 'lodash-es';

import { defaultHelpers as helpers, result as runResult } from '../../lib/testing/index.js';
import { fieldTypes } from '../../lib/jhipster/index.js';
import { shouldSupportFeatures } from '../../test/support/tests.js';
import Generator from './index.js';

const {
  CommonDBTypes: { UUID },
} = fieldTypes;

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const generator = basename(__dirname);

const expectedField = () => ({
  generateFakeData: expect.any(Function),
  createRandexp: expect.any(Function),

  entity: expect.any(Object),
  reference: expect.any(Object),
});

const expectedPrimaryKeyId = () => ({
  field: expect.any(Object),
});

const expectedPrimaryKey = primaryKey => ({
  ownFields: expect.any(Array),
  fields: expect.any(Array),
  derivedFields: expect.any(Array),
  ids: primaryKey.ids.map(expectedPrimaryKeyId),
});

const expectedEntity = entity => ({
  faker: expect.any(Object),
  generateFakeData: expect.any(Function),
  resetFakerSeed: expect.any(Function),

  allReferences: expect.any(Array),
  otherEntities: expect.any(Array),
  regularEagerRelations: expect.any(Array),
  reactiveEagerRelations: expect.any(Array),
  reactiveRegularEagerRelations: expect.any(Array),

  dtoReferences: expect.any(Array),
  restProperties: expect.any(Array),
  otherReferences: expect.any(Array),
  otherDtoReferences: expect.any(Array),

  fields: entity.fields.map(expectedField),
  relationships: expect.any(Array),
  primaryKey: expectedPrimaryKey(entity.primaryKey),
  reactiveOtherEntities: expect.any(Set),
  reactiveUniqueEntityTypes: expect.any(Set),
});

describe(`generator - ${generator}`, () => {
  it('generator-list constant matches folder name', async () => {
    await expect((await import('../generator-list.js'))[`GENERATOR_${snakeCase(generator).toUpperCase()}`]).toBe(generator);
  });
  shouldSupportFeatures(Generator);

  describe('with', () => {
    describe('default config', () => {
      before(async () => {
        await helpers.runJHipster(generator).withJHipsterConfig({}, [
          {
            name: 'EntityA',
            changelogDate: '20220129025419',
            fields: [
              {
                fieldName: 'id',
                fieldType: UUID,
              },
            ],
          },
          {
            name: 'User',
            changelogDate: '20220129025420',
            fields: [
              {
                fieldName: 'id',
                fieldType: UUID,
              },
            ],
          },
        ]);
      });

      it('should write files', () => {
        expect(runResult.getSnapshot('**/{.jhipster/**, entities.json}')).toMatchInlineSnapshot(`
{
  ".jhipster/EntityA.json": {
    "contents": "{
  "annotations": {
    "changelogDate": "20220129025419"
  },
  "changelogDate": "20220129025419",
  "fields": [
    {
      "fieldName": "id",
      "fieldType": "UUID"
    }
  ],
  "name": "EntityA",
  "relationships": []
}
",
    "stateCleared": "modified",
  },
  ".jhipster/User.json": {
    "contents": "{
  "annotations": {
    "changelogDate": "20220129025420"
  },
  "changelogDate": "20220129025420",
  "fields": [
    {
      "fieldName": "id",
      "fieldType": "UUID"
    }
  ],
  "name": "User",
  "relationships": []
}
",
    "stateCleared": "modified",
  },
}
`);
      });
      it('should prepare entities', () => {
        expect(Object.keys(runResult.generator.sharedData.getEntitiesMap())).toMatchInlineSnapshot(`
[
  "User",
  "UserManagement",
  "Authority",
  "EntityA",
]
`);
      });
      it('should prepare User', () => {
        const entity = runResult.generator.sharedData.getEntitiesMap().User;
        expect(entity).toMatchInlineSnapshot(
          expectedEntity(entity),
          `
{
  "adminEntity": undefined,
  "adminUserDto": "AdminUserDTO",
  "allReferences": Any<Array>,
  "annotations": {
    "changelogDate": "20220129025420",
  },
  "anyFieldHasDocumentation": false,
  "anyFieldHasFileBasedContentType": false,
  "anyFieldHasImageContentType": false,
  "anyFieldHasTextContentType": false,
  "anyFieldIsBigDecimal": false,
  "anyFieldIsBlobDerived": false,
  "anyFieldIsDateDerived": false,
  "anyFieldIsDuration": false,
  "anyFieldIsInstant": false,
  "anyFieldIsLocalDate": false,
  "anyFieldIsLocalTime": false,
  "anyFieldIsTimeDerived": false,
  "anyFieldIsUUID": true,
  "anyFieldIsZonedDateTime": false,
  "anyPropertyHasValidation": true,
  "anyRelationshipIsRequired": false,
  "applicationType": "monolith",
  "auditableEntity": true,
  "authenticationType": "jwt",
  "baseName": "jhipster",
  "builtIn": true,
  "builtInUser": true,
  "builtInUserManagement": undefined,
  "changelogDate": "20220129025420",
  "changelogDateForRecent": 2022-01-29T02:54:20.000Z,
  "clientFramework": "angular",
  "clientRootFolder": "",
  "containsBagRelationships": false,
  "cypressBootstrapEntities": true,
  "databaseType": "sql",
  "differentRelationships": {},
  "dto": "any",
  "dtoAny": true,
  "dtoClass": "UserDTO",
  "dtoInstance": "userDTO",
  "dtoMapstruct": true,
  "dtoReferences": Any<Array>,
  "dtoSuffix": "DTO",
  "eagerRelations": [],
  "embedded": false,
  "entityAbsoluteClass": "com.mycompany.myapp.domain.User",
  "entityAbsoluteFolder": "com/mycompany/myapp/",
  "entityAbsolutePackage": "com.mycompany.myapp",
  "entityAngularJSSuffix": undefined,
  "entityAngularName": "User",
  "entityAngularNamePlural": "Users",
  "entityApi": "",
  "entityApiDescription": undefined,
  "entityApiUrl": "users",
  "entityAuthority": undefined,
  "entityClass": "User",
  "entityClassHumanized": "User",
  "entityClassPlural": "Users",
  "entityClassPluralHumanized": "Users",
  "entityContainsCollectionField": false,
  "entityDomainLayer": false,
  "entityFileName": "user",
  "entityFolderName": "user",
  "entityI18nVariant": "default",
  "entityInstance": "user",
  "entityInstanceDbSafe": "jhiUser",
  "entityInstancePlural": "users",
  "entityJavaPackageFolder": "",
  "entityJavadoc": undefined,
  "entityModelFileName": "user",
  "entityNameCapitalized": "User",
  "entityNamePlural": "Users",
  "entityNamePluralizedAndSpinalCased": "users",
  "entityPackage": undefined,
  "entityPage": "user",
  "entityParentPathAddition": "",
  "entityPersistenceLayer": false,
  "entityPluralFileName": "usersundefined",
  "entityReactName": "User",
  "entityReadAuthority": undefined,
  "entityRestLayer": false,
  "entitySearchLayer": false,
  "entityServiceFileName": "user",
  "entityStateName": "user",
  "entitySuffix": "",
  "entityTableName": "jhi_user",
  "entityTranslationKey": "user",
  "entityTranslationKeyMenu": "user",
  "entityUrl": "user",
  "enums": [],
  "existingEnum": false,
  "faker": Any<Object>,
  "fieldNameChoices": [],
  "fields": [
    {
      "autoGenerate": true,
      "autoGenerateByRepository": true,
      "autoGenerateByService": false,
      "blobContentTypeAny": false,
      "blobContentTypeImage": false,
      "blobContentTypeText": false,
      "builtIn": true,
      "columnName": "id",
      "columnRequired": false,
      "columnType": "\${uuidType}",
      "createRandexp": Any<Function>,
      "dynamic": false,
      "entity": Any<Object>,
      "fieldInJavaBeanMethod": "Id",
      "fieldIsEnum": false,
      "fieldName": "id",
      "fieldNameAsDatabaseColumn": "id",
      "fieldNameCapitalized": "Id",
      "fieldNameHumanized": "ID",
      "fieldNameUnderscored": "id",
      "fieldTranslationKey": "global.field.id",
      "fieldType": "UUID",
      "fieldTypeAnyBlob": false,
      "fieldTypeBigDecimal": false,
      "fieldTypeBinary": false,
      "fieldTypeBlob": false,
      "fieldTypeBoolean": false,
      "fieldTypeByteBuffer": false,
      "fieldTypeBytes": false,
      "fieldTypeCharSequence": true,
      "fieldTypeDouble": false,
      "fieldTypeDuration": false,
      "fieldTypeFloat": false,
      "fieldTypeImageBlob": false,
      "fieldTypeInstant": false,
      "fieldTypeInteger": false,
      "fieldTypeLocalDate": false,
      "fieldTypeLocalTime": false,
      "fieldTypeLong": false,
      "fieldTypeNumeric": false,
      "fieldTypeString": false,
      "fieldTypeTemporal": false,
      "fieldTypeTextBlob": false,
      "fieldTypeTimed": false,
      "fieldTypeUUID": true,
      "fieldTypeZonedDateTime": false,
      "fieldValidate": false,
      "fieldValidateRulesMaxlength": undefined,
      "fieldValidateRulesPatternAngular": undefined,
      "fieldValidateRulesPatternJava": undefined,
      "fieldValidateRulesPatternReact": undefined,
      "fieldValidationMax": false,
      "fieldValidationMaxBytes": false,
      "fieldValidationMaxLength": false,
      "fieldValidationMin": false,
      "fieldValidationMinBytes": false,
      "fieldValidationMinLength": false,
      "fieldValidationPattern": false,
      "fieldValidationRequired": false,
      "fieldValidationUnique": false,
      "fieldWithContentType": false,
      "generateFakeData": Any<Function>,
      "generateFakeDataFromPattern": [Function],
      "id": true,
      "javaFieldType": "UUID",
      "javaFieldTypeInteger": false,
      "javaFieldTypeLong": false,
      "javaFieldTypeString": false,
      "javaFieldTypeUUID": true,
      "javaValueGenerator": "UUID.randomUUID()",
      "javaValueSample1": "UUID.fromString("23d8dc04-a48b-45d9-a01d-4b728f0ad4aa")",
      "javaValueSample2": "UUID.fromString("ad79f240-3727-46c3-b89f-2cf6ebd74367")",
      "jpaGeneratedValue": true,
      "jpaGeneratedValueIdentity": false,
      "jpaGeneratedValueSequence": false,
      "liquibaseDefaultValueAttributeName": undefined,
      "liquibaseDefaultValueAttributeValue": undefined,
      "liquibaseGenerateFakeData": true,
      "loadColumnType": "\${uuidType}",
      "nullable": true,
      "path": [
        "id",
      ],
      "propertyName": "id",
      "propertyNameCapitalized": "Id",
      "propertyNameUpperSnakeCase": "ID",
      "readonly": true,
      "reference": Any<Object>,
      "relationshipsPath": [],
      "requiresPersistableImplementation": false,
      "shouldCreateContentType": false,
      "shouldDropDefaultValue": false,
      "tsType": "string",
      "unique": false,
      "uniqueValue": [
        "09076bdf-799b-4280-a46d-d5d1b0596d4e",
        "cdbac2c8-5af0-4c05-9390-f838bceaee96",
        "2c184532-359e-417e-8339-7736058f89c7",
        "1344246c-16a7-46d1-bb61-2043f965c8d5",
        "1e61df13-b2d3-459d-875e-5607a4ccdbdb",
      ],
    },
    {
      "blobContentTypeAny": false,
      "blobContentTypeImage": false,
      "blobContentTypeText": false,
      "builtIn": true,
      "columnName": "login",
      "columnRequired": true,
      "columnType": "varchar(50)",
      "createRandexp": Any<Function>,
      "entity": Any<Object>,
      "fieldInJavaBeanMethod": "Login",
      "fieldIsEnum": false,
      "fieldName": "login",
      "fieldNameAsDatabaseColumn": "login",
      "fieldNameCapitalized": "Login",
      "fieldNameHumanized": "Login",
      "fieldNameUnderscored": "login",
      "fieldTranslationKey": "userManagement.login",
      "fieldType": "String",
      "fieldTypeAnyBlob": false,
      "fieldTypeBigDecimal": false,
      "fieldTypeBinary": false,
      "fieldTypeBlob": false,
      "fieldTypeBoolean": false,
      "fieldTypeByteBuffer": false,
      "fieldTypeBytes": false,
      "fieldTypeCharSequence": true,
      "fieldTypeDouble": false,
      "fieldTypeDuration": false,
      "fieldTypeFloat": false,
      "fieldTypeImageBlob": false,
      "fieldTypeInstant": false,
      "fieldTypeInteger": false,
      "fieldTypeLocalDate": false,
      "fieldTypeLocalTime": false,
      "fieldTypeLong": false,
      "fieldTypeNumeric": false,
      "fieldTypeString": true,
      "fieldTypeTemporal": false,
      "fieldTypeTextBlob": false,
      "fieldTypeTimed": false,
      "fieldTypeUUID": false,
      "fieldTypeZonedDateTime": false,
      "fieldValidate": true,
      "fieldValidateRules": [
        "required",
        "unique",
        "maxlength",
        "pattern",
      ],
      "fieldValidateRulesMaxlength": 50,
      "fieldValidateRulesPattern": "^[a-zA-Z0-9!$&*+=?^_\`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$",
      "fieldValidateRulesPatternAngular": "^[a-zA-Z0-9!$&*+=?^_\`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$",
      "fieldValidateRulesPatternJava": "^(?>[a-zA-Z0-9!$&*+=?^_\`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
      "fieldValidateRulesPatternReact": "^[a-zA-Z0-9!$&*+=?^_\`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$",
      "fieldValidationMax": false,
      "fieldValidationMaxBytes": false,
      "fieldValidationMaxLength": true,
      "fieldValidationMin": false,
      "fieldValidationMinBytes": false,
      "fieldValidationMinLength": false,
      "fieldValidationPattern": true,
      "fieldValidationRequired": true,
      "fieldValidationUnique": true,
      "fieldWithContentType": false,
      "generateFakeData": Any<Function>,
      "generateFakeDataFromPattern": [Function],
      "javaFieldType": "String",
      "javaFieldTypeInteger": false,
      "javaFieldTypeLong": false,
      "javaFieldTypeString": true,
      "javaFieldTypeUUID": false,
      "javaValueGenerator": "UUID.randomUUID().toString()",
      "javaValueSample1": ""login1"",
      "javaValueSample2": ""login2"",
      "liquibaseDefaultValueAttributeName": undefined,
      "liquibaseDefaultValueAttributeValue": undefined,
      "liquibaseGenerateFakeData": true,
      "loadColumnType": "string",
      "maxlength": 50,
      "nullable": false,
      "path": [
        "login",
      ],
      "propertyName": "login",
      "propertyNameCapitalized": "Login",
      "propertyNameUpperSnakeCase": "LOGIN",
      "reference": Any<Object>,
      "relationshipsPath": [],
      "shouldCreateContentType": false,
      "shouldDropDefaultValue": false,
      "tsType": "string",
      "unique": true,
      "uniqueConstraintName": "ux_jhi_user__login",
      "uniqueValue": [
        "ohu@Z",
        "M@-OK\\8Q7\\KE7Lmnl\\-9\\,gz8P\\@0wAqB",
        "tXsOip",
        "Uc.q",
      ],
    },
    {
      "blobContentTypeAny": false,
      "blobContentTypeImage": false,
      "blobContentTypeText": false,
      "builtIn": true,
      "columnName": "first_name",
      "columnRequired": false,
      "columnType": "varchar(50)",
      "createRandexp": Any<Function>,
      "entity": Any<Object>,
      "fieldInJavaBeanMethod": "FirstName",
      "fieldIsEnum": false,
      "fieldName": "firstName",
      "fieldNameAsDatabaseColumn": "first_name",
      "fieldNameCapitalized": "FirstName",
      "fieldNameHumanized": "First Name",
      "fieldNameUnderscored": "first_name",
      "fieldTranslationKey": "userManagement.firstName",
      "fieldType": "String",
      "fieldTypeAnyBlob": false,
      "fieldTypeBigDecimal": false,
      "fieldTypeBinary": false,
      "fieldTypeBlob": false,
      "fieldTypeBoolean": false,
      "fieldTypeByteBuffer": false,
      "fieldTypeBytes": false,
      "fieldTypeCharSequence": true,
      "fieldTypeDouble": false,
      "fieldTypeDuration": false,
      "fieldTypeFloat": false,
      "fieldTypeImageBlob": false,
      "fieldTypeInstant": false,
      "fieldTypeInteger": false,
      "fieldTypeLocalDate": false,
      "fieldTypeLocalTime": false,
      "fieldTypeLong": false,
      "fieldTypeNumeric": false,
      "fieldTypeString": true,
      "fieldTypeTemporal": false,
      "fieldTypeTextBlob": false,
      "fieldTypeTimed": false,
      "fieldTypeUUID": false,
      "fieldTypeZonedDateTime": false,
      "fieldValidate": true,
      "fieldValidateRules": [
        "maxlength",
      ],
      "fieldValidateRulesMaxlength": 50,
      "fieldValidateRulesPatternAngular": undefined,
      "fieldValidateRulesPatternJava": undefined,
      "fieldValidateRulesPatternReact": undefined,
      "fieldValidationMax": false,
      "fieldValidationMaxBytes": false,
      "fieldValidationMaxLength": true,
      "fieldValidationMin": false,
      "fieldValidationMinBytes": false,
      "fieldValidationMinLength": false,
      "fieldValidationPattern": false,
      "fieldValidationRequired": false,
      "fieldValidationUnique": false,
      "fieldWithContentType": false,
      "generateFakeData": Any<Function>,
      "generateFakeDataFromPattern": [Function],
      "javaFieldType": "String",
      "javaFieldTypeInteger": false,
      "javaFieldTypeLong": false,
      "javaFieldTypeString": true,
      "javaFieldTypeUUID": false,
      "javaValueGenerator": "UUID.randomUUID().toString()",
      "javaValueSample1": ""firstName1"",
      "javaValueSample2": ""firstName2"",
      "liquibaseDefaultValueAttributeName": undefined,
      "liquibaseDefaultValueAttributeValue": undefined,
      "liquibaseGenerateFakeData": true,
      "loadColumnType": "string",
      "maxlength": 50,
      "nullable": true,
      "path": [
        "firstName",
      ],
      "propertyName": "firstName",
      "propertyNameCapitalized": "FirstName",
      "propertyNameUpperSnakeCase": "FIRST_NAME",
      "reference": Any<Object>,
      "relationshipsPath": [],
      "shouldCreateContentType": false,
      "shouldDropDefaultValue": false,
      "tsType": "string",
      "unique": false,
      "uniqueValue": [],
    },
    {
      "blobContentTypeAny": false,
      "blobContentTypeImage": false,
      "blobContentTypeText": false,
      "builtIn": true,
      "columnName": "last_name",
      "columnRequired": false,
      "columnType": "varchar(50)",
      "createRandexp": Any<Function>,
      "entity": Any<Object>,
      "fieldInJavaBeanMethod": "LastName",
      "fieldIsEnum": false,
      "fieldName": "lastName",
      "fieldNameAsDatabaseColumn": "last_name",
      "fieldNameCapitalized": "LastName",
      "fieldNameHumanized": "Last Name",
      "fieldNameUnderscored": "last_name",
      "fieldTranslationKey": "userManagement.lastName",
      "fieldType": "String",
      "fieldTypeAnyBlob": false,
      "fieldTypeBigDecimal": false,
      "fieldTypeBinary": false,
      "fieldTypeBlob": false,
      "fieldTypeBoolean": false,
      "fieldTypeByteBuffer": false,
      "fieldTypeBytes": false,
      "fieldTypeCharSequence": true,
      "fieldTypeDouble": false,
      "fieldTypeDuration": false,
      "fieldTypeFloat": false,
      "fieldTypeImageBlob": false,
      "fieldTypeInstant": false,
      "fieldTypeInteger": false,
      "fieldTypeLocalDate": false,
      "fieldTypeLocalTime": false,
      "fieldTypeLong": false,
      "fieldTypeNumeric": false,
      "fieldTypeString": true,
      "fieldTypeTemporal": false,
      "fieldTypeTextBlob": false,
      "fieldTypeTimed": false,
      "fieldTypeUUID": false,
      "fieldTypeZonedDateTime": false,
      "fieldValidate": true,
      "fieldValidateRules": [
        "maxlength",
      ],
      "fieldValidateRulesMaxlength": 50,
      "fieldValidateRulesPatternAngular": undefined,
      "fieldValidateRulesPatternJava": undefined,
      "fieldValidateRulesPatternReact": undefined,
      "fieldValidationMax": false,
      "fieldValidationMaxBytes": false,
      "fieldValidationMaxLength": true,
      "fieldValidationMin": false,
      "fieldValidationMinBytes": false,
      "fieldValidationMinLength": false,
      "fieldValidationPattern": false,
      "fieldValidationRequired": false,
      "fieldValidationUnique": false,
      "fieldWithContentType": false,
      "generateFakeData": Any<Function>,
      "generateFakeDataFromPattern": [Function],
      "javaFieldType": "String",
      "javaFieldTypeInteger": false,
      "javaFieldTypeLong": false,
      "javaFieldTypeString": true,
      "javaFieldTypeUUID": false,
      "javaValueGenerator": "UUID.randomUUID().toString()",
      "javaValueSample1": ""lastName1"",
      "javaValueSample2": ""lastName2"",
      "liquibaseDefaultValueAttributeName": undefined,
      "liquibaseDefaultValueAttributeValue": undefined,
      "liquibaseGenerateFakeData": true,
      "loadColumnType": "string",
      "maxlength": 50,
      "nullable": true,
      "path": [
        "lastName",
      ],
      "propertyName": "lastName",
      "propertyNameCapitalized": "LastName",
      "propertyNameUpperSnakeCase": "LAST_NAME",
      "reference": Any<Object>,
      "relationshipsPath": [],
      "shouldCreateContentType": false,
      "shouldDropDefaultValue": false,
      "tsType": "string",
      "unique": false,
      "uniqueValue": [],
    },
    {
      "blobContentTypeAny": false,
      "blobContentTypeImage": false,
      "blobContentTypeText": false,
      "builtIn": true,
      "columnName": "email",
      "columnRequired": true,
      "columnType": "varchar(191)",
      "createRandexp": Any<Function>,
      "entity": Any<Object>,
      "fieldInJavaBeanMethod": "Email",
      "fieldIsEnum": false,
      "fieldName": "email",
      "fieldNameAsDatabaseColumn": "email",
      "fieldNameCapitalized": "Email",
      "fieldNameHumanized": "Email",
      "fieldNameUnderscored": "email",
      "fieldTranslationKey": "userManagement.email",
      "fieldType": "String",
      "fieldTypeAnyBlob": false,
      "fieldTypeBigDecimal": false,
      "fieldTypeBinary": false,
      "fieldTypeBlob": false,
      "fieldTypeBoolean": false,
      "fieldTypeByteBuffer": false,
      "fieldTypeBytes": false,
      "fieldTypeCharSequence": true,
      "fieldTypeDouble": false,
      "fieldTypeDuration": false,
      "fieldTypeFloat": false,
      "fieldTypeImageBlob": false,
      "fieldTypeInstant": false,
      "fieldTypeInteger": false,
      "fieldTypeLocalDate": false,
      "fieldTypeLocalTime": false,
      "fieldTypeLong": false,
      "fieldTypeNumeric": false,
      "fieldTypeString": true,
      "fieldTypeTemporal": false,
      "fieldTypeTextBlob": false,
      "fieldTypeTimed": false,
      "fieldTypeUUID": false,
      "fieldTypeZonedDateTime": false,
      "fieldValidate": true,
      "fieldValidateRules": [
        "required",
        "unique",
        "maxlength",
        "minlength",
      ],
      "fieldValidateRulesMaxlength": 191,
      "fieldValidateRulesMinlength": 5,
      "fieldValidateRulesPatternAngular": undefined,
      "fieldValidateRulesPatternJava": undefined,
      "fieldValidateRulesPatternReact": undefined,
      "fieldValidationMax": false,
      "fieldValidationMaxBytes": false,
      "fieldValidationMaxLength": true,
      "fieldValidationMin": false,
      "fieldValidationMinBytes": false,
      "fieldValidationMinLength": true,
      "fieldValidationPattern": false,
      "fieldValidationRequired": true,
      "fieldValidationUnique": true,
      "fieldWithContentType": false,
      "generateFakeData": Any<Function>,
      "generateFakeDataFromPattern": [Function],
      "javaFieldType": "String",
      "javaFieldTypeInteger": false,
      "javaFieldTypeLong": false,
      "javaFieldTypeString": true,
      "javaFieldTypeUUID": false,
      "javaValueGenerator": "UUID.randomUUID().toString()",
      "javaValueSample1": ""email1"",
      "javaValueSample2": ""email2"",
      "liquibaseDefaultValueAttributeName": undefined,
      "liquibaseDefaultValueAttributeValue": undefined,
      "liquibaseGenerateFakeData": true,
      "loadColumnType": "string",
      "maxlength": 191,
      "nullable": false,
      "path": [
        "email",
      ],
      "propertyName": "email",
      "propertyNameCapitalized": "Email",
      "propertyNameUpperSnakeCase": "EMAIL",
      "reference": Any<Object>,
      "relationshipsPath": [],
      "shouldCreateContentType": false,
      "shouldDropDefaultValue": false,
      "tsType": "string",
      "unique": true,
      "uniqueConstraintName": "ux_jhi_user__email",
      "uniqueValue": [],
    },
    {
      "blobContentTypeAny": false,
      "blobContentTypeImage": false,
      "blobContentTypeText": false,
      "builtIn": true,
      "columnName": "image_url",
      "columnRequired": false,
      "columnType": "varchar(256)",
      "createRandexp": Any<Function>,
      "entity": Any<Object>,
      "fieldInJavaBeanMethod": "ImageUrl",
      "fieldIsEnum": false,
      "fieldName": "imageUrl",
      "fieldNameAsDatabaseColumn": "image_url",
      "fieldNameCapitalized": "ImageUrl",
      "fieldNameHumanized": "Image Url",
      "fieldNameUnderscored": "image_url",
      "fieldTranslationKey": "userManagement.imageUrl",
      "fieldType": "String",
      "fieldTypeAnyBlob": false,
      "fieldTypeBigDecimal": false,
      "fieldTypeBinary": false,
      "fieldTypeBlob": false,
      "fieldTypeBoolean": false,
      "fieldTypeByteBuffer": false,
      "fieldTypeBytes": false,
      "fieldTypeCharSequence": true,
      "fieldTypeDouble": false,
      "fieldTypeDuration": false,
      "fieldTypeFloat": false,
      "fieldTypeImageBlob": false,
      "fieldTypeInstant": false,
      "fieldTypeInteger": false,
      "fieldTypeLocalDate": false,
      "fieldTypeLocalTime": false,
      "fieldTypeLong": false,
      "fieldTypeNumeric": false,
      "fieldTypeString": true,
      "fieldTypeTemporal": false,
      "fieldTypeTextBlob": false,
      "fieldTypeTimed": false,
      "fieldTypeUUID": false,
      "fieldTypeZonedDateTime": false,
      "fieldValidate": true,
      "fieldValidateRules": [
        "maxlength",
      ],
      "fieldValidateRulesMaxlength": 256,
      "fieldValidateRulesPatternAngular": undefined,
      "fieldValidateRulesPatternJava": undefined,
      "fieldValidateRulesPatternReact": undefined,
      "fieldValidationMax": false,
      "fieldValidationMaxBytes": false,
      "fieldValidationMaxLength": true,
      "fieldValidationMin": false,
      "fieldValidationMinBytes": false,
      "fieldValidationMinLength": false,
      "fieldValidationPattern": false,
      "fieldValidationRequired": false,
      "fieldValidationUnique": false,
      "fieldWithContentType": false,
      "generateFakeData": Any<Function>,
      "generateFakeDataFromPattern": [Function],
      "javaFieldType": "String",
      "javaFieldTypeInteger": false,
      "javaFieldTypeLong": false,
      "javaFieldTypeString": true,
      "javaFieldTypeUUID": false,
      "javaValueGenerator": "UUID.randomUUID().toString()",
      "javaValueSample1": ""imageUrl1"",
      "javaValueSample2": ""imageUrl2"",
      "liquibaseDefaultValueAttributeName": undefined,
      "liquibaseDefaultValueAttributeValue": undefined,
      "liquibaseGenerateFakeData": true,
      "loadColumnType": "string",
      "maxlength": 256,
      "nullable": true,
      "path": [
        "imageUrl",
      ],
      "propertyName": "imageUrl",
      "propertyNameCapitalized": "ImageUrl",
      "propertyNameUpperSnakeCase": "IMAGE_URL",
      "reference": Any<Object>,
      "relationshipsPath": [],
      "shouldCreateContentType": false,
      "shouldDropDefaultValue": false,
      "tsType": "string",
      "unique": false,
      "uniqueValue": [],
    },
    {
      "autoGenerate": true,
      "blobContentTypeAny": false,
      "blobContentTypeImage": false,
      "blobContentTypeText": false,
      "builtIn": true,
      "columnName": "activated",
      "columnRequired": false,
      "columnType": "boolean",
      "createRandexp": Any<Function>,
      "entity": Any<Object>,
      "fieldInJavaBeanMethod": "Activated",
      "fieldIsEnum": false,
      "fieldName": "activated",
      "fieldNameAsDatabaseColumn": "activated",
      "fieldNameCapitalized": "Activated",
      "fieldNameHumanized": "Activated",
      "fieldNameUnderscored": "activated",
      "fieldTranslationKey": "userManagement.activated",
      "fieldType": "Boolean",
      "fieldTypeAnyBlob": false,
      "fieldTypeBigDecimal": false,
      "fieldTypeBinary": false,
      "fieldTypeBlob": false,
      "fieldTypeBoolean": true,
      "fieldTypeByteBuffer": false,
      "fieldTypeBytes": false,
      "fieldTypeCharSequence": false,
      "fieldTypeDouble": false,
      "fieldTypeDuration": false,
      "fieldTypeFloat": false,
      "fieldTypeImageBlob": false,
      "fieldTypeInstant": false,
      "fieldTypeInteger": false,
      "fieldTypeLocalDate": false,
      "fieldTypeLocalTime": false,
      "fieldTypeLong": false,
      "fieldTypeNumeric": false,
      "fieldTypeString": false,
      "fieldTypeTemporal": false,
      "fieldTypeTextBlob": false,
      "fieldTypeTimed": false,
      "fieldTypeUUID": false,
      "fieldTypeZonedDateTime": false,
      "fieldValidate": false,
      "fieldValidateRulesPatternAngular": undefined,
      "fieldValidateRulesPatternJava": undefined,
      "fieldValidateRulesPatternReact": undefined,
      "fieldValidationMax": false,
      "fieldValidationMaxBytes": false,
      "fieldValidationMaxLength": false,
      "fieldValidationMin": false,
      "fieldValidationMinBytes": false,
      "fieldValidationMinLength": false,
      "fieldValidationPattern": false,
      "fieldValidationRequired": false,
      "fieldValidationUnique": false,
      "fieldWithContentType": false,
      "generateFakeData": Any<Function>,
      "generateFakeDataFromPattern": [Function],
      "javaFieldType": "Boolean",
      "javaFieldTypeInteger": false,
      "javaFieldTypeLong": false,
      "javaFieldTypeString": false,
      "javaFieldTypeUUID": false,
      "liquibaseDefaultValueAttributeName": undefined,
      "liquibaseDefaultValueAttributeValue": undefined,
      "liquibaseGenerateFakeData": true,
      "loadColumnType": "boolean",
      "nullable": true,
      "path": [
        "activated",
      ],
      "propertyName": "activated",
      "propertyNameCapitalized": "Activated",
      "propertyNameUpperSnakeCase": "ACTIVATED",
      "reference": Any<Object>,
      "relationshipsPath": [],
      "shouldCreateContentType": false,
      "shouldDropDefaultValue": false,
      "tsType": "boolean",
      "unique": false,
      "uniqueValue": [],
    },
    {
      "blobContentTypeAny": false,
      "blobContentTypeImage": false,
      "blobContentTypeText": false,
      "builtIn": true,
      "columnName": "lang_key",
      "columnRequired": false,
      "columnType": "varchar(10)",
      "createRandexp": Any<Function>,
      "entity": Any<Object>,
      "fieldInJavaBeanMethod": "LangKey",
      "fieldIsEnum": false,
      "fieldName": "langKey",
      "fieldNameAsDatabaseColumn": "lang_key",
      "fieldNameCapitalized": "LangKey",
      "fieldNameHumanized": "Lang Key",
      "fieldNameUnderscored": "lang_key",
      "fieldTranslationKey": "userManagement.langKey",
      "fieldType": "String",
      "fieldTypeAnyBlob": false,
      "fieldTypeBigDecimal": false,
      "fieldTypeBinary": false,
      "fieldTypeBlob": false,
      "fieldTypeBoolean": false,
      "fieldTypeByteBuffer": false,
      "fieldTypeBytes": false,
      "fieldTypeCharSequence": true,
      "fieldTypeDouble": false,
      "fieldTypeDuration": false,
      "fieldTypeFloat": false,
      "fieldTypeImageBlob": false,
      "fieldTypeInstant": false,
      "fieldTypeInteger": false,
      "fieldTypeLocalDate": false,
      "fieldTypeLocalTime": false,
      "fieldTypeLong": false,
      "fieldTypeNumeric": false,
      "fieldTypeString": true,
      "fieldTypeTemporal": false,
      "fieldTypeTextBlob": false,
      "fieldTypeTimed": false,
      "fieldTypeUUID": false,
      "fieldTypeZonedDateTime": false,
      "fieldValidate": true,
      "fieldValidateRules": [
        "maxlength",
      ],
      "fieldValidateRulesMaxlength": 10,
      "fieldValidateRulesPatternAngular": undefined,
      "fieldValidateRulesPatternJava": undefined,
      "fieldValidateRulesPatternReact": undefined,
      "fieldValidationMax": false,
      "fieldValidationMaxBytes": false,
      "fieldValidationMaxLength": true,
      "fieldValidationMin": false,
      "fieldValidationMinBytes": false,
      "fieldValidationMinLength": false,
      "fieldValidationPattern": false,
      "fieldValidationRequired": false,
      "fieldValidationUnique": false,
      "fieldWithContentType": false,
      "generateFakeData": Any<Function>,
      "generateFakeDataFromPattern": [Function],
      "javaFieldType": "String",
      "javaFieldTypeInteger": false,
      "javaFieldTypeLong": false,
      "javaFieldTypeString": true,
      "javaFieldTypeUUID": false,
      "javaValueGenerator": "UUID.randomUUID().toString()",
      "javaValueSample1": ""langKey1"",
      "javaValueSample2": ""langKey2"",
      "liquibaseDefaultValueAttributeName": undefined,
      "liquibaseDefaultValueAttributeValue": undefined,
      "liquibaseGenerateFakeData": true,
      "loadColumnType": "string",
      "maxlength": 10,
      "nullable": true,
      "path": [
        "langKey",
      ],
      "propertyName": "langKey",
      "propertyNameCapitalized": "LangKey",
      "propertyNameUpperSnakeCase": "LANG_KEY",
      "reference": Any<Object>,
      "relationshipsPath": [],
      "shouldCreateContentType": false,
      "shouldDropDefaultValue": false,
      "tsType": "string",
      "unique": false,
      "uniqueValue": [],
    },
  ],
  "fieldsContainNoOwnerOneToOne": false,
  "fluentMethods": true,
  "generateFakeData": Any<Function>,
  "hasCyclicRequiredRelationship": false,
  "hasImageField": true,
  "hasRelationshipWithBuiltInUser": false,
  "i18nAlertHeaderPrefix": "userManagement",
  "i18nKeyPrefix": "userManagement",
  "implementsEagerLoadApis": false,
  "importApiModelProperty": false,
  "isUsingMapsId": false,
  "jhiPrefix": "jhi",
  "jhiTablePrefix": "jhi",
  "jpaMetamodelFiltering": false,
  "mapsIdAssoc": null,
  "microfrontend": false,
  "microserviceAppName": "",
  "microserviceName": undefined,
  "name": "User",
  "officialDatabaseType": "SQL",
  "otherDtoReferences": Any<Array>,
  "otherEntities": Any<Array>,
  "otherEntitiesWithPersistableRelationship": [],
  "otherEntityPrimaryKeyTypes": [],
  "otherEntityPrimaryKeyTypesIncludesUUID": false,
  "otherReferences": Any<Array>,
  "otherRelationships": [],
  "packageName": "com.mycompany.myapp",
  "pagination": "pagination",
  "paginationInfiniteScroll": false,
  "paginationNo": false,
  "paginationPagination": true,
  "persistClass": "User",
  "persistInstance": "user",
  "persistableOtherEntities": [],
  "persistableRelationships": [],
  "primaryKey": {
    "autoGenerate": true,
    "composite": false,
    "derived": false,
    "derivedFields": Any<Array>,
    "fields": Any<Array>,
    "hasInteger": false,
    "hasLong": false,
    "hasUUID": true,
    "hibernateSnakeCaseName": "id",
    "ids": [
      {
        "autoGenerate": true,
        "field": Any<Object>,
        "getter": "getId",
        "name": "id",
        "nameCapitalized": "Id",
        "nameDotted": "id",
        "nameDottedAsserted": "id!",
        "relationshipsPath": [],
        "setter": "setId",
      },
    ],
    "javaSampleValues": [
      "UUID.randomUUID()",
      "UUID.randomUUID()",
      "UUID.randomUUID()",
    ],
    "name": "id",
    "nameCapitalized": "Id",
    "ownFields": Any<Array>,
    "relationships": [],
    "tsSampleValues": [
      "'9fec3727-3421-4967-b213-ba36557ca194'",
      "'1361f429-3817-4123-8ee3-fdf8943310b2'",
    ],
    "tsType": "string",
    "type": "UUID",
    "typeInteger": false,
    "typeLong": false,
    "typeNumeric": false,
    "typeString": false,
    "typeUUID": true,
  },
  "prodDatabaseType": "postgresql",
  "reactive": false,
  "reactiveEagerRelations": Any<Array>,
  "reactiveOtherEntities": Any<Set>,
  "reactiveRegularEagerRelations": Any<Array>,
  "reactiveUniqueEntityTypes": Any<Set>,
  "readOnly": false,
  "regularEagerRelations": Any<Array>,
  "relationships": Any<Array>,
  "relationshipsByOtherEntity": {},
  "relationshipsContainEagerLoad": false,
  "relationshipsContainOtherSideIgnore": false,
  "requiresPersistableImplementation": false,
  "resetFakerSeed": Any<Function>,
  "restClass": "UserDTO",
  "restInstance": "userDTO",
  "restProperties": Any<Array>,
  "saveUserSnapshot": false,
  "searchEngine": "no",
  "searchEngineAny": false,
  "searchEngineCouchbase": false,
  "searchEngineElasticsearch": false,
  "searchEngineNo": true,
  "service": "no",
  "serviceClass": false,
  "serviceImpl": false,
  "serviceNo": true,
  "skipClient": false,
  "skipDbChangelog": true,
  "skipUiGrouping": false,
  "springDataDescription": "Spring Data JPA",
  "tsKeyType": "string",
  "tsPrimaryKeySamples": [
    "{id: '1344246c-16a7-46d1-bb61-2043f965c8d5'}",
    "{id: '1e61df13-b2d3-459d-875e-5607a4ccdbdb'}",
  ],
  "tsSampleWithFullData": "{
  id: '2c184532-359e-417e-8339-7736058f89c7',
  login: 'tXsOip'}",
  "tsSampleWithNewData": "{
  login: 'Uc.q',
  id: null}",
  "tsSampleWithPartialData": "{
  id: '09076bdf-799b-4280-a46d-d5d1b0596d4e',
  login: 'ohu@Z'}",
  "tsSampleWithRequiredData": "{
  id: 'cdbac2c8-5af0-4c05-9390-f838bceaee96',
  login: 'M@-OK\\\\8Q7\\\\KE7Lmnl\\\\-9\\\\,gz8P\\\\@0wAqB'}",
  "uniqueEnums": {},
  "updatableEntity": true,
  "useMicroserviceJson": false,
  "workaroundEntityCannotBeEmpty": false,
  "workaroundInstantReactiveMariaDB": false,
}
`,
        );
      });
      it('should prepare EntityA', () => {
        const entity = runResult.generator.sharedData.getEntitiesMap().EntityA;
        expect(entity).toMatchInlineSnapshot(
          expectedEntity(entity),
          `
{
  "adminEntity": undefined,
  "allReferences": Any<Array>,
  "annotations": {
    "changelogDate": "20220129025419",
  },
  "anyFieldHasDocumentation": false,
  "anyFieldHasFileBasedContentType": false,
  "anyFieldHasImageContentType": false,
  "anyFieldHasTextContentType": false,
  "anyFieldIsBigDecimal": false,
  "anyFieldIsBlobDerived": false,
  "anyFieldIsDateDerived": false,
  "anyFieldIsDuration": false,
  "anyFieldIsInstant": false,
  "anyFieldIsLocalDate": false,
  "anyFieldIsLocalTime": false,
  "anyFieldIsTimeDerived": false,
  "anyFieldIsUUID": true,
  "anyFieldIsZonedDateTime": false,
  "anyPropertyHasValidation": false,
  "anyRelationshipIsRequired": false,
  "applicationType": "monolith",
  "authenticationType": "jwt",
  "baseName": "jhipster",
  "builtInUserManagement": undefined,
  "changelogDate": "20220129025419",
  "changelogDateForRecent": 2022-01-29T02:54:19.000Z,
  "clientFramework": "angular",
  "clientRootFolder": "",
  "containsBagRelationships": false,
  "cypressBootstrapEntities": true,
  "databaseType": "sql",
  "differentRelationships": {},
  "dto": "no",
  "dtoAny": false,
  "dtoMapstruct": false,
  "dtoReferences": Any<Array>,
  "dtoSuffix": "DTO",
  "eagerRelations": [],
  "embedded": false,
  "entityAbsoluteClass": "com.mycompany.myapp.domain.EntityA",
  "entityAbsoluteFolder": "com/mycompany/myapp/",
  "entityAbsolutePackage": "com.mycompany.myapp",
  "entityAngularJSSuffix": undefined,
  "entityAngularName": "EntityA",
  "entityAngularNamePlural": "EntityAS",
  "entityApi": "",
  "entityApiDescription": undefined,
  "entityApiUrl": "entity-as",
  "entityAuthority": undefined,
  "entityClass": "EntityA",
  "entityClassHumanized": "Entity A",
  "entityClassPlural": "EntityAS",
  "entityClassPluralHumanized": "Entity AS",
  "entityContainsCollectionField": false,
  "entityFileName": "entity-a",
  "entityFolderName": "entity-a",
  "entityI18nVariant": "default",
  "entityInstance": "entityA",
  "entityInstanceDbSafe": "entityA",
  "entityInstancePlural": "entityAS",
  "entityJavaPackageFolder": "",
  "entityJavadoc": undefined,
  "entityModelFileName": "entity-a",
  "entityNameCapitalized": "EntityA",
  "entityNamePlural": "EntityAS",
  "entityNamePluralizedAndSpinalCased": "entity-as",
  "entityPackage": undefined,
  "entityPage": "entity-a",
  "entityParentPathAddition": "",
  "entityPluralFileName": "entity-asundefined",
  "entityReactName": "EntityA",
  "entityReadAuthority": undefined,
  "entityServiceFileName": "entity-a",
  "entityStateName": "entity-a",
  "entitySuffix": "",
  "entityTableName": "entitya",
  "entityTranslationKey": "entityA",
  "entityTranslationKeyMenu": "entityA",
  "entityUrl": "entity-a",
  "enums": [],
  "existingEnum": false,
  "faker": Any<Object>,
  "fieldNameChoices": [],
  "fields": [
    {
      "autoGenerate": true,
      "autoGenerateByRepository": true,
      "autoGenerateByService": false,
      "blobContentTypeAny": false,
      "blobContentTypeImage": false,
      "blobContentTypeText": false,
      "columnName": "id",
      "columnRequired": false,
      "columnType": "\${uuidType}",
      "createRandexp": Any<Function>,
      "dynamic": false,
      "entity": Any<Object>,
      "fieldInJavaBeanMethod": "Id",
      "fieldIsEnum": false,
      "fieldName": "id",
      "fieldNameAsDatabaseColumn": "id",
      "fieldNameCapitalized": "Id",
      "fieldNameHumanized": "Id",
      "fieldNameUnderscored": "id",
      "fieldTranslationKey": "jhipsterApp.entityA.id",
      "fieldType": "UUID",
      "fieldTypeAnyBlob": false,
      "fieldTypeBigDecimal": false,
      "fieldTypeBinary": false,
      "fieldTypeBlob": false,
      "fieldTypeBoolean": false,
      "fieldTypeByteBuffer": false,
      "fieldTypeBytes": false,
      "fieldTypeCharSequence": true,
      "fieldTypeDouble": false,
      "fieldTypeDuration": false,
      "fieldTypeFloat": false,
      "fieldTypeImageBlob": false,
      "fieldTypeInstant": false,
      "fieldTypeInteger": false,
      "fieldTypeLocalDate": false,
      "fieldTypeLocalTime": false,
      "fieldTypeLong": false,
      "fieldTypeNumeric": false,
      "fieldTypeString": false,
      "fieldTypeTemporal": false,
      "fieldTypeTextBlob": false,
      "fieldTypeTimed": false,
      "fieldTypeUUID": true,
      "fieldTypeZonedDateTime": false,
      "fieldValidate": false,
      "fieldValidateRulesPatternAngular": undefined,
      "fieldValidateRulesPatternJava": undefined,
      "fieldValidateRulesPatternReact": undefined,
      "fieldValidationMax": false,
      "fieldValidationMaxBytes": false,
      "fieldValidationMaxLength": false,
      "fieldValidationMin": false,
      "fieldValidationMinBytes": false,
      "fieldValidationMinLength": false,
      "fieldValidationPattern": false,
      "fieldValidationRequired": false,
      "fieldValidationUnique": false,
      "fieldWithContentType": false,
      "generateFakeData": Any<Function>,
      "generateFakeDataFromPattern": [Function],
      "id": true,
      "javaFieldType": "UUID",
      "javaFieldTypeInteger": false,
      "javaFieldTypeLong": false,
      "javaFieldTypeString": false,
      "javaFieldTypeUUID": true,
      "javaValueGenerator": "UUID.randomUUID()",
      "javaValueSample1": "UUID.fromString("23d8dc04-a48b-45d9-a01d-4b728f0ad4aa")",
      "javaValueSample2": "UUID.fromString("ad79f240-3727-46c3-b89f-2cf6ebd74367")",
      "jpaGeneratedValue": true,
      "jpaGeneratedValueIdentity": false,
      "jpaGeneratedValueSequence": false,
      "liquibaseDefaultValueAttributeName": undefined,
      "liquibaseDefaultValueAttributeValue": undefined,
      "liquibaseGenerateFakeData": true,
      "loadColumnType": "\${uuidType}",
      "nullable": true,
      "path": [
        "id",
      ],
      "propertyName": "id",
      "propertyNameCapitalized": "Id",
      "propertyNameUpperSnakeCase": "ID",
      "readonly": true,
      "reference": Any<Object>,
      "relationshipsPath": [],
      "requiresPersistableImplementation": false,
      "shouldCreateContentType": false,
      "shouldDropDefaultValue": false,
      "tsType": "string",
      "unique": false,
      "uniqueValue": [
        "2189bcd3-31d2-4c42-9620-c948f41d0b0a",
        "22ccb613-6f9d-4043-9a1b-63de682c25f1",
        "19b8e903-b097-46b3-a65a-778acb6d87e9",
        "6fe41aa2-077f-41d3-b692-28efde354481",
        "6e13b9b6-a70d-4146-9d4c-ef8f187a1a20",
      ],
    },
  ],
  "fieldsContainNoOwnerOneToOne": false,
  "fluentMethods": true,
  "generateFakeData": Any<Function>,
  "hasCyclicRequiredRelationship": false,
  "hasRelationshipWithBuiltInUser": false,
  "i18nAlertHeaderPrefix": "jhipsterApp.entityA",
  "i18nKeyPrefix": "jhipsterApp.entityA",
  "implementsEagerLoadApis": false,
  "importApiModelProperty": false,
  "isUsingMapsId": false,
  "jhiPrefix": "jhi",
  "jhiTablePrefix": "jhi",
  "jpaMetamodelFiltering": false,
  "mapsIdAssoc": null,
  "microfrontend": false,
  "microserviceAppName": "",
  "microserviceName": undefined,
  "name": "EntityA",
  "officialDatabaseType": "SQL",
  "otherDtoReferences": Any<Array>,
  "otherEntities": Any<Array>,
  "otherEntitiesWithPersistableRelationship": [],
  "otherEntityPrimaryKeyTypes": [],
  "otherEntityPrimaryKeyTypesIncludesUUID": false,
  "otherReferences": Any<Array>,
  "otherRelationships": [],
  "packageName": "com.mycompany.myapp",
  "pagination": "no",
  "paginationInfiniteScroll": false,
  "paginationNo": true,
  "paginationPagination": false,
  "persistClass": "EntityA",
  "persistInstance": "entityA",
  "persistableOtherEntities": [],
  "persistableRelationships": [],
  "primaryKey": {
    "autoGenerate": true,
    "composite": false,
    "derived": false,
    "derivedFields": Any<Array>,
    "fields": Any<Array>,
    "hasInteger": false,
    "hasLong": false,
    "hasUUID": true,
    "hibernateSnakeCaseName": "id",
    "ids": [
      {
        "autoGenerate": true,
        "field": Any<Object>,
        "getter": "getId",
        "name": "id",
        "nameCapitalized": "Id",
        "nameDotted": "id",
        "nameDottedAsserted": "id!",
        "relationshipsPath": [],
        "setter": "setId",
      },
    ],
    "javaSampleValues": [
      "UUID.randomUUID()",
      "UUID.randomUUID()",
      "UUID.randomUUID()",
    ],
    "name": "id",
    "nameCapitalized": "Id",
    "ownFields": Any<Array>,
    "relationships": [],
    "tsSampleValues": [
      "'9fec3727-3421-4967-b213-ba36557ca194'",
      "'1361f429-3817-4123-8ee3-fdf8943310b2'",
    ],
    "tsType": "string",
    "type": "UUID",
    "typeInteger": false,
    "typeLong": false,
    "typeNumeric": false,
    "typeString": false,
    "typeUUID": true,
  },
  "prodDatabaseType": "postgresql",
  "reactive": false,
  "reactiveEagerRelations": Any<Array>,
  "reactiveOtherEntities": Any<Set>,
  "reactiveRegularEagerRelations": Any<Array>,
  "reactiveUniqueEntityTypes": Any<Set>,
  "readOnly": false,
  "regularEagerRelations": Any<Array>,
  "relationships": Any<Array>,
  "relationshipsByOtherEntity": {},
  "relationshipsContainEagerLoad": false,
  "relationshipsContainOtherSideIgnore": false,
  "requiresPersistableImplementation": false,
  "resetFakerSeed": Any<Function>,
  "restClass": "EntityA",
  "restInstance": "entityA",
  "restProperties": Any<Array>,
  "saveUserSnapshot": false,
  "searchEngine": "no",
  "searchEngineAny": false,
  "searchEngineCouchbase": false,
  "searchEngineElasticsearch": false,
  "searchEngineNo": true,
  "service": "no",
  "serviceClass": false,
  "serviceImpl": false,
  "serviceNo": true,
  "skipUiGrouping": false,
  "springDataDescription": "Spring Data JPA",
  "tsKeyType": "string",
  "tsPrimaryKeySamples": [
    "{id: '6fe41aa2-077f-41d3-b692-28efde354481'}",
    "{id: '6e13b9b6-a70d-4146-9d4c-ef8f187a1a20'}",
  ],
  "tsSampleWithFullData": "{
  id: '19b8e903-b097-46b3-a65a-778acb6d87e9'}",
  "tsSampleWithNewData": "{
  id: null}",
  "tsSampleWithPartialData": "{
  id: '2189bcd3-31d2-4c42-9620-c948f41d0b0a'}",
  "tsSampleWithRequiredData": "{
  id: '22ccb613-6f9d-4043-9a1b-63de682c25f1'}",
  "uniqueEnums": {},
  "updatableEntity": false,
  "useMicroserviceJson": false,
  "workaroundEntityCannotBeEmpty": false,
  "workaroundInstantReactiveMariaDB": false,
}
`,
        );
      });
    });

    describe('skipUserManagement', () => {
      before(async () => {
        await helpers.runJHipster(generator).withJHipsterConfig(
          {
            skipUserManagement: true,
          },
          [
            {
              name: 'EntityA',
              changelogDate: '20220129025419',
              fields: [
                {
                  fieldName: 'id',
                  fieldType: UUID,
                },
              ],
            },
          ],
        );
      });

      it('should write files', () => {
        expect(runResult.getSnapshot('**/{.jhipster/**, entities.json}')).toMatchInlineSnapshot(`
{
  ".jhipster/EntityA.json": {
    "contents": "{
  "annotations": {
    "changelogDate": "20220129025419"
  },
  "changelogDate": "20220129025419",
  "fields": [
    {
      "fieldName": "id",
      "fieldType": "UUID"
    }
  ],
  "name": "EntityA",
  "relationships": []
}
",
    "stateCleared": "modified",
  },
}
`);
      });
      it('should prepare entities', () => {
        expect(Object.keys(runResult.generator.sharedData.getEntitiesMap())).toMatchInlineSnapshot(`
[
  "EntityA",
]
`);
      });
      it('should prepare EntityA', () => {
        const entity = runResult.generator.sharedData.getEntitiesMap().EntityA;
        expect(entity).toMatchInlineSnapshot(
          expectedEntity(entity),
          `
{
  "adminEntity": undefined,
  "allReferences": Any<Array>,
  "annotations": {
    "changelogDate": "20220129025419",
  },
  "anyFieldHasDocumentation": false,
  "anyFieldHasFileBasedContentType": false,
  "anyFieldHasImageContentType": false,
  "anyFieldHasTextContentType": false,
  "anyFieldIsBigDecimal": false,
  "anyFieldIsBlobDerived": false,
  "anyFieldIsDateDerived": false,
  "anyFieldIsDuration": false,
  "anyFieldIsInstant": false,
  "anyFieldIsLocalDate": false,
  "anyFieldIsLocalTime": false,
  "anyFieldIsTimeDerived": false,
  "anyFieldIsUUID": true,
  "anyFieldIsZonedDateTime": false,
  "anyPropertyHasValidation": false,
  "anyRelationshipIsRequired": false,
  "applicationType": "monolith",
  "authenticationType": "jwt",
  "baseName": "jhipster",
  "builtInUserManagement": undefined,
  "changelogDate": "20220129025419",
  "changelogDateForRecent": 2022-01-29T02:54:19.000Z,
  "clientFramework": "angular",
  "clientRootFolder": "",
  "containsBagRelationships": false,
  "cypressBootstrapEntities": true,
  "databaseType": "sql",
  "differentRelationships": {},
  "dto": "no",
  "dtoAny": false,
  "dtoMapstruct": false,
  "dtoReferences": Any<Array>,
  "dtoSuffix": "DTO",
  "eagerRelations": [],
  "embedded": false,
  "entityAbsoluteClass": "com.mycompany.myapp.domain.EntityA",
  "entityAbsoluteFolder": "com/mycompany/myapp/",
  "entityAbsolutePackage": "com.mycompany.myapp",
  "entityAngularJSSuffix": undefined,
  "entityAngularName": "EntityA",
  "entityAngularNamePlural": "EntityAS",
  "entityApi": "",
  "entityApiDescription": undefined,
  "entityApiUrl": "entity-as",
  "entityAuthority": undefined,
  "entityClass": "EntityA",
  "entityClassHumanized": "Entity A",
  "entityClassPlural": "EntityAS",
  "entityClassPluralHumanized": "Entity AS",
  "entityContainsCollectionField": false,
  "entityFileName": "entity-a",
  "entityFolderName": "entity-a",
  "entityI18nVariant": "default",
  "entityInstance": "entityA",
  "entityInstanceDbSafe": "entityA",
  "entityInstancePlural": "entityAS",
  "entityJavaPackageFolder": "",
  "entityJavadoc": undefined,
  "entityModelFileName": "entity-a",
  "entityNameCapitalized": "EntityA",
  "entityNamePlural": "EntityAS",
  "entityNamePluralizedAndSpinalCased": "entity-as",
  "entityPackage": undefined,
  "entityPage": "entity-a",
  "entityParentPathAddition": "",
  "entityPluralFileName": "entity-asundefined",
  "entityReactName": "EntityA",
  "entityReadAuthority": undefined,
  "entityServiceFileName": "entity-a",
  "entityStateName": "entity-a",
  "entitySuffix": "",
  "entityTableName": "entitya",
  "entityTranslationKey": "entityA",
  "entityTranslationKeyMenu": "entityA",
  "entityUrl": "entity-a",
  "enums": [],
  "existingEnum": false,
  "faker": Any<Object>,
  "fieldNameChoices": [],
  "fields": [
    {
      "autoGenerate": true,
      "autoGenerateByRepository": true,
      "autoGenerateByService": false,
      "blobContentTypeAny": false,
      "blobContentTypeImage": false,
      "blobContentTypeText": false,
      "columnName": "id",
      "columnRequired": false,
      "columnType": "\${uuidType}",
      "createRandexp": Any<Function>,
      "dynamic": false,
      "entity": Any<Object>,
      "fieldInJavaBeanMethod": "Id",
      "fieldIsEnum": false,
      "fieldName": "id",
      "fieldNameAsDatabaseColumn": "id",
      "fieldNameCapitalized": "Id",
      "fieldNameHumanized": "Id",
      "fieldNameUnderscored": "id",
      "fieldTranslationKey": "jhipsterApp.entityA.id",
      "fieldType": "UUID",
      "fieldTypeAnyBlob": false,
      "fieldTypeBigDecimal": false,
      "fieldTypeBinary": false,
      "fieldTypeBlob": false,
      "fieldTypeBoolean": false,
      "fieldTypeByteBuffer": false,
      "fieldTypeBytes": false,
      "fieldTypeCharSequence": true,
      "fieldTypeDouble": false,
      "fieldTypeDuration": false,
      "fieldTypeFloat": false,
      "fieldTypeImageBlob": false,
      "fieldTypeInstant": false,
      "fieldTypeInteger": false,
      "fieldTypeLocalDate": false,
      "fieldTypeLocalTime": false,
      "fieldTypeLong": false,
      "fieldTypeNumeric": false,
      "fieldTypeString": false,
      "fieldTypeTemporal": false,
      "fieldTypeTextBlob": false,
      "fieldTypeTimed": false,
      "fieldTypeUUID": true,
      "fieldTypeZonedDateTime": false,
      "fieldValidate": false,
      "fieldValidateRulesPatternAngular": undefined,
      "fieldValidateRulesPatternJava": undefined,
      "fieldValidateRulesPatternReact": undefined,
      "fieldValidationMax": false,
      "fieldValidationMaxBytes": false,
      "fieldValidationMaxLength": false,
      "fieldValidationMin": false,
      "fieldValidationMinBytes": false,
      "fieldValidationMinLength": false,
      "fieldValidationPattern": false,
      "fieldValidationRequired": false,
      "fieldValidationUnique": false,
      "fieldWithContentType": false,
      "generateFakeData": Any<Function>,
      "generateFakeDataFromPattern": [Function],
      "id": true,
      "javaFieldType": "UUID",
      "javaFieldTypeInteger": false,
      "javaFieldTypeLong": false,
      "javaFieldTypeString": false,
      "javaFieldTypeUUID": true,
      "javaValueGenerator": "UUID.randomUUID()",
      "javaValueSample1": "UUID.fromString("23d8dc04-a48b-45d9-a01d-4b728f0ad4aa")",
      "javaValueSample2": "UUID.fromString("ad79f240-3727-46c3-b89f-2cf6ebd74367")",
      "jpaGeneratedValue": true,
      "jpaGeneratedValueIdentity": false,
      "jpaGeneratedValueSequence": false,
      "liquibaseDefaultValueAttributeName": undefined,
      "liquibaseDefaultValueAttributeValue": undefined,
      "liquibaseGenerateFakeData": true,
      "loadColumnType": "\${uuidType}",
      "nullable": true,
      "path": [
        "id",
      ],
      "propertyName": "id",
      "propertyNameCapitalized": "Id",
      "propertyNameUpperSnakeCase": "ID",
      "readonly": true,
      "reference": Any<Object>,
      "relationshipsPath": [],
      "requiresPersistableImplementation": false,
      "shouldCreateContentType": false,
      "shouldDropDefaultValue": false,
      "tsType": "string",
      "unique": false,
      "uniqueValue": [
        "2189bcd3-31d2-4c42-9620-c948f41d0b0a",
        "22ccb613-6f9d-4043-9a1b-63de682c25f1",
        "19b8e903-b097-46b3-a65a-778acb6d87e9",
        "6fe41aa2-077f-41d3-b692-28efde354481",
        "6e13b9b6-a70d-4146-9d4c-ef8f187a1a20",
      ],
    },
  ],
  "fieldsContainNoOwnerOneToOne": false,
  "fluentMethods": true,
  "generateFakeData": Any<Function>,
  "hasCyclicRequiredRelationship": false,
  "hasRelationshipWithBuiltInUser": false,
  "i18nAlertHeaderPrefix": "jhipsterApp.entityA",
  "i18nKeyPrefix": "jhipsterApp.entityA",
  "implementsEagerLoadApis": false,
  "importApiModelProperty": false,
  "isUsingMapsId": false,
  "jhiPrefix": "jhi",
  "jhiTablePrefix": "jhi",
  "jpaMetamodelFiltering": false,
  "mapsIdAssoc": null,
  "microfrontend": false,
  "microserviceAppName": "",
  "microserviceName": undefined,
  "name": "EntityA",
  "officialDatabaseType": "SQL",
  "otherDtoReferences": Any<Array>,
  "otherEntities": Any<Array>,
  "otherEntitiesWithPersistableRelationship": [],
  "otherEntityPrimaryKeyTypes": [],
  "otherEntityPrimaryKeyTypesIncludesUUID": false,
  "otherReferences": Any<Array>,
  "otherRelationships": [],
  "packageName": "com.mycompany.myapp",
  "pagination": "no",
  "paginationInfiniteScroll": false,
  "paginationNo": true,
  "paginationPagination": false,
  "persistClass": "EntityA",
  "persistInstance": "entityA",
  "persistableOtherEntities": [],
  "persistableRelationships": [],
  "primaryKey": {
    "autoGenerate": true,
    "composite": false,
    "derived": false,
    "derivedFields": Any<Array>,
    "fields": Any<Array>,
    "hasInteger": false,
    "hasLong": false,
    "hasUUID": true,
    "hibernateSnakeCaseName": "id",
    "ids": [
      {
        "autoGenerate": true,
        "field": Any<Object>,
        "getter": "getId",
        "name": "id",
        "nameCapitalized": "Id",
        "nameDotted": "id",
        "nameDottedAsserted": "id!",
        "relationshipsPath": [],
        "setter": "setId",
      },
    ],
    "javaSampleValues": [
      "UUID.randomUUID()",
      "UUID.randomUUID()",
      "UUID.randomUUID()",
    ],
    "name": "id",
    "nameCapitalized": "Id",
    "ownFields": Any<Array>,
    "relationships": [],
    "tsSampleValues": [
      "'9fec3727-3421-4967-b213-ba36557ca194'",
      "'1361f429-3817-4123-8ee3-fdf8943310b2'",
    ],
    "tsType": "string",
    "type": "UUID",
    "typeInteger": false,
    "typeLong": false,
    "typeNumeric": false,
    "typeString": false,
    "typeUUID": true,
  },
  "prodDatabaseType": "postgresql",
  "reactive": false,
  "reactiveEagerRelations": Any<Array>,
  "reactiveOtherEntities": Any<Set>,
  "reactiveRegularEagerRelations": Any<Array>,
  "reactiveUniqueEntityTypes": Any<Set>,
  "readOnly": false,
  "regularEagerRelations": Any<Array>,
  "relationships": Any<Array>,
  "relationshipsByOtherEntity": {},
  "relationshipsContainEagerLoad": false,
  "relationshipsContainOtherSideIgnore": false,
  "requiresPersistableImplementation": false,
  "resetFakerSeed": Any<Function>,
  "restClass": "EntityA",
  "restInstance": "entityA",
  "restProperties": Any<Array>,
  "saveUserSnapshot": false,
  "searchEngine": "no",
  "searchEngineAny": false,
  "searchEngineCouchbase": false,
  "searchEngineElasticsearch": false,
  "searchEngineNo": true,
  "service": "no",
  "serviceClass": false,
  "serviceImpl": false,
  "serviceNo": true,
  "skipUiGrouping": false,
  "springDataDescription": "Spring Data JPA",
  "tsKeyType": "string",
  "tsPrimaryKeySamples": [
    "{id: '6fe41aa2-077f-41d3-b692-28efde354481'}",
    "{id: '6e13b9b6-a70d-4146-9d4c-ef8f187a1a20'}",
  ],
  "tsSampleWithFullData": "{
  id: '19b8e903-b097-46b3-a65a-778acb6d87e9'}",
  "tsSampleWithNewData": "{
  id: null}",
  "tsSampleWithPartialData": "{
  id: '2189bcd3-31d2-4c42-9620-c948f41d0b0a'}",
  "tsSampleWithRequiredData": "{
  id: '22ccb613-6f9d-4043-9a1b-63de682c25f1'}",
  "uniqueEnums": {},
  "updatableEntity": false,
  "useMicroserviceJson": false,
  "workaroundEntityCannotBeEmpty": false,
  "workaroundInstantReactiveMariaDB": false,
}
`,
        );
      });
    });
  });
});
