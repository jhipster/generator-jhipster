rootProject.name=<%= dasherizedBaseName %>
profile=dev
assertj_core_version=3.5.2
awaility_version=1.7.0
<%_ if (databaseType === 'cassandra' || applicationType === 'gateway') { _%>
commons_codec_version=1.10
<%_ } _%>
commons_lang_version=2.6
commons_io_version=2.5
<%_ if (databaseType === 'cassandra') { _%>
cassandra_unit_spring_version=3.0.0.1
<%_ } _%>
<%_ if (testFrameworks.indexOf('cucumber') != -1) { _%>
cucumber_version=1.2.4
<%_ } _%>
dropwizard_metrics_version=3.1.2
logstash_logback_encoder_version=4.7
<%_ if (databaseType === 'cassandra' || applicationType === 'gateway') { _%>
datastax-driver.version=3.0.1
<%_ } _%>
javax_inject_version=1
javax_transaction_version=1.2
json_path_version=0.9.1
jackson_version=2.7.3
<%_ if (authenticationType == 'jwt') { _%>
jjwt_version=0.6.0
<%_ } _%>
<%_ if (searchEngine === 'elasticsearch') { _%>
jna_version=4.2.2
<%_ } _%>
<%_ if (devDatabaseType === 'mariadb' || prodDatabaseType === 'mariadb') { _%>
mariadb.version=1.4.4
<%_ } _%>
geronimo_javamail_1_4_mail_version=1.8.4
<%_ if (clusteredHttpSession == 'hazelcast' || hibernateCache == 'hazelcast') { _%>
hazelcast_version=3.6.4
<%_ } _%>
<%_ if (databaseType == 'sql') { _%>
hibernate_entitymanager_version=4.3.11.Final
HikariCP_version=2.4.6
liquibase_slf4j_version=2.0.0
liquibase_core_version=3.4.2
liquibase_hibernate4_version=3.5
<%_ } _%>
<%_ if (databaseType == 'mongodb') { _%>
mongobee_version=0.10
<%_ } _%>
hibernate_validator_version=5.2.1.Final
<%_ if (databaseType == 'cassandra' || applicationType == 'gateway') { _%>
lz4_version=1.3.0
<%_ } _%>
metrics_spark_reporter_version=1.2
metrics_spring_version=3.1.2
<%_ if (devDatabaseType === 'postgresql' || prodDatabaseType === 'postgresql') { _%>
postgresql_version=9.4-1203-jdbc42
<%_ } _%>
<%_ if (authenticationType === 'oauth2' || authenticationType === 'uaa') { _%>
spring_security_oauth2_version=2.0.9.RELEASE
<%_ } _%>
spring_security_version=4.1.1.RELEASE
springfox_version=2.5.0
spring_boot_version=1.4.0.RELEASE
<%_ if (applicationType == 'microservice' || applicationType == 'gateway' || applicationType == 'uaa') { _%>
spring_cloud_version=Brixton.SR3
<%_ } _%>
<%_ if (devDatabaseType == 'mysql' || prodDatabaseType == 'mysql') { _%>
mysql_connector_java_version=5.1.36
<%_ } _%>
h2_version=1.4.188
<%_ if (testFrameworks.indexOf('gatling') != -1) { _%>
gatling_version=2.1.7
<%_ } _%>
mapstruct_version=1.0.0.Final
<%_ if (enableSocialSignIn) { _%>
spring_social_google_version=1.0.0.RELEASE
<%_ } _%>


## below are some of the gradle performance improvement settings that can be used as required, these are not enabled by default

## The Gradle daemon aims to improve the startup and execution time of Gradle.
## When set to true the Gradle daemon is to run the build.
## TODO: disable daemon on CI, since builds should be clean and reliable on servers
## un comment the below line to enable the daemon

#org.gradle.daemon=true

## Specifies the JVM arguments used for the daemon process.
## The setting is particularly useful for tweaking memory settings.
## Default value: -Xmx1024m -XX:MaxPermSize=256m
## un comment the below line to override the daemon defaults

#org.gradle.jvmargs=-Xmx1024m -XX:MaxPermSize=256m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8

## When configured, Gradle will run in incubating parallel mode.
## This option should only be used with decoupled projects. More details, visit
## http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
## un comment the below line to enable parellel mode

#org.gradle.parallel=true

## Enables new incubating mode that makes Gradle selective when configuring projects.
## Only relevant projects are configured which results in faster builds for large multi-projects.
## http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:configuration_on_demand
## un comment the below line to enable the selective mode

#org.gradle.configureondemand=true
