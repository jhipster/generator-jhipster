configurations {
    liquibase
}

dependencies {
    liquibase "org.liquibase.ext:liquibase-hibernate4:${liquibase_hibernate4_version}"
}

task liquibaseDiffChangelog(dependsOn: compileJava, type: JavaExec) {
    group = "liquibase"

    classpath sourceSets.main.runtimeClasspath
    classpath configurations.liquibase
    main = "liquibase.integration.commandline.Main"

    args "--changeLogFile=<%= SERVER_MAIN_RES_DIR %>config/liquibase/changelog/" + buildTimestamp() +"_changelog.xml"
    args "--referenceUrl=hibernate:spring:<%=packageName%>.domain?dialect=<% if (devDatabaseType == 'mysql') {   %>org.hibernate.dialect.MySQL5InnoDBDialect<% } else if (devDatabaseType == 'postgresql') { %>org.hibernate.dialect.PostgreSQL82Dialect<% }   else if (devDatabaseType == 'h2Disk') { %>org.hibernate.dialect.H2Dialect<%} else if (devDatabaseType == 'oracle') {   %>org.hibernate.dialect.Oracle10gDialect<%   }%>&hibernate.ejb.naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringNamingStrategy"
    args "--username=<% if (devDatabaseType == 'mysql') { %>root<% } else if (devDatabaseType === 'postgresql' || devDatabaseType === 'h2Disk' || devDatabaseType === 'h2Memory') { %><%= baseName %><% } %>"
    args "--password="
    args "--url=<% if (devDatabaseType == 'mysql') { %>jdbc:mysql://localhost:3306/<%= baseName %><% } else if (devDatabaseType == 'postgresql') {   %>jdbc:postgresql://localhost:5432/<%= baseName %><% } else if (devDatabaseType == 'h2Disk') { %>jdbc:h2:file:./target/h2db/db/<%=   lowercaseBaseName %><% } else if (devDatabaseType == 'oracle') { %>jdbc:oracle:thin:@localhost:1521:<%= baseName %><% } %>"
    args "--driver=<% if (devDatabaseType == 'mysql') { %>com.mysql.jdbc.Driver<% } else if (devDatabaseType == 'postgresql') {   %>org.postgresql.Driver<% } else if (devDatabaseType == 'h2Disk') { %>org.h2.Driver<% } else if (devDatabaseType == 'oracle') {   %>oracle.jdbc.OracleDriver<% } %>"
    args "diffChangeLog"
    <% if (authenticationType == 'oauth2') { %>args "--excludeObjects=oauth_access_token, oauth_approvals, oauth_client_details,   oauth_client_token, oauth_code, oauth_refresh_token"<% } %>
}

task liquibaseAddMigration << {
    group = "liquibase"

    def dateString = buildTimestamp()
    def migration = new File("src/main/resources/config/liquibase/changelog/" + dateString + "_migration.xml")

    def content = "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n" +
        "<databaseChangeLog\n" +
        "    xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\n" +
        "    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n" +
        "    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd\">\n" +
        "\n" +
        "    <property name=\"now\" value=\"now()\" dbms=\"mysql,h2\"/>\n" +
        "    <property name=\"now\" value=\"current_timestamp\" dbms=\"postgresql\"/>\n" +
        "    <property name=\"now\" value=\"sysdate\" dbms=\"oracle\"/>\n" +
        "\n" +
        "    <property name=\"autoIncrement\" value=\"true\" dbms=\"mysql,h2,postgresql,oracle\"/>\n" +
        "\n" +
        "    <property name=\"floatType\" value=\"float4\" dbms=\"postgresql, h2\"/>\n" +
        "    <property name=\"floatType\" value=\"float\" dbms=\"mysql, oracle\"/>" +
        "" +
        "\n" +
        "    <changeSet id=\""+ dateString + "-1\" author=\"jhipster\">" +
        "\n" +
        "    </changeSet>\n" +
        "</databaseChangeLog>"

    migration.write(content)

    def masterChangeLog = new File("src/main/resources/config/liquibase/master.xml")
    def newContent = masterChangeLog.text.replace(
        "</databaseChangeLog>",
        "    <include file=\"classpath:config/liquibase/changelog/" + dateString + "_migration.xml\" relativeToChangelogFile=\"false\"/>\n" +
        "</databaseChangeLog>"
    )

    masterChangeLog.write(newContent)
}

def buildTimestamp() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}
