<%#
 Copyright 2013-2022 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
package <%= packageName %>.service.dto;

<%_ if (!databaseTypeNo) { _%>
import <%= packageName %>.domain.<%= asEntity('User') %>;
<%_ } _%>

<%_ if (user.primaryKey.hasUUID) { _%>
import java.util.UUID;
<%_ } _%>

/**
 * A DTO representing a user, with only the public attributes.
 */
public class <%= asDto('User') %> {

    private <%= user.primaryKey.type %> id;

    private String login;

<%_ for (field of user.fields.filter(field => !field.builtIn && field.relatedByOtherEntity)) { _%>
    private String <%= field.fieldName %>;
<%_ } _%>

<%_ if (!databaseTypeNo) { _%>
    public <%= asDto('User') %>() {
        // Empty constructor needed for Jackson.
    }

    public <%= asDto('User') %>(<%= asEntity('User') %> user) {
        this.id = user.getId();
        // Customize it here if you need, or not, firstName/lastName/etc
        this.login = user.getLogin();
  <%_ for (field of user.fields.filter(field => !field.builtIn && field.relatedByOtherEntity)) { _%>
        this.<%= field.fieldName %> = user.get<%= javaBeanCase(field.fieldName) %>();
  <%_ } _%>
    }

<%_ } _%>
    public <%= user.primaryKey.type %> getId() {
        return id;
    }

    public void setId(<%= user.primaryKey.type %> id) {
        this.id = id;
    }

    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

<%_ for (field of user.fields.filter(field => !field.builtIn && field.relatedByOtherEntity)) { _%>
    public String get<%= javaBeanCase(field.fieldName) %>() {
        return <%= field.fieldName %>;
    }
    public void set<%= javaBeanCase(field.fieldName) %>(String <%= field.fieldName %>) {
        this.<%= field.fieldName %> = <%= field.fieldName %>;
    }
<%_ } _%>

    // prettier-ignore
    @Override
    public String toString() {
        return "<%= asDto('User') %>{" +
            "id='" + id + '\'' +
            ", login='" + login + '\'' +
<%_ for (field of user.fields.filter(field => !field.builtIn && field.relatedByOtherEntity)) { _%>
            ", <%= field.fieldName %>='" + <%= field.fieldName %> + '\'' +
<%_ } _%>
            "}";
    }

}
