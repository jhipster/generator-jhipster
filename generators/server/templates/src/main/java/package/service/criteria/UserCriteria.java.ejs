<%#
 Copyright 2013-2021 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
package <%= packageName %>.service.criteria;

import tech.jhipster.service.Criteria;
<%_ if ( user.primaryKey.type !== 'String' ) { _%>
    import tech.jhipster.service.filter.<%= user.primaryKey.type %>Filter;
<%_ } _%>
import tech.jhipster.service.filter.StringFilter;

import java.io.Serializable;
import java.util.Objects;


public class UserCriteria implements Serializable, Criteria {

    private <%= user.primaryKey.type %>Filter id;

    private StringFilter login;

    public UserCriteria() {
    }

    public UserCriteria(UserCriteria other) {
        this.id = other.id == null ? null : other.id.copy();
        this.login = other.login == null ? null : other.login.copy();
    }

    @Override
    public UserCriteria copy() {
        return new UserCriteria(this);
    }

    public <%= user.primaryKey.type %>Filter getId() {
        return id;
    }

    public void setId(<%= user.primaryKey.type %>Filter id) {
        this.id = id;
    }

    public StringFilter getLogin() {
        return login;
    }

    public void setLogin(StringFilter login) {
        this.login = login;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        UserCriteria that = (UserCriteria) o;
        return Objects.equals(id, that.id) &&
                Objects.equals(login, that.login);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, login);
    }
}
