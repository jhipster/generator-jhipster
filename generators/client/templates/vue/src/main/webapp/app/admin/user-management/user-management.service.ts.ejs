import axios from 'axios';
import buildPaginationQueryOpts from '@/shared/sort/sorts';
<%_ if (databaseTypeCassandra) { _%>
import {Authority} from '@/shared/security/authority'
<%_ } _%>
import { IUser } from '@/shared/model/user.model';

export default class UserManagementService {

  public get(userId: <% if (userPrimaryKeyTypeString || userPrimaryKeyTypeUUID) { %>string<% } else { %>number<% } %>): Promise<any> {
    return axios.get(`api/admin/users/${userId}`);
  }

  public create(user: IUser): Promise<any> {
    return axios.post('api/admin/users', user);
  }

  public update(user: IUser): Promise<any> {
    return axios.put('api/admin/users', user);
  }

  public remove(userId: <% if (userPrimaryKeyTypeString || userPrimaryKeyTypeUUID) { %>string<% } else { %>number<% } %>): Promise<any> {
    return axios.delete(`api/admin/users/${userId}`);
  }

  public retrieve(<%_ if (!databaseTypeCassandra) { _%>req?: any <%_ } _%>): Promise<any> {
    return axios.get(`api/admin/users<%_ if (!databaseTypeCassandra) { _%>?${buildPaginationQueryOpts(req)}<%_ } _%>`);
  }

  public retrieveAuthorities(): Promise<any> {
<%_ if (!databaseTypeCassandra) { _%>
    return axios.get('api/authorities');
<%_ } else { _%>
    return Promise.resolve([Authority.USER, Authority.ADMIN]);
<%_ } _%>
  }
}
