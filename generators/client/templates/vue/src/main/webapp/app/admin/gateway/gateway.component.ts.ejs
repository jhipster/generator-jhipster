import Vue from 'vue';
import { Component, Inject } from 'vue-property-decorator';
import GatewayService from './gateway.service';

@Component
export default class <%=jhiPrefixCapitalized%>GatewayComponent extends Vue {
  public gatewayRoutes: any[] = [];
  public updatingRoutes = false;
  @Inject('gatewayService') private gatewayService: () => GatewayService;

  public mounted() : void {
    this.refresh();
  }

  public refresh() : void {
    this.updatingRoutes = true;
    this.gatewayService().findAll().then((res) => {
      this.gatewayRoutes = res.data;
      <%_ if (serviceDiscoveryType === 'consul') { _%>
      this.gatewayRoutes.forEach(route => {
        route.serviceInstances = gatewayRoutes.serviceInstances.map(serviceInstance => {
          if (serviceInstance.healthService && serviceInstance.healthService.checks) {
            if (serviceInstance.healthService.checks.filter(
              check => check.status === 'PASSING'
            ).length === serviceInstance.healthService.checks.length) {
              serviceInstance.instanceInfo.status = 'UP'
            } else {
              serviceInstance.instanceInfo.status = 'DOWN'
            }
          }
          return serviceInstance;
        });
      });
      <%_ } _%>
      this.updatingRoutes = false;
    });
  }
}
