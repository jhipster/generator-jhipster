<%#
 Copyright 2013-2022 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
import {
  currentPasswordSelector,
  newPasswordSelector,
  confirmPasswordSelector,
  submitPasswordSelector,
  classInvalid,
  classValid,
} from '../../support/commands';

describe('/account/password', () => {
  const username = Cypress.env('E2E_USERNAME') ?? 'user';
  const password = Cypress.env('E2E_PASSWORD') ?? 'user';

  beforeEach(() => {
    cy.login(username, password);
    cy.visit('/account/password');
  });

  beforeEach(() => {
    cy.intercept('POST', '/api/account/change-password').as('passwordSave');
  });

  it('should be accessible through menu', () => {
    cy.visit('');
    cy.clickOnPasswordItem();
    cy.url().should('match', /\/account\/password$/);
  });

  it("requires current password", () => {
    <%_ if (clientFrameworkReact) { _%>
    cy.get(submitPasswordSelector).click();
    <%_ } _%>
    cy.get(currentPasswordSelector)
      .should('have.class', classInvalid)
      .type('wrong-current-password')
      .blur()
      .should('have.class', classValid);
  });

  it("requires new password", () => {
    <%_ if (clientFrameworkReact) { _%>
    cy.get(submitPasswordSelector).click();
    <%_ } _%>
    cy.get(newPasswordSelector)
      .should('have.class', classInvalid)
      .type('jhipster')
      .blur()
      .should('have.class', classValid);
  });

  it("requires confirm new password", () => {
    <%_ if (clientFrameworkReact) { _%>
    cy.get(submitPasswordSelector).click();
    <%_ } _%>
    cy.get(newPasswordSelector).type('jhipster');
    cy.get(confirmPasswordSelector)
      .should('have.class', classInvalid)
      .type('jhipster')
      .blur()
      .should('have.class', classValid);
  });

  it("should fail to update password when using incorrect current password", () => {
    cy.get(currentPasswordSelector).type('wrong-current-password');
    cy.get(newPasswordSelector).type('jhipster');
    cy.get(confirmPasswordSelector).type('jhipster');
    cy.get(submitPasswordSelector).click();
    cy.wait('@passwordSave').then(({ response }) => expect(response.statusCode).to.equal(400));
  });

  it("should be able to update password", () => {
    cy.get(currentPasswordSelector).type(password);
    cy.get(newPasswordSelector).type(password);
    cy.get(confirmPasswordSelector).type(password);
    cy.get(submitPasswordSelector).click();
    cy.wait('@passwordSave').then(({ response }) => expect(response.statusCode).to.equal(200));
  });
});
