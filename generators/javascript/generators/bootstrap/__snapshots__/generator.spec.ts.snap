// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`generator - javascript:bootstrap bootstraping default config should prepare entities 1`] = `
{
  "AnotherSimple": {
    "adminEntity": undefined,
    "annotations": Any<Object>,
    "anyFieldHasDocumentation": false,
    "anyFieldHasFileBasedContentType": false,
    "anyFieldHasImageContentType": false,
    "anyFieldHasTextContentType": false,
    "anyFieldIsBigDecimal": false,
    "anyFieldIsBlobDerived": false,
    "anyFieldIsDateDerived": false,
    "anyFieldIsDuration": false,
    "anyFieldIsInstant": false,
    "anyFieldIsLocalDate": false,
    "anyFieldIsLocalTime": false,
    "anyFieldIsTimeDerived": false,
    "anyFieldIsUUID": false,
    "anyFieldIsZonedDateTime": false,
    "anyPropertyHasValidation": false,
    "anyRelationshipIsRequired": false,
    "builtInUserManagement": undefined,
    "changelogDate": "20220129000200",
    "changelogDateForRecent": Any<Object>,
    "clientRootFolder": "test-root",
    "containsBagRelationships": false,
    "differentRelationships": Any<Object>,
    "dto": "mapstruct",
    "eagerRelations": Any<Array>,
    "embedded": false,
    "entityAuthority": undefined,
    "entityClassHumanized": "Another Simple",
    "entityClassPluralHumanized": "Another Simples",
    "entityContainsCollectionField": false,
    "entityInstance": "anotherSimple",
    "entityInstancePlural": "anotherSimples",
    "entityNameCapitalized": "AnotherSimple",
    "entityNamePlural": "AnotherSimples",
    "entityNamePluralizedAndSpinalCased": "another-simples",
    "entityPackage": undefined,
    "entityReadAuthority": undefined,
    "enums": Any<Array>,
    "existingEnum": false,
    "faker": Any<Object>,
    "fieldNameChoices": Any<Array>,
    "fields": [
      {
        "autoGenerate": true,
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "dynamic": false,
        "entity": Any<Object>,
        "fieldIsEnum": false,
        "fieldName": "id",
        "fieldNameCapitalized": "Id",
        "fieldNameHumanized": "ID",
        "fieldNameUnderscored": "id",
        "fieldTranslationKey": "global.field.id",
        "fieldType": "Long",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByte": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": false,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeEnum": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLocalTime": false,
        "fieldTypeLong": true,
        "fieldTypeNumeric": true,
        "fieldTypeString": false,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": Any<Function>,
        "generateFakeDataFromPattern": Any<Function>,
        "id": true,
        "nullable": true,
        "path": [
          "id",
        ],
        "propertyName": "id",
        "propertyNameCapitalized": "Id",
        "propertyNameUpperSnakeCase": "ID",
        "tsType": "number",
        "unique": false,
        "uniqueValue": Any<Array>,
      },
      {
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "entity": Any<Object>,
        "fieldIsEnum": false,
        "fieldName": "simpleName",
        "fieldNameCapitalized": "SimpleName",
        "fieldNameHumanized": "Simple Name",
        "fieldNameUnderscored": "simple_name",
        "fieldType": "String",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByte": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": true,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeEnum": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLocalTime": false,
        "fieldTypeLong": false,
        "fieldTypeNumeric": false,
        "fieldTypeString": true,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": Any<Function>,
        "generateFakeDataFromPattern": Any<Function>,
        "nullable": true,
        "path": [
          "simpleName",
        ],
        "propertyName": "simpleName",
        "propertyNameCapitalized": "SimpleName",
        "propertyNameUpperSnakeCase": "SIMPLE_NAME",
        "tsType": "string",
        "unique": false,
        "uniqueValue": Any<Array>,
      },
    ],
    "fieldsContainNoOwnerOneToOne": false,
    "fluentMethods": true,
    "generateFakeData": Any<Function>,
    "hasCyclicRequiredRelationship": false,
    "hasRelationshipWithBuiltInUser": false,
    "implementsEagerLoadApis": false,
    "jpaMetamodelFiltering": false,
    "microserviceAppName": "",
    "microserviceName": undefined,
    "name": "AnotherSimple",
    "otherEntities": Any<Array>,
    "otherEntitiesWithPersistableRelationship": Any<Array>,
    "otherEntityPrimaryKeyTypes": Any<Array>,
    "otherEntityPrimaryKeyTypesIncludesUUID": false,
    "otherRelationships": Any<Array>,
    "pagination": "pagination",
    "persistableRelationships": Any<Array>,
    "primaryKey": {
      "autoGenerate": true,
      "composite": false,
      "derived": false,
      "derivedFields": Any<Array>,
      "fields": Any<Array>,
      "hasInteger": false,
      "hasLong": true,
      "hasUUID": false,
      "hibernateSnakeCaseName": "id",
      "ids": [
        {
          "autoGenerate": true,
          "field": Any<Object>,
          "getter": "getId",
          "name": "id",
          "nameCapitalized": "Id",
          "nameDotted": "id",
          "nameDottedAsserted": "id!",
          "setter": "setId",
        },
      ],
      "name": "id",
      "nameCapitalized": "Id",
      "ownFields": Any<Array>,
      "relationships": Any<Array>,
      "tsType": "number",
      "type": "Long",
      "typeInteger": false,
      "typeLong": true,
      "typeNumeric": true,
      "typeString": false,
      "typeUUID": false,
    },
    "reactiveEagerRelations": Any<Array>,
    "reactiveRegularEagerRelations": Any<Array>,
    "readOnly": false,
    "regularEagerRelations": Any<Array>,
    "relationships": [],
    "relationshipsByOtherEntity": Any<Object>,
    "relationshipsContainEagerLoad": false,
    "requiresPersistableImplementation": false,
    "resetFakerSeed": Any<Function>,
    "searchEngine": "no",
    "service": "serviceImpl",
    "skipUiGrouping": false,
    "updatableEntity": true,
    "useMicroserviceJson": false,
  },
  "Simple": {
    "adminEntity": undefined,
    "annotations": Any<Object>,
    "anyFieldHasDocumentation": false,
    "anyFieldHasFileBasedContentType": false,
    "anyFieldHasImageContentType": false,
    "anyFieldHasTextContentType": false,
    "anyFieldIsBigDecimal": false,
    "anyFieldIsBlobDerived": false,
    "anyFieldIsDateDerived": false,
    "anyFieldIsDuration": false,
    "anyFieldIsInstant": false,
    "anyFieldIsLocalDate": false,
    "anyFieldIsLocalTime": false,
    "anyFieldIsTimeDerived": false,
    "anyFieldIsUUID": false,
    "anyFieldIsZonedDateTime": false,
    "anyPropertyHasValidation": false,
    "anyRelationshipIsRequired": false,
    "builtInUserManagement": undefined,
    "changelogDate": "20220129000100",
    "changelogDateForRecent": Any<Object>,
    "containsBagRelationships": false,
    "differentRelationships": Any<Object>,
    "dto": "no",
    "eagerRelations": Any<Array>,
    "embedded": false,
    "entityAuthority": undefined,
    "entityClassHumanized": "Simple",
    "entityClassPluralHumanized": "Simples",
    "entityContainsCollectionField": false,
    "entityInstance": "simple",
    "entityInstancePlural": "simples",
    "entityNameCapitalized": "Simple",
    "entityNamePlural": "Simples",
    "entityNamePluralizedAndSpinalCased": "simples",
    "entityPackage": undefined,
    "entityReadAuthority": undefined,
    "enums": Any<Array>,
    "existingEnum": false,
    "faker": Any<Object>,
    "fieldNameChoices": Any<Array>,
    "fields": [
      {
        "autoGenerate": true,
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "dynamic": false,
        "entity": Any<Object>,
        "fieldIsEnum": false,
        "fieldName": "id",
        "fieldNameCapitalized": "Id",
        "fieldNameHumanized": "ID",
        "fieldNameUnderscored": "id",
        "fieldTranslationKey": "global.field.id",
        "fieldType": "Long",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByte": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": false,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeEnum": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLocalTime": false,
        "fieldTypeLong": true,
        "fieldTypeNumeric": true,
        "fieldTypeString": false,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": Any<Function>,
        "generateFakeDataFromPattern": Any<Function>,
        "id": true,
        "nullable": true,
        "path": [
          "id",
        ],
        "propertyName": "id",
        "propertyNameCapitalized": "Id",
        "propertyNameUpperSnakeCase": "ID",
        "tsType": "number",
        "unique": false,
        "uniqueValue": Any<Array>,
      },
      {
        "blobContentTypeAny": false,
        "blobContentTypeImage": false,
        "blobContentTypeText": false,
        "entity": Any<Object>,
        "fieldIsEnum": false,
        "fieldName": "simpleName",
        "fieldNameCapitalized": "SimpleName",
        "fieldNameHumanized": "Simple Name",
        "fieldNameUnderscored": "simple_name",
        "fieldType": "String",
        "fieldTypeAnyBlob": false,
        "fieldTypeBigDecimal": false,
        "fieldTypeBinary": false,
        "fieldTypeBlob": false,
        "fieldTypeBoolean": false,
        "fieldTypeByte": false,
        "fieldTypeByteBuffer": false,
        "fieldTypeBytes": false,
        "fieldTypeCharSequence": true,
        "fieldTypeDouble": false,
        "fieldTypeDuration": false,
        "fieldTypeEnum": false,
        "fieldTypeFloat": false,
        "fieldTypeImageBlob": false,
        "fieldTypeInstant": false,
        "fieldTypeInteger": false,
        "fieldTypeLocalDate": false,
        "fieldTypeLocalTime": false,
        "fieldTypeLong": false,
        "fieldTypeNumeric": false,
        "fieldTypeString": true,
        "fieldTypeTemporal": false,
        "fieldTypeTextBlob": false,
        "fieldTypeTimed": false,
        "fieldTypeUUID": false,
        "fieldTypeZonedDateTime": false,
        "fieldValidate": false,
        "fieldValidationMax": false,
        "fieldValidationMaxBytes": false,
        "fieldValidationMaxLength": false,
        "fieldValidationMin": false,
        "fieldValidationMinBytes": false,
        "fieldValidationMinLength": false,
        "fieldValidationPattern": false,
        "fieldValidationRequired": false,
        "fieldValidationUnique": false,
        "fieldWithContentType": false,
        "generateFakeData": Any<Function>,
        "generateFakeDataFromPattern": Any<Function>,
        "nullable": true,
        "path": [
          "simpleName",
        ],
        "propertyName": "simpleName",
        "propertyNameCapitalized": "SimpleName",
        "propertyNameUpperSnakeCase": "SIMPLE_NAME",
        "tsType": "string",
        "unique": false,
        "uniqueValue": Any<Array>,
      },
    ],
    "fieldsContainNoOwnerOneToOne": false,
    "fluentMethods": true,
    "generateFakeData": Any<Function>,
    "hasCyclicRequiredRelationship": false,
    "hasRelationshipWithBuiltInUser": false,
    "implementsEagerLoadApis": false,
    "jpaMetamodelFiltering": true,
    "microserviceAppName": "",
    "microserviceName": undefined,
    "name": "Simple",
    "otherEntities": Any<Array>,
    "otherEntitiesWithPersistableRelationship": Any<Array>,
    "otherEntityPrimaryKeyTypes": Any<Array>,
    "otherEntityPrimaryKeyTypesIncludesUUID": false,
    "otherRelationships": Any<Array>,
    "pagination": "no",
    "persistableRelationships": Any<Array>,
    "primaryKey": {
      "autoGenerate": true,
      "composite": false,
      "derived": false,
      "derivedFields": Any<Array>,
      "fields": Any<Array>,
      "hasInteger": false,
      "hasLong": true,
      "hasUUID": false,
      "hibernateSnakeCaseName": "id",
      "ids": [
        {
          "autoGenerate": true,
          "field": Any<Object>,
          "getter": "getId",
          "name": "id",
          "nameCapitalized": "Id",
          "nameDotted": "id",
          "nameDottedAsserted": "id!",
          "setter": "setId",
        },
      ],
      "name": "id",
      "nameCapitalized": "Id",
      "ownFields": Any<Array>,
      "relationships": Any<Array>,
      "tsType": "number",
      "type": "Long",
      "typeInteger": false,
      "typeLong": true,
      "typeNumeric": true,
      "typeString": false,
      "typeUUID": false,
    },
    "reactiveEagerRelations": Any<Array>,
    "reactiveRegularEagerRelations": Any<Array>,
    "readOnly": false,
    "regularEagerRelations": Any<Array>,
    "relationships": [],
    "relationshipsByOtherEntity": Any<Object>,
    "relationshipsContainEagerLoad": false,
    "requiresPersistableImplementation": false,
    "resetFakerSeed": Any<Function>,
    "searchEngine": "no",
    "service": "no",
    "skipUiGrouping": false,
    "updatableEntity": true,
    "useMicroserviceJson": false,
  },
}
`;

exports[`generator - javascript:bootstrap bootstraping default config should prepare entity names 1`] = `
[
  "Simple",
  "AnotherSimple",
]
`;

exports[`generator - javascript:bootstrap customVersion-commonjs should call source snapshot 1`] = `{}`;

exports[`generator - javascript:bootstrap customVersion-commonjs should match files snapshot 1`] = `
{
  ".yo-rc.json": ObjectContaining {
    "contents": Any<String>,
  },
}
`;

exports[`generator - javascript:bootstrap packageJsonNodeEngine(false)-module should call source snapshot 1`] = `{}`;

exports[`generator - javascript:bootstrap packageJsonNodeEngine(false)-module should match files snapshot 1`] = `
{
  ".yo-rc.json": ObjectContaining {
    "contents": Any<String>,
  },
}
`;

exports[`generator - javascript:bootstrap packageJsonNodeEngine(true) should call source snapshot 1`] = `{}`;

exports[`generator - javascript:bootstrap packageJsonNodeEngine(true) should match files snapshot 1`] = `
{
  ".yo-rc.json": ObjectContaining {
    "contents": Any<String>,
  },
}
`;
