// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generator - spring-cache caffeine-gradle should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "gradle/cache.gradle": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheConfiguration.java": {
    "stateCleared": "modified",
  },
}
`;

exports[`generator - spring-cache caffeine-gradle should match source calls 1`] = `
{
  "applyFromGradle": [
    {
      "script": "gradle/cache.gradle",
    },
  ],
}
`;

exports[`generator - spring-cache caffeine-maven should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheConfiguration.java": {
    "stateCleared": "modified",
  },
}
`;

exports[`generator - spring-cache caffeine-maven should match source calls 1`] = `
{
  "addMavenDefinition": [
    {
      "dependencies": [
        {
          "artifactId": "cache-api",
          "groupId": "javax.cache",
        },
        {
          "artifactId": "jcache",
          "groupId": "com.github.ben-manes.caffeine",
        },
        {
          "artifactId": "caffeine",
          "groupId": "com.github.ben-manes.caffeine",
        },
        {
          "artifactId": "config",
          "groupId": "com.typesafe",
          "version": "\${typesafe.version}",
        },
      ],
      "properties": [
        {
          "property": "typesafe.version",
          "value": "'TYPESAFE-VERSION'",
        },
      ],
    },
    {
      "dependencies": [
        {
          "artifactId": "hibernate-jcache",
          "groupId": "org.hibernate.orm",
          "version": "\${hibernate.version}",
        },
      ],
    },
  ],
  "addMavenDependency": [
    {
      "artifactId": "spring-boot-starter-cache",
      "groupId": "org.springframework.boot",
    },
  ],
}
`;

exports[`generator - spring-cache ehcache-gradle should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "gradle/cache.gradle": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheConfiguration.java": {
    "stateCleared": "modified",
  },
}
`;

exports[`generator - spring-cache ehcache-gradle should match source calls 1`] = `
{
  "applyFromGradle": [
    {
      "script": "gradle/cache.gradle",
    },
  ],
}
`;

exports[`generator - spring-cache ehcache-maven should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheConfiguration.java": {
    "stateCleared": "modified",
  },
}
`;

exports[`generator - spring-cache ehcache-maven should match source calls 1`] = `
{
  "addMavenDefinition": [
    {
      "dependencies": [
        {
          "artifactId": "cache-api",
          "groupId": "javax.cache",
        },
        {
          "artifactId": "ehcache",
          "classifier": "jakarta",
          "groupId": "org.ehcache",
        },
      ],
    },
    {
      "dependencies": [
        {
          "artifactId": "hibernate-jcache",
          "groupId": "org.hibernate.orm",
          "version": "\${hibernate.version}",
        },
      ],
    },
  ],
  "addMavenDependency": [
    {
      "artifactId": "spring-boot-starter-cache",
      "groupId": "org.springframework.boot",
    },
  ],
}
`;

exports[`generator - spring-cache hazelcast-gradle should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "gradle/cache.gradle": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheConfiguration.java": {
    "stateCleared": "modified",
  },
}
`;

exports[`generator - spring-cache hazelcast-gradle should match source calls 1`] = `
{
  "applyFromGradle": [
    {
      "script": "gradle/cache.gradle",
    },
  ],
}
`;

exports[`generator - spring-cache hazelcast-maven should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheConfiguration.java": {
    "stateCleared": "modified",
  },
}
`;

exports[`generator - spring-cache hazelcast-maven should match source calls 1`] = `
{
  "addMavenDefinition": [
    {
      "dependencies": [
        {
          "artifactId": "cache-api",
          "groupId": "javax.cache",
        },
        {
          "artifactId": "hazelcast-spring",
          "groupId": "com.hazelcast",
          "version": "\${hazelcast-spring.version}",
        },
      ],
      "properties": [
        {
          "property": "hazelcast-spring.version",
          "value": "'HAZELCAST-SPRING-VERSION'",
        },
      ],
    },
    {
      "dependencies": [
        {
          "artifactId": "hazelcast-hibernate53",
          "groupId": "com.hazelcast",
          "version": "\${hazelcast-hibernate53.version}",
        },
      ],
      "properties": [
        {
          "property": "hazelcast-hibernate53.version",
          "value": "'HAZELCAST-HIBERNATE-53-VERSION'",
        },
      ],
    },
  ],
  "addMavenDependency": [
    {
      "artifactId": "spring-boot-starter-cache",
      "groupId": "org.springframework.boot",
    },
  ],
}
`;

exports[`generator - spring-cache infinispan-gradle should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "gradle/cache.gradle": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheConfiguration.java": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheFactoryConfiguration.java": {
    "stateCleared": "modified",
  },
}
`;

exports[`generator - spring-cache infinispan-gradle should match source calls 1`] = `
{
  "applyFromGradle": [
    {
      "script": "gradle/cache.gradle",
    },
  ],
}
`;

exports[`generator - spring-cache infinispan-maven should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheConfiguration.java": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheFactoryConfiguration.java": {
    "stateCleared": "modified",
  },
}
`;

exports[`generator - spring-cache infinispan-maven should match source calls 1`] = `
{
  "addMavenDefinition": [
    {
      "dependencies": [
        {
          "artifactId": "cache-api",
          "groupId": "javax.cache",
        },
        {
          "artifactId": "infinispan-hibernate-cache-v62",
          "groupId": "org.infinispan",
        },
        {
          "artifactId": "infinispan-spring-boot3-starter-embedded",
          "groupId": "org.infinispan",
        },
        {
          "artifactId": "infinispan-commons-jakarta",
          "groupId": "org.infinispan",
        },
        {
          "artifactId": "infinispan-core-jakarta",
          "groupId": "org.infinispan",
        },
        {
          "artifactId": "infinispan-component-annotations",
          "groupId": "org.infinispan",
          "scope": "compile",
        },
      ],
    },
  ],
  "addMavenDependency": [
    {
      "artifactId": "spring-boot-starter-cache",
      "groupId": "org.springframework.boot",
    },
  ],
}
`;

exports[`generator - spring-cache memcached-gradle should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "gradle/cache.gradle": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheConfiguration.java": {
    "stateCleared": "modified",
  },
}
`;

exports[`generator - spring-cache memcached-gradle should match source calls 1`] = `
{
  "applyFromGradle": [
    {
      "script": "gradle/cache.gradle",
    },
  ],
}
`;

exports[`generator - spring-cache memcached-maven should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheConfiguration.java": {
    "stateCleared": "modified",
  },
}
`;

exports[`generator - spring-cache memcached-maven should match source calls 1`] = `
{
  "addMavenDefinition": [
    {
      "dependencies": [
        {
          "artifactId": "cache-api",
          "groupId": "javax.cache",
        },
        {
          "artifactId": "spring-cache",
          "groupId": "com.google.code.simple-spring-memcached",
        },
        {
          "artifactId": "xmemcached-provider",
          "groupId": "com.google.code.simple-spring-memcached",
        },
        {
          "artifactId": "xmemcached",
          "groupId": "com.googlecode.xmemcached",
        },
      ],
    },
  ],
  "addMavenDependency": [
    {
      "artifactId": "spring-boot-starter-cache",
      "groupId": "org.springframework.boot",
    },
  ],
}
`;

exports[`generator - spring-cache redis-gradle should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "gradle/cache.gradle": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheConfiguration.java": {
    "stateCleared": "modified",
  },
  "src/test/java/com/mycompany/myapp/config/EmbeddedRedis.java": {
    "stateCleared": "modified",
  },
  "src/test/java/com/mycompany/myapp/config/RedisTestContainer.java": {
    "stateCleared": "modified",
  },
  "src/test/java/com/mycompany/myapp/config/RedisTestContainersSpringContextCustomizerFactory.java": {
    "stateCleared": "modified",
  },
}
`;

exports[`generator - spring-cache redis-gradle should match source calls 1`] = `
{
  "addTestSpringFactory": [
    {
      "key": "org.springframework.test.context.ContextCustomizerFactory",
      "value": "com.mycompany.myapp.config.RedisTestContainersSpringContextCustomizerFactory",
    },
  ],
  "applyFromGradle": [
    {
      "script": "gradle/cache.gradle",
    },
  ],
}
`;

exports[`generator - spring-cache redis-maven should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
  "src/main/java/com/mycompany/myapp/config/CacheConfiguration.java": {
    "stateCleared": "modified",
  },
  "src/test/java/com/mycompany/myapp/config/EmbeddedRedis.java": {
    "stateCleared": "modified",
  },
  "src/test/java/com/mycompany/myapp/config/RedisTestContainer.java": {
    "stateCleared": "modified",
  },
  "src/test/java/com/mycompany/myapp/config/RedisTestContainersSpringContextCustomizerFactory.java": {
    "stateCleared": "modified",
  },
}
`;

exports[`generator - spring-cache redis-maven should match source calls 1`] = `
{
  "addMavenDefinition": [
    {
      "dependencies": [
        {
          "artifactId": "junit-jupiter",
          "groupId": "org.testcontainers",
          "scope": "test",
        },
        {
          "artifactId": "testcontainers",
          "groupId": "org.testcontainers",
          "scope": "test",
        },
        {
          "artifactId": "redisson",
          "groupId": "org.redisson",
        },
      ],
    },
    {
      "dependencies": [
        {
          "artifactId": "hibernate-jcache",
          "groupId": "org.hibernate.orm",
          "version": "\${hibernate.version}",
        },
      ],
    },
  ],
  "addMavenDependency": [
    {
      "artifactId": "spring-boot-starter-cache",
      "groupId": "org.springframework.boot",
    },
  ],
  "addTestSpringFactory": [
    {
      "key": "org.springframework.test.context.ContextCustomizerFactory",
      "value": "com.mycompany.myapp.config.RedisTestContainersSpringContextCustomizerFactory",
    },
  ],
}
`;
