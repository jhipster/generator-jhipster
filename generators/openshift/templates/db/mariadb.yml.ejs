<%#
 Copyright 2013-2019 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
# DB template.
#
# This defines all the configurable parameters and other objects that are needed to run the MariaDB service. This template can even be
# saved in OpenShift namespace as well so that have the flexibility to do any project specific customizations. Pls note wherever
# displayName says *** PLEASE DO NOT CHANGE THIS ***, don't touch that as those parameters will be referenced in other places.
#
apiVersion: v1
kind: Template
metadata:
  name: <%= app.baseName.toLowerCase() %>-mariadb-template
  namespace: <%= openshiftNamespace %>
  annotations:
    description: This template defines objects that are required to spin up a mariadb pod
    tags: db, <%= app.baseName.toLowerCase() %>-mariadb<% if (storageType === 'persistent') { %> ,persistent <% } %> <% if (storageType === 'ephemeral') { %> ,ephemeral <% } %>
    openshift.io/display-name: <%= app.baseName.toLowerCase() %>-mariadb-template
    openshift.io/long-description: >-
        This template provides objects that are required to spin up a mariadb pod. <% if (storageType ==
        'persistent') { %>The database is stored on persistent storage, so any restart of the service will not cause any impact to the data.
        Please make sure you have provisioned PVs (Persistent Volumes) before using this template. <% } %>
        <% if (storageType === 'ephemeral') { %>The database is not stored on persistent storage, so any restart of the service will result in all data being lost.<% } %>
    openshift.io/provider-display-name: JHipster-OpenShift
labels:
  app: <%= app.baseName.toLowerCase() %>-mariadb
  createdBy: JHipster-Team
parameters:
  -
    name: APPLICATION_NAME
    value: <%= app.baseName.toLowerCase() %>-mariadb
    description: Name of the application
    required: true
    displayName: Application Name
  -
    name: SECRET_REF
    value: <%= app.baseName.toLowerCase() %>-ds-secret-ref
    description: Name of the secret reference
    required: true
    displayName: "*** PLEASE DO NOT CHANGE THIS ***"
  -
    name: MYSQL_USER
    displayName: MariaDB Connection Username
    description: Username for MariaDB user that will be used for accessing the database.
    generate: expression
    from: user[A-Z0-9]{3}
    required: true
  -
    name: MYSQL_PASSWORD
    displayName: MariaDB Connection Password
    description: Password for the MariaDB connection user.
    generate: expression
    from: "[a-zA-Z0-9]{16}"
    required: true
  -
    name: MYSQL_ROOT_PASSWORD
    displayName: MariaDB root user Password
    description: Password for the MariaDB root user.
    generate: expression
    from: "[a-zA-Z0-9]{16}"
    required: true
  -
    name: DATABASE_NAME
    value: <%= app.baseName.toLowerCase() %>
    displayName: MariaDB DB Name
    description: Name of the MariaDB database accessed.
    required: true
  -
    name: VOLUME_CAPACITY
    displayName: Volume Capacity
    description: Volume space available for data, e.g. 512Mi, 2Gi.
    value: 1Gi
    required: true
objects:
  -
    apiVersion: v1
    kind: Secret
    metadata:
      name: ${SECRET_REF}
    stringData:
      database-user: "${MYSQL_USER}"
      database-password: "${MYSQL_PASSWORD}"
      database-root-password: "${MYSQL_ROOT_PASSWORD}"
<%_ if (storageType === 'persistent') { _%>
  -
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${APPLICATION_NAME}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: "${VOLUME_CAPACITY}"
<%_ } _%>
  -
    apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
# This is to define the deployment strategy (either be Rolling or Recreate)
#     strategy:
#       type: Rolling
#       rollingParams:
#         updatePeriodSeconds: 1
#         intervalSeconds: 1
#         timeoutSeconds: 600
#         maxUnavailable: 25%
#         maxSurge: 25%
#       resources:
      triggers:
        -
          type: ConfigChange
      replicas: 1
      selector:
        app: ${APPLICATION_NAME}
      template:
        metadata:
          labels:
            app: ${APPLICATION_NAME}
        spec:
          volumes:
          - name: ${APPLICATION_NAME}-data
            <%_ if (storageType === 'persistent') { _%>
            persistentVolumeClaim:
              claimName: ${APPLICATION_NAME}
            <%_ } _%>
            <%_ if (storageType === 'ephemeral') { _%>
            emptyDir: {}
            <%_ } _%>
          containers:
          - name: ${APPLICATION_NAME}
            image: <%= DOCKER_MARIADB %>
            env:
#            - name: MYSQL_USER
#              value: root
#            - name: MYSQL_ALLOW_EMPTY_PASSWORD
#              value: 'yes'
            - name: MYSQL_DATABASE
              value: ${DATABASE_NAME}
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: ${SECRET_REF}
                  key: database-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${SECRET_REF}
                  key: database-password
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ${SECRET_REF}
                  key: database-root-password
    #        command:
    #        - mysqld
    #        - --lower_case_table_names=1
    #        - --skip-ssl
    #        - --character_set_server=utf8mb4
    #        - --explicit_defaults_for_timestamp
            ports:
            - containerPort: 3306
              protocol: TCP
            readinessProbe:
              timeoutSeconds: 1
              initialDelaySeconds: 5
              exec:
                command:
                - "/bin/sh"
                - "-i"
                - "-c"
                - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                  -e 'SELECT 1'
            livenessProbe:
              timeoutSeconds: 1
              initialDelaySeconds: 30
              tcpSocket:
                port: 3306
            volumeMounts:
            - name: ${APPLICATION_NAME}-data
              mountPath: /var/lib/mysql
            resources:
            imagePullPolicy: IfNotPresent
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
  -
    apiVersion: v1
    kind: Service
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      ports:
        -
          name: mariadb-bc
          protocol: TCP
          port: 3306
          targetPort: 3306
        -
          name: mariadb
          protocol: TCP
          port: 80
          targetPort: 3306
      selector:
        app: ${APPLICATION_NAME}
