<%#
 Copyright 2013-2023 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>

{
  "name": "<%= dasherizedBaseName %>",
  "version": "0.0.1-SNAPSHOT",
  "description": "<%= projectDescription %>",
  "private": true,
  "license": "UNLICENSED",
  "cacheDirectories": [
    "node_modules"
  ],
  "dependencies": {
    "@angular/common": "<%= this.dependabotPackageJson.dependencies['@angular/common'] %>",
    "@angular/compiler": "<%= this.dependabotPackageJson.dependencies['@angular/common'] %>",
    "@angular/core": "<%= this.dependabotPackageJson.dependencies['@angular/common'] %>",
    "@angular/forms": "<%= this.dependabotPackageJson.dependencies['@angular/common'] %>",
    "@angular/localize": "<%= this.dependabotPackageJson.dependencies['@angular/common'] %>",
    "@angular/platform-browser": "<%= this.dependabotPackageJson.dependencies['@angular/common'] %>",
    "@angular/platform-browser-dynamic": "<%= this.dependabotPackageJson.dependencies['@angular/common'] %>",
    "@angular/router": "<%= this.dependabotPackageJson.dependencies['@angular/common'] %>",
    "@fortawesome/angular-fontawesome": "<%= this.dependabotPackageJson.dependencies['@fortawesome/angular-fontawesome'] %>",
    "@fortawesome/fontawesome-svg-core": "<%= this.dependabotPackageJson.dependencies['@fortawesome/fontawesome-svg-core'] %>",
    "@fortawesome/free-solid-svg-icons": "<%= this.dependabotPackageJson.dependencies['@fortawesome/free-solid-svg-icons'] %>",
    "@ng-bootstrap/ng-bootstrap": "<%= this.dependabotPackageJson.dependencies['@ng-bootstrap/ng-bootstrap'] %>",
<%_ if (enableTranslation) { _%>
    "@ngx-translate/core": "<%= this.dependabotPackageJson.dependencies['@ngx-translate/core'] %>",
    "@ngx-translate/http-loader": "<%= this.dependabotPackageJson.dependencies['@ngx-translate/http-loader'] %>",
<%_ } _%>
    "bootstrap": "<%= this.dependabotPackageJson.dependencies.bootstrap %>",
    <%_ if (!clientThemeNone) { _%>
    "bootswatch": "<%= this.dependabotPackageJson.dependencies.bootswatch %>",
    <%_ } _%>
    "dayjs": "<%= this.dependabotPackageJson.dependencies['dayjs'] %>",
    <%_ if (authenticationTypeSession && communicationSpringWebsocket) { _%>
    "ngx-cookie-service": "<%= this.dependabotPackageJson.dependencies['ngx-cookie-service'] %>",
    <%_ } _%>
    "ngx-infinite-scroll": "<%= this.dependabotPackageJson.dependencies['ngx-infinite-scroll'] %>",
    "ngx-webstorage": "<%= this.dependabotPackageJson.dependencies['ngx-webstorage'] %>",
    "@popperjs/core": "<%= this.dependabotPackageJson.dependencies['@popperjs/core'] %>",
    "rxjs": "<%= this.dependabotPackageJson.dependencies['rxjs'] %>",
<%_ if (communicationSpringWebsocket) { _%>
    "sockjs-client": "1.6.1",
    "@stomp/rx-stomp": "1.2.0",
<%_ } _%>
<%_ if (skipServer) { _%>
    "sonar-scanner": "3.1.0",
<%_ } _%>
    "tslib": "<%= this.dependabotPackageJson.dependencies['tslib'] %>",
    "zone.js": "<%= this.dependabotPackageJson.dependencies['zone.js'] %>"
  },
  "devDependencies": {
<%_ if (microfrontend && applicationTypeGateway) { _%>
    "@angular-architects/module-federation-runtime": "<%= this.dependabotPackageJson.devDependencies['@angular-architects/module-federation-runtime'] %>",
<%_ } _%>
<%_ if (communicationSpringWebsocket) { _%>
    "@types/sockjs-client": "1.5.1",
<%_ } _%>
<%_ if (cypressTests) { _%>
    "cypress": "<%= this.dependabotPackageJson.devDependencies['cypress'] %>",
<%_ } _%>
<%_ if (enableTranslation) { _%>
    "folder-hash": "<%= this.dependabotPackageJson.devDependencies['folder-hash'] %>",
    "merge-jsons-webpack-plugin": "<%= this.dependabotPackageJson.devDependencies['merge-jsons-webpack-plugin'] %>",
<%_ } _%>
<%_ if (!skipServer) { _%>
    "prettier-plugin-java": "<%= this.dependabotPackageJson.devDependencies['prettier-plugin-java'] %>",
<%_ } _%>
    "@angular/cli": "<%= this.dependabotPackageJson.devDependencies['@angular/cli'] %>",
    "@angular/compiler-cli": "<%= this.dependabotPackageJson.dependencies['@angular/common'] %>",
    "@angular/service-worker": "<%= this.dependabotPackageJson.dependencies['@angular/common'] %>",
    "@angular-builders/custom-webpack": "<%= this.dependabotPackageJson.devDependencies['@angular-builders/custom-webpack'] %>",
    "@angular-builders/jest": "<%= this.dependabotPackageJson.devDependencies['@angular-builders/jest'] %>",
    "@angular-devkit/build-angular": "<%= this.dependabotPackageJson.devDependencies['@angular/cli'] %>",
    "@angular-eslint/eslint-plugin": "<%= this.dependabotPackageJson.devDependencies['@angular-eslint/eslint-plugin'] %>",
    "@types/jest": "<%= this.dependabotPackageJson.devDependencies['@types/jest'] %>",
    "@types/node": "<%= this.dependabotPackageJson.devDependencies['@types/node'] %>",
    "@typescript-eslint/eslint-plugin": "<%= this.dependabotPackageJson.devDependencies['@typescript-eslint/eslint-plugin'] %>",
    "@typescript-eslint/parser": "<%= this.dependabotPackageJson.devDependencies['@typescript-eslint/eslint-plugin'] %>",
    "browser-sync": "<%= this.dependabotPackageJson.devDependencies['browser-sync'] %>",
    "browser-sync-webpack-plugin": "<%= this.dependabotPackageJson.devDependencies['browser-sync-webpack-plugin'] %>",
    "copy-webpack-plugin": "<%= this.dependabotPackageJson.devDependencies['copy-webpack-plugin'] %>",
    "eslint": "<%= this.dependabotPackageJson.devDependencies['eslint'] %>",
    "eslint-config-prettier": "<%= this.dependabotPackageJson.devDependencies['eslint-config-prettier'] %>",
    "eslint-webpack-plugin": "<%= this.dependabotPackageJson.devDependencies['eslint-webpack-plugin'] %>",
<%_ if (!skipJhipsterDependencies) { _%>
    "generator-jhipster": "<%= jhipsterVersion %>",
  <%_ blueprints.forEach(blueprint => { _%>
    "<%= blueprint.name %>": "<%= blueprint.version %>",
  <%_ }); _%>
<%_ } _%>
    "jest": "<%= this.dependabotPackageJson.devDependencies['jest'] %>",
    "jest-environment-jsdom": "<%= this.dependabotPackageJson.devDependencies['jest'] %>",
    "jest-preset-angular": "<%= this.dependabotPackageJson.devDependencies['jest-preset-angular'] %>",
    "jest-date-mock": "<%= this.dependabotPackageJson.devDependencies['jest-date-mock'] %>",
    "jest-junit": "<%= this.dependabotPackageJson.devDependencies['jest-junit'] %>",
    "jest-sonar": "<%= this.dependabotPackageJson.devDependencies['jest-sonar'] %>",
    "prettier": "<%= this.dependabotPackageJson.devDependencies['prettier'] %>",
    "prettier-plugin-packagejson": "<%= this.dependabotPackageJson.devDependencies['prettier-plugin-packagejson'] %>",
<%_ if (enableI18nRTL) { _%>
    "postcss-rtlcss": "<%= this.dependabotPackageJson.devDependencies['postcss-rtlcss'] %>",
<%_ } _%>
    "rimraf": "<%= this.dependabotPackageJson.devDependencies['rimraf'] %>",
    "swagger-ui-dist": "<%= this.dependabotPackageJson.devDependencies['swagger-ui-dist'] %>",
    "ts-jest": "<%= this.dependabotPackageJson.devDependencies['ts-jest'] %>",
    "typescript": "<%= this.dependabotPackageJson.devDependencies['typescript'] %>",
    "webpack-bundle-analyzer": "<%= this.dependabotPackageJson.devDependencies['webpack-bundle-analyzer'] %>",
    "webpack-merge": "<%= this.dependabotPackageJson.devDependencies['webpack-merge'] %>",
    "webpack-notifier": "<%= this.dependabotPackageJson.devDependencies['webpack-notifier'] %>"
  },
  "overrides": {
    "webpack": "<%= this.dependabotPackageJson.devDependencies['webpack'] %>"
  },
  "engines": {
    "node": ">=<%= nodeVersion %>"
  },
  "config": {
    "default_environment": "prod"
  },
  "scripts": {
    "prettier:check": "prettier --check \"{,src/**/,webpack/,.blueprint/**/}*.{<%= prettierExtensions %>}\"",
    "prettier:format": "prettier --write \"{,src/**/,webpack/,.blueprint/**/}*.{<%= prettierExtensions %>}\"",
    "lint": "eslint . --ext .js,.ts",
    "lint:fix": "<%= clientPackageManager %> run lint -- --fix",
    "cleanup": "rimraf <%= clientDistDir %>",
    "clean-www": "rimraf <%= clientDistDir %>app/{src,<%= temporaryDir %>}",
<%_ if (cypressTests) {  _%>
    "e2e": "<%= clientPackageManager %> run e2e:cypress:headed --",
    "e2e:headless": "<%= clientPackageManager %> run e2e:cypress --",
<%_ } _%>
<%_ if (cypressTests) { _%>
    "e2e:cypress:headed": "<%= clientPackageManager %> run e2e:cypress -- --headed",
    "e2e:cypress": "cypress run --e2e --browser chrome --record ${CYPRESS_ENABLE_RECORD:-false}",
    "cypress": "cypress open --e2e",
<%_ } _%>
    "jest": "jest --coverage --logHeapUsage --maxWorkers=2 --config jest.conf.js",
    "start": "ng serve<% if (!microfrontend) { %> --hmr<% } %>",
    "start-tls": "<%= clientPackageManager %> run webapp:dev-ssl",
<%_ if (skipServer) { _%>
    "sonar": "sonar-scanner",
<%_ } _%>
    "serve": "<%= clientPackageManager %> run start --",
    "build": "<%= clientPackageManager %> run webapp:prod --",
    "pretest": "<%= clientPackageManager %> run lint",
    "test": "ng test --coverage --log-heap-usage -w=2",
    "test:watch": "<%= clientPackageManager %> run test -- --watch",
    "watch": "concurrently npm:start<% if(!skipServer) { %> npm:backend:start<% } %>",
    "build-watch": "concurrently 'npm run webapp:build:dev -- --watch'<% if(!skipServer) { %> npm:backend:start<% } %>",
    "webapp:build": "<%= clientPackageManager %> run clean-www && <%= clientPackageManager %> run webapp:build:dev",
    "webapp:build:dev": "ng build --configuration development",
    "webapp:build:prod": "ng build --configuration production",
    "webapp:dev": "ng serve",
    "webapp:dev-verbose": "ng serve --verbose",
    "webapp:dev-ssl": "ng serve --ssl",
    "webapp:prod": "<%= clientPackageManager %> run clean-www && <%= clientPackageManager %> run webapp:build:prod",
    "webapp:test": "<%= clientPackageManager %> run test --"
  }
}
