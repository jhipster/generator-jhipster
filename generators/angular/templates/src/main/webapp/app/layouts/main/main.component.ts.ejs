<%#
 Copyright 2013-2025 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
import { Component, inject, OnInit<% if (enableTranslation) { %>, RendererFactory2, Renderer2<% } %> } from '@angular/core';
import { RouterOutlet, Router } from '@angular/router';
<%_ if (enableTranslation) { _%>
import { TranslateService, LangChangeEvent } from '@ngx-translate/core';
import dayjs from 'dayjs/esm';
<%_ } _%>

import { AccountService } from 'app/core/auth/account.service';
import { AppPageTitleStrategy } from 'app/app-page-title-strategy';
<%_ if (enableI18nRTL) { _%>
import FindLanguageFromKeyPipe from 'app/shared/language/find-language-from-key.pipe';
<%_ } _%>
import FooterComponent from '../footer/footer.component';
import PageRibbonComponent from '../profiles/page-ribbon.component';

@Component({
  selector: '<%= jhiPrefixDashed %>-main',
  templateUrl: './main.component.html',
  providers: [AppPageTitleStrategy],
  imports: [RouterOutlet, FooterComponent, PageRibbonComponent],
})
export default class MainComponent implements OnInit {
<%_ if (enableTranslation) { _%>
  private readonly renderer: Renderer2;
<%_ } _%>

  private readonly router = inject(Router);
  private readonly appPageTitleStrategy = inject(AppPageTitleStrategy);
  private readonly accountService = inject(AccountService);
<%_ if (enableI18nRTL) { _%>
  private readonly findLanguageFromKeyPipe = inject(FindLanguageFromKeyPipe);
<%_ } _%>
<%_ if (enableTranslation) { _%>
  private readonly translateService = inject(TranslateService);
  private readonly rootRenderer = inject(RendererFactory2);
<%_ } _%>
<%_ if (enableTranslation) { _%>

  constructor() {
    this.renderer = this.rootRenderer.createRenderer(document.querySelector('html'), null);
  }
<%_ } _%>

  ngOnInit(): void {
    // try to log in automatically
    this.accountService.identity().subscribe();

<%_ if (enableTranslation) { _%>
    this.translateService.onLangChange.subscribe((langChangeEvent: LangChangeEvent) => {
      this.appPageTitleStrategy.updateTitle(this.router.routerState.snapshot);
      dayjs.locale(langChangeEvent.lang);
      this.renderer.setAttribute(document.querySelector('html'), 'lang', langChangeEvent.lang);

  <%_ if (enableI18nRTL) { _%>
      this.updatePageDirection();
  <%_ } _%>
    });
<%_ } _%>
  }

<%_ if (enableI18nRTL) { _%>
  private updatePageDirection(): void {
    this.renderer.setAttribute(document.querySelector('html'), 'dir', this.findLanguageFromKeyPipe.isRTL(this.translateService.currentLang) ? 'rtl' : 'ltr');
  }
<%_ } _%>
}
