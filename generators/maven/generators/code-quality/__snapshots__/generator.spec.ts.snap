// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generator - maven:code-quality with defaults options should call source snapshot 1`] = `
{
  "addMavenDefinition": [
    {
      "pluginManagement": [
        {
          "additionalContent": "
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>\${checkstyle.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>io.spring.nohttp</groupId>
                        <artifactId>nohttp-checkstyle</artifactId>
                        <version>\${nohttp-checkstyle.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <includes>pom.xml,README.md</includes>
                    <excludes>.git/**/*,target/**/*,node_modules/**/*</excludes>
                    <sourceDirectories>./</sourceDirectories>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
",
          "artifactId": "maven-checkstyle-plugin",
          "groupId": "org.apache.maven.plugins",
          "version": "\${maven-checkstyle-plugin.version}",
        },
      ],
      "plugins": [
        {
          "artifactId": "maven-checkstyle-plugin",
          "groupId": "org.apache.maven.plugins",
        },
      ],
      "properties": [
        {
          "property": "checkstyle.version",
          "value": "'CHECKSTYLE-VERSION'",
        },
        {
          "property": "maven-checkstyle-plugin.version",
          "value": "'MAVEN-CHECKSTYLE-PLUGIN-VERSION'",
        },
        {
          "property": "nohttp-checkstyle.version",
          "value": "'NOHTTP-CHECKSTYLE-VERSION'",
        },
      ],
    },
    {
      "pluginManagement": [
        {
          "additionalContent": "
                <executions>
                    <execution>
                        <id>pre-unit-tests</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>pre-integration-tests</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <!-- Ensures that the code coverage report for integration tests is created after integration tests have been run -->
                        <id>post-integration-tests</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report-integration</goal>
                        </goals>
                    </execution>
                </executions>
",
          "artifactId": "jacoco-maven-plugin",
          "groupId": "org.jacoco",
          "version": "\${jacoco-maven-plugin.version}",
        },
      ],
      "plugins": [
        {
          "artifactId": "jacoco-maven-plugin",
          "groupId": "org.jacoco",
        },
      ],
      "properties": [
        {
          "property": "jacoco-maven-plugin.version",
          "value": "'JACOCO-MAVEN-PLUGIN-VERSION'",
        },
      ],
    },
    {
      "pluginManagement": [
        {
          "additionalContent": "
                <configuration>
                    <java>
                        <!-- <removeUnusedImports/> -->
                    </java>
                </configuration>
                <executions>
                    <execution>
                        <id>spotless</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>apply</goal>
                        </goals>
                    </execution>
                </executions>
",
          "artifactId": "spotless-maven-plugin",
          "groupId": "com.diffplug.spotless",
          "version": "\${spotless-maven-plugin.version}",
        },
      ],
      "plugins": [
        {
          "artifactId": "spotless-maven-plugin",
          "groupId": "com.diffplug.spotless",
        },
      ],
      "properties": [
        {
          "property": "spotless-maven-plugin.version",
          "value": "'SPOTLESS-MAVEN-PLUGIN-VERSION'",
        },
      ],
    },
    {
      "pluginManagement": [
        {
          "additionalContent": "
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>sonar-project.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>",
          "artifactId": "properties-maven-plugin",
          "groupId": "org.codehaus.mojo",
          "version": "\${properties-maven-plugin.version}",
        },
        {
          "artifactId": "sonar-maven-plugin",
          "groupId": "org.sonarsource.scanner.maven",
          "version": "\${sonar-maven-plugin.version}",
        },
      ],
      "plugins": [
        {
          "artifactId": "properties-maven-plugin",
          "groupId": "org.codehaus.mojo",
        },
        {
          "artifactId": "sonar-maven-plugin",
          "groupId": "org.sonarsource.scanner.maven",
        },
      ],
      "properties": [
        {
          "property": "properties-maven-plugin.version",
          "value": "'PROPERTIES-MAVEN-PLUGIN-VERSION'",
        },
        {
          "property": "sonar-maven-plugin.version",
          "value": "'SONAR-MAVEN-PLUGIN-VERSION'",
        },
      ],
    },
    {
      "pluginManagement": [
        {
          "additionalContent": "
                <executions>
                    <execution>
                        <id>modernizer</id>
                        <phase>package</phase>
                        <goals>
                            <goal>modernizer</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                  <javaVersion>\${java.version}</javaVersion>
                </configuration>",
          "artifactId": "modernizer-maven-plugin",
          "groupId": "org.gaul",
          "version": "\${modernizer-maven-plugin.version}",
        },
      ],
      "plugins": [
        {
          "artifactId": "modernizer-maven-plugin",
          "groupId": "org.gaul",
        },
      ],
      "properties": [
        {
          "property": "modernizer-maven-plugin.version",
          "value": "'MODERNIZER-MAVEN-PLUGIN-VERSION'",
        },
      ],
    },
  ],
  "addSonarProperties": [
    [
      {
        "key": "sonar.coverage.jacoco.xmlReportPaths",
        "value": "target/site/**/jacoco*.xml",
      },
      {
        "key": "sonar.java.codeCoveragePlugin",
        "value": "jacoco",
      },
      {
        "key": "sonar.junit.reportPaths",
        "value": "target/surefire-reports,target/failsafe-reports",
      },
    ],
  ],
}
`;

exports[`generator - maven:code-quality with defaults options should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "stateCleared": "modified",
  },
}
`;
