// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generator - Heroku microservice application with JAR deployment should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "applicationType": "microservice",
    "baseName": "jhipster",
    "herokuAppName": "jhipster-test",
    "herokuDeployType": "jar",
    "herokuJavaVersion": "17"
  }
}
",
    "stateCleared": "modified",
  },
  "Procfile": {
    "contents": "web: java $JAVA_OPTS -Xmx256m -jar target/*.jar --spring.profiles.active=prod,heroku
",
    "stateCleared": "modified",
  },
  "pom.xml": {
    "contents": "<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <profiles>
        <profile>
            <id>heroku</id>
            <!-- force dependency version as used bonsai add-on as of now only supports 7.10.x -->
            <!-- https://github.com/jhipster/generator-jhipster/issues/18650 -->
            <properties>
                <bonsai.elasticsearch.version>7.10.2</bonsai.elasticsearch.version>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-high-level-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch</groupId>
                        <artifactId>elasticsearch</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.plugin</groupId>
                        <artifactId>transport-netty4-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration combine.self="override">
                            <changeLogFile>src/main/resources/config/liquibase/master.xml</changeLogFile>
                            <diffChangeLogFile>src/main/resources/config/liquibase/changelog/\${maven.build.timestamp}_changelog.xml</diffChangeLogFile>
                            <driver/>
                            <url>\${env.JDBC_DATABASE_URL}</url>
                            <defaultSchemaName/>
                            <username>\${env.JDBC_DATABASE_USERNAME}</username>
                            <password>\${env.JDBC_DATABASE_PASSWORD}</password>
                            <referenceUrl>hibernate:spring:com.mycompany.myapp.domain?dialect=org.hibernate.dialect.PostgreSQLDialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy</referenceUrl>
                            <verbose>true</verbose>
                            <logging>debug</logging>
                            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>\${maven-clean-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>clean-artifacts</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>target</directory>
                                            <excludes>
                                                <exclude>*.jar</exclude>
                                            </excludes>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                        <fileset>
                                            <directory>node_modules</directory>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-heroku.yml": {
    "contents": "# ===================================================================
# Spring Boot configuration for the "heroku" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  instance:
    hostname: jhipster-test.herokuapp.com
    non-secure-port: 80
    prefer-ip-address: false

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: \${JDBC_DATABASE_URL}
    username: \${JDBC_DATABASE_USERNAME}
    password: \${JDBC_DATABASE_PASSWORD}
    hikari:
      maximumPoolSize: 8
server:
  port: \${PORT:8080}
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-heroku.yml": {
    "contents": "# ===================================================================
# Spring Cloud Config bootstrap configuration for the "heroku" profile
# ===================================================================

",
    "stateCleared": "modified",
  },
  "system.properties": {
    "contents": "java.runtime.version=17 ",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Heroku monolith application in the EU should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "baseName": "jhipster",
    "herokuAppName": "jhipster-test",
    "herokuDeployType": "jar",
    "herokuJavaVersion": "11"
  }
}
",
    "stateCleared": "modified",
  },
  "Procfile": {
    "contents": "web: java $JAVA_OPTS -Xmx256m -jar target/*.jar --spring.profiles.active=prod,heroku
",
    "stateCleared": "modified",
  },
  "pom.xml": {
    "contents": "<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <profiles>
        <profile>
            <id>heroku</id>
            <!-- force dependency version as used bonsai add-on as of now only supports 7.10.x -->
            <!-- https://github.com/jhipster/generator-jhipster/issues/18650 -->
            <properties>
                <bonsai.elasticsearch.version>7.10.2</bonsai.elasticsearch.version>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-high-level-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch</groupId>
                        <artifactId>elasticsearch</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.plugin</groupId>
                        <artifactId>transport-netty4-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration combine.self="override">
                            <changeLogFile>src/main/resources/config/liquibase/master.xml</changeLogFile>
                            <diffChangeLogFile>src/main/resources/config/liquibase/changelog/\${maven.build.timestamp}_changelog.xml</diffChangeLogFile>
                            <driver/>
                            <url>\${env.JDBC_DATABASE_URL}</url>
                            <defaultSchemaName/>
                            <username>\${env.JDBC_DATABASE_USERNAME}</username>
                            <password>\${env.JDBC_DATABASE_PASSWORD}</password>
                            <referenceUrl>hibernate:spring:com.mycompany.myapp.domain?dialect=org.hibernate.dialect.PostgreSQLDialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy</referenceUrl>
                            <verbose>true</verbose>
                            <logging>debug</logging>
                            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>\${maven-clean-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>clean-artifacts</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>target</directory>
                                            <excludes>
                                                <exclude>*.jar</exclude>
                                            </excludes>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                        <fileset>
                                            <directory>node_modules</directory>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-heroku.yml": {
    "contents": "# ===================================================================
# Spring Boot configuration for the "heroku" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  instance:
    hostname: jhipster-test.herokuapp.com
    non-secure-port: 80
    prefer-ip-address: false

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: \${JDBC_DATABASE_URL}
    username: \${JDBC_DATABASE_USERNAME}
    password: \${JDBC_DATABASE_PASSWORD}
    hikari:
      maximumPoolSize: 8
server:
  port: \${PORT:8080}
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-heroku.yml": {
    "contents": "# ===================================================================
# Spring Cloud Config bootstrap configuration for the "heroku" profile
# ===================================================================

",
    "stateCleared": "modified",
  },
  "system.properties": {
    "contents": "java.runtime.version=11 ",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Heroku monolith application in the US should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "baseName": "jhipster",
    "herokuAppName": "jhipster-test",
    "herokuDeployType": "jar",
    "herokuJavaVersion": "11"
  }
}
",
    "stateCleared": "modified",
  },
  "Procfile": {
    "contents": "web: java $JAVA_OPTS -Xmx256m -jar target/*.jar --spring.profiles.active=prod,heroku
",
    "stateCleared": "modified",
  },
  "pom.xml": {
    "contents": "<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <profiles>
        <profile>
            <id>heroku</id>
            <!-- force dependency version as used bonsai add-on as of now only supports 7.10.x -->
            <!-- https://github.com/jhipster/generator-jhipster/issues/18650 -->
            <properties>
                <bonsai.elasticsearch.version>7.10.2</bonsai.elasticsearch.version>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-high-level-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch</groupId>
                        <artifactId>elasticsearch</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.plugin</groupId>
                        <artifactId>transport-netty4-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration combine.self="override">
                            <changeLogFile>src/main/resources/config/liquibase/master.xml</changeLogFile>
                            <diffChangeLogFile>src/main/resources/config/liquibase/changelog/\${maven.build.timestamp}_changelog.xml</diffChangeLogFile>
                            <driver/>
                            <url>\${env.JDBC_DATABASE_URL}</url>
                            <defaultSchemaName/>
                            <username>\${env.JDBC_DATABASE_USERNAME}</username>
                            <password>\${env.JDBC_DATABASE_PASSWORD}</password>
                            <referenceUrl>hibernate:spring:com.mycompany.myapp.domain?dialect=org.hibernate.dialect.PostgreSQLDialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy</referenceUrl>
                            <verbose>true</verbose>
                            <logging>debug</logging>
                            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>\${maven-clean-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>clean-artifacts</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>target</directory>
                                            <excludes>
                                                <exclude>*.jar</exclude>
                                            </excludes>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                        <fileset>
                                            <directory>node_modules</directory>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-heroku.yml": {
    "contents": "# ===================================================================
# Spring Boot configuration for the "heroku" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  instance:
    hostname: jhipster-test.herokuapp.com
    non-secure-port: 80
    prefer-ip-address: false

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: \${JDBC_DATABASE_URL}
    username: \${JDBC_DATABASE_USERNAME}
    password: \${JDBC_DATABASE_PASSWORD}
    hikari:
      maximumPoolSize: 8
server:
  port: \${PORT:8080}
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-heroku.yml": {
    "contents": "# ===================================================================
# Spring Cloud Config bootstrap configuration for the "heroku" profile
# ===================================================================

",
    "stateCleared": "modified",
  },
  "system.properties": {
    "contents": "java.runtime.version=11 ",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Heroku monolith application with Git deployment should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "baseName": "jhipster",
    "herokuAppName": "jhipster-test",
    "herokuDeployType": "git",
    "herokuJavaVersion": "11"
  }
}
",
    "stateCleared": "modified",
  },
  "Procfile": {
    "contents": "web: java $JAVA_OPTS -Xmx256m -jar target/*.jar --spring.profiles.active=prod,heroku
",
    "stateCleared": "modified",
  },
  "pom.xml": {
    "contents": "<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <profiles>
        <profile>
            <id>heroku</id>
            <!-- force dependency version as used bonsai add-on as of now only supports 7.10.x -->
            <!-- https://github.com/jhipster/generator-jhipster/issues/18650 -->
            <properties>
                <bonsai.elasticsearch.version>7.10.2</bonsai.elasticsearch.version>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-high-level-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch</groupId>
                        <artifactId>elasticsearch</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.plugin</groupId>
                        <artifactId>transport-netty4-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration combine.self="override">
                            <changeLogFile>src/main/resources/config/liquibase/master.xml</changeLogFile>
                            <diffChangeLogFile>src/main/resources/config/liquibase/changelog/\${maven.build.timestamp}_changelog.xml</diffChangeLogFile>
                            <driver/>
                            <url>\${env.JDBC_DATABASE_URL}</url>
                            <defaultSchemaName/>
                            <username>\${env.JDBC_DATABASE_USERNAME}</username>
                            <password>\${env.JDBC_DATABASE_PASSWORD}</password>
                            <referenceUrl>hibernate:spring:com.mycompany.myapp.domain?dialect=org.hibernate.dialect.PostgreSQLDialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy</referenceUrl>
                            <verbose>true</verbose>
                            <logging>debug</logging>
                            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>\${maven-clean-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>clean-artifacts</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>target</directory>
                                            <excludes>
                                                <exclude>*.jar</exclude>
                                            </excludes>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                        <fileset>
                                            <directory>node_modules</directory>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-heroku.yml": {
    "contents": "# ===================================================================
# Spring Boot configuration for the "heroku" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  instance:
    hostname: jhipster-test.herokuapp.com
    non-secure-port: 80
    prefer-ip-address: false

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: \${JDBC_DATABASE_URL}
    username: \${JDBC_DATABASE_USERNAME}
    password: \${JDBC_DATABASE_PASSWORD}
    hikari:
      maximumPoolSize: 8
server:
  port: \${PORT:8080}
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-heroku.yml": {
    "contents": "# ===================================================================
# Spring Cloud Config bootstrap configuration for the "heroku" profile
# ===================================================================

",
    "stateCleared": "modified",
  },
  "system.properties": {
    "contents": "java.runtime.version=11 ",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Heroku monolith application with PostgreSQL should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "baseName": "jhipster",
    "herokuAppName": "jhipster-test",
    "herokuDeployType": "jar",
    "herokuJavaVersion": "11"
  }
}
",
    "stateCleared": "modified",
  },
  "Procfile": {
    "contents": "web: java $JAVA_OPTS -Xmx256m -jar target/*.jar --spring.profiles.active=prod,heroku
",
    "stateCleared": "modified",
  },
  "pom.xml": {
    "contents": "<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <profiles>
        <profile>
            <id>heroku</id>
            <!-- force dependency version as used bonsai add-on as of now only supports 7.10.x -->
            <!-- https://github.com/jhipster/generator-jhipster/issues/18650 -->
            <properties>
                <bonsai.elasticsearch.version>7.10.2</bonsai.elasticsearch.version>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-high-level-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch</groupId>
                        <artifactId>elasticsearch</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.plugin</groupId>
                        <artifactId>transport-netty4-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration combine.self="override">
                            <changeLogFile>src/main/resources/config/liquibase/master.xml</changeLogFile>
                            <diffChangeLogFile>src/main/resources/config/liquibase/changelog/\${maven.build.timestamp}_changelog.xml</diffChangeLogFile>
                            <driver/>
                            <url>\${env.JDBC_DATABASE_URL}</url>
                            <defaultSchemaName/>
                            <username>\${env.JDBC_DATABASE_USERNAME}</username>
                            <password>\${env.JDBC_DATABASE_PASSWORD}</password>
                            <referenceUrl>hibernate:spring:com.mycompany.myapp.domain?dialect=org.hibernate.dialect.PostgreSQLDialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy</referenceUrl>
                            <verbose>true</verbose>
                            <logging>debug</logging>
                            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>\${maven-clean-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>clean-artifacts</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>target</directory>
                                            <excludes>
                                                <exclude>*.jar</exclude>
                                            </excludes>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                        <fileset>
                                            <directory>node_modules</directory>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-heroku.yml": {
    "contents": "# ===================================================================
# Spring Boot configuration for the "heroku" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  instance:
    hostname: jhipster-test.herokuapp.com
    non-secure-port: 80
    prefer-ip-address: false

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: \${JDBC_DATABASE_URL}
    username: \${JDBC_DATABASE_USERNAME}
    password: \${JDBC_DATABASE_PASSWORD}
    hikari:
      maximumPoolSize: 8
server:
  port: \${PORT:8080}
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-heroku.yml": {
    "contents": "# ===================================================================
# Spring Cloud Config bootstrap configuration for the "heroku" profile
# ===================================================================

",
    "stateCleared": "modified",
  },
  "system.properties": {
    "contents": "java.runtime.version=11 ",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Heroku monolith application with an unavailable app name should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "baseName": "jhipster",
    "herokuAppName": "jhipster-new-name",
    "herokuDeployType": "jar",
    "herokuJavaVersion": "11"
  }
}
",
    "stateCleared": "modified",
  },
  "Procfile": {
    "contents": "web: java $JAVA_OPTS -Xmx256m -jar target/*.jar --spring.profiles.active=prod,heroku
",
    "stateCleared": "modified",
  },
  "pom.xml": {
    "contents": "<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <profiles>
        <profile>
            <id>heroku</id>
            <!-- force dependency version as used bonsai add-on as of now only supports 7.10.x -->
            <!-- https://github.com/jhipster/generator-jhipster/issues/18650 -->
            <properties>
                <bonsai.elasticsearch.version>7.10.2</bonsai.elasticsearch.version>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-high-level-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch</groupId>
                        <artifactId>elasticsearch</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.plugin</groupId>
                        <artifactId>transport-netty4-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration combine.self="override">
                            <changeLogFile>src/main/resources/config/liquibase/master.xml</changeLogFile>
                            <diffChangeLogFile>src/main/resources/config/liquibase/changelog/\${maven.build.timestamp}_changelog.xml</diffChangeLogFile>
                            <driver/>
                            <url>\${env.JDBC_DATABASE_URL}</url>
                            <defaultSchemaName/>
                            <username>\${env.JDBC_DATABASE_USERNAME}</username>
                            <password>\${env.JDBC_DATABASE_PASSWORD}</password>
                            <referenceUrl>hibernate:spring:com.mycompany.myapp.domain?dialect=org.hibernate.dialect.PostgreSQLDialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy</referenceUrl>
                            <verbose>true</verbose>
                            <logging>debug</logging>
                            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>\${maven-clean-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>clean-artifacts</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>target</directory>
                                            <excludes>
                                                <exclude>*.jar</exclude>
                                            </excludes>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                        <fileset>
                                            <directory>node_modules</directory>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-heroku.yml": {
    "contents": "# ===================================================================
# Spring Boot configuration for the "heroku" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  instance:
    hostname: jhipster-new-name.herokuapp.com
    non-secure-port: 80
    prefer-ip-address: false

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: \${JDBC_DATABASE_URL}
    username: \${JDBC_DATABASE_USERNAME}
    password: \${JDBC_DATABASE_PASSWORD}
    hikari:
      maximumPoolSize: 8
server:
  port: \${PORT:8080}
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-heroku.yml": {
    "contents": "# ===================================================================
# Spring Cloud Config bootstrap configuration for the "heroku" profile
# ===================================================================

",
    "stateCleared": "modified",
  },
  "system.properties": {
    "contents": "java.runtime.version=11 ",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Heroku monolith application with elasticsearch should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "baseName": "jhipster",
    "herokuAppName": "jhipster-test",
    "herokuDeployType": "jar",
    "herokuJavaVersion": "11",
    "searchEngine": "elasticsearch"
  }
}
",
    "stateCleared": "modified",
  },
  "Procfile": {
    "contents": "web: java $JAVA_OPTS -Xmx256m -jar target/*.jar --spring.profiles.active=prod,heroku
",
    "stateCleared": "modified",
  },
  "pom.xml": {
    "contents": "<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <profiles>
        <profile>
            <id>heroku</id>
            <!-- force dependency version as used bonsai add-on as of now only supports 7.10.x -->
            <!-- https://github.com/jhipster/generator-jhipster/issues/18650 -->
            <properties>
                <bonsai.elasticsearch.version>7.10.2</bonsai.elasticsearch.version>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-high-level-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch</groupId>
                        <artifactId>elasticsearch</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.plugin</groupId>
                        <artifactId>transport-netty4-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration combine.self="override">
                            <changeLogFile>src/main/resources/config/liquibase/master.xml</changeLogFile>
                            <diffChangeLogFile>src/main/resources/config/liquibase/changelog/\${maven.build.timestamp}_changelog.xml</diffChangeLogFile>
                            <driver/>
                            <url>\${env.JDBC_DATABASE_URL}</url>
                            <defaultSchemaName/>
                            <username>\${env.JDBC_DATABASE_USERNAME}</username>
                            <password>\${env.JDBC_DATABASE_PASSWORD}</password>
                            <referenceUrl>hibernate:spring:com.mycompany.myapp.domain?dialect=org.hibernate.dialect.PostgreSQLDialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy</referenceUrl>
                            <verbose>true</verbose>
                            <logging>debug</logging>
                            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>\${maven-clean-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>clean-artifacts</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>target</directory>
                                            <excludes>
                                                <exclude>*.jar</exclude>
                                            </excludes>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                        <fileset>
                                            <directory>node_modules</directory>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-heroku.yml": {
    "contents": "# ===================================================================
# Spring Boot configuration for the "heroku" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  instance:
    hostname: jhipster-test.herokuapp.com
    non-secure-port: 80
    prefer-ip-address: false

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: \${JDBC_DATABASE_URL}
    username: \${JDBC_DATABASE_USERNAME}
    password: \${JDBC_DATABASE_PASSWORD}
    hikari:
      maximumPoolSize: 8
  elasticsearch:
    uris: \${BONSAI_URL}
server:
  port: \${PORT:8080}
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-heroku.yml": {
    "contents": "# ===================================================================
# Spring Cloud Config bootstrap configuration for the "heroku" profile
# ===================================================================

",
    "stateCleared": "modified",
  },
  "system.properties": {
    "contents": "java.runtime.version=11 ",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - Heroku monolith application with existing app should match files snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "baseName": "jhipster",
    "herokuAppName": "jhipster-existing",
    "herokuDeployType": "git",
    "herokuJavaVersion": "17"
  }
}
",
    "stateCleared": "modified",
  },
  "Procfile": {
    "contents": "web: java $JAVA_OPTS -Xmx256m -jar target/*.jar --spring.profiles.active=prod,heroku
",
    "stateCleared": "modified",
  },
  "pom.xml": {
    "contents": "<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <profiles>
        <profile>
            <id>heroku</id>
            <!-- force dependency version as used bonsai add-on as of now only supports 7.10.x -->
            <!-- https://github.com/jhipster/generator-jhipster/issues/18650 -->
            <properties>
                <bonsai.elasticsearch.version>7.10.2</bonsai.elasticsearch.version>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.client</groupId>
                        <artifactId>elasticsearch-rest-high-level-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch</groupId>
                        <artifactId>elasticsearch</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.elasticsearch.plugin</groupId>
                        <artifactId>transport-netty4-client</artifactId>
                        <version>\${bonsai.elasticsearch.version}</version>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration combine.self="override">
                            <changeLogFile>src/main/resources/config/liquibase/master.xml</changeLogFile>
                            <diffChangeLogFile>src/main/resources/config/liquibase/changelog/\${maven.build.timestamp}_changelog.xml</diffChangeLogFile>
                            <driver/>
                            <url>\${env.JDBC_DATABASE_URL}</url>
                            <defaultSchemaName/>
                            <username>\${env.JDBC_DATABASE_USERNAME}</username>
                            <password>\${env.JDBC_DATABASE_PASSWORD}</password>
                            <referenceUrl>hibernate:spring:com.mycompany.myapp.domain?dialect=org.hibernate.dialect.PostgreSQLDialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy</referenceUrl>
                            <verbose>true</verbose>
                            <logging>debug</logging>
                            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>\${maven-clean-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>clean-artifacts</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>target</directory>
                                            <excludes>
                                                <exclude>*.jar</exclude>
                                            </excludes>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                        <fileset>
                                            <directory>node_modules</directory>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/application-heroku.yml": {
    "contents": "# ===================================================================
# Spring Boot configuration for the "heroku" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  instance:
    hostname: jhipster-existing.herokuapp.com
    non-secure-port: 80
    prefer-ip-address: false

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: \${JDBC_DATABASE_URL}
    username: \${JDBC_DATABASE_USERNAME}
    password: \${JDBC_DATABASE_PASSWORD}
    hikari:
      maximumPoolSize: 8
server:
  port: \${PORT:8080}
",
    "stateCleared": "modified",
  },
  "src/main/resources/config/bootstrap-heroku.yml": {
    "contents": "# ===================================================================
# Spring Cloud Config bootstrap configuration for the "heroku" profile
# ===================================================================

",
    "stateCleared": "modified",
  },
  "system.properties": {
    "contents": "java.runtime.version=17 ",
    "stateCleared": "modified",
  },
}
`;
