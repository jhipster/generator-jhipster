<%#
 Copyright 2013-2024 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
{
  "name": "<%= dasherizedBaseName %>",
  "version": "0.0.1-SNAPSHOT",
  "description": "<%= projectDescription %>",
  "private": true,
  "license": "UNLICENSED",
  "cacheDirectories": [
    "node_modules"
  ],
  "dependencies": {
    "@fortawesome/fontawesome-svg-core": "<%= nodeDependencies['@fortawesome/fontawesome-svg-core'] %>",
    "@fortawesome/free-solid-svg-icons": "<%= nodeDependencies['@fortawesome/free-solid-svg-icons'] %>",
    "@fortawesome/react-fontawesome": "<%= nodeDependencies['@fortawesome/react-fontawesome'] %>",
    "@reduxjs/toolkit": "<%= nodeDependencies['@reduxjs/toolkit'] %>",
    "axios": "<%= nodeDependencies['axios'] %>",
    "bootstrap": "<%= nodeDependencies['bootstrap'] %>",
<%_ if (!clientThemeNone) { _%>
    "bootswatch": "<%= nodeDependencies['bootswatch'] %>",
<%_ } _%>
    "dayjs": "<%= nodeDependencies['dayjs'] %>",
    "lodash": "<%= nodeDependencies['lodash'] %>",
    "path-browserify": "<%= nodeDependencies['path-browserify'] %>",
    "react": "<%= nodeDependencies['react'] %>",
    "react-dom": "<%= nodeDependencies['react-dom'] %>",
    "react-hook-form": "<%= nodeDependencies['react-hook-form'] %>",
    "react-jhipster": "<%= nodeDependencies['react-jhipster'] %>",
    "react-loadable": "<%= nodeDependencies['react-loadable'] %>",
    "react-redux": "<%= nodeDependencies['react-redux'] %>",
    "react-redux-loading-bar": "<%= nodeDependencies['react-redux-loading-bar'] %>",
    "react-router": "<%= nodeDependencies['react-router-dom'] %>",
    "react-router-dom": "<%= nodeDependencies['react-router-dom'] %>",
    "react-toastify": "<%= nodeDependencies['react-toastify'] %>",
    "react-transition-group": "<%= nodeDependencies['react-transition-group'] %>",
    "reactstrap": "<%= nodeDependencies['reactstrap'] %>",
    "redux": "<%= nodeDependencies['redux'] %>",
<%_ if (communicationSpringWebsocket) { _%>
    "rxjs": "6.6.3",
    "sockjs-client": "1.5.0",
<%_ } _%>
<%_ if (skipServer) { _%>
    "sonar-scanner": "<%= nodeDependencies['sonar-scanner'] %>",
<%_ } _%>
    "tslib": "<%= nodeDependencies['tslib'] %>",
    "uuid": "<%= nodeDependencies['uuid'] %>"<% if (communicationSpringWebsocket) { %>,
    "webstomp-client": "1.2.6"
    <%_ } _%>
  },
  "devDependencies": {
<%_ if (applicationTypeGateway && microfrontend) { _%>
    "@module-federation/utilities": "<%= nodeDependencies['@module-federation/utilities'] %>",
<%_ } _%>
    "@testing-library/react": "<%= nodeDependencies['@testing-library/react'] %>",
    "@types/jest": "<%= nodeDependencies['@types/jest'] %>",
    "@types/lodash": "<%= nodeDependencies['@types/lodash'] %>",
    "@types/node": "<%= nodeDependencies['@types/node'] %>",
    "@types/react": "<%= nodeDependencies['@types/react'] %>",
    "@types/react-dom": "<%= nodeDependencies['@types/react-dom'] %>",
    "@types/react-redux": "<%= nodeDependencies['@types/react-redux'] %>",
    "@types/redux": "<%= nodeDependencies['@types/redux'] %>",
    "@types/webpack-env": "<%= nodeDependencies['@types/webpack-env'] %>",
    "@typescript-eslint/eslint-plugin": "<%= nodeDependencies['@typescript-eslint/eslint-plugin'] %>",
    "@typescript-eslint/parser": "<%= nodeDependencies['@typescript-eslint/parser'] %>",
    "autoprefixer": "<%= nodeDependencies['autoprefixer'] %>",
    "browser-sync": "<%= nodeDependencies['browser-sync'] %>",
    "browser-sync-webpack-plugin": "<%= nodeDependencies['browser-sync-webpack-plugin'] %>",
    "copy-webpack-plugin": "<%= nodeDependencies['copy-webpack-plugin'] %>",
    "core-js": "<%= nodeDependencies['core-js'] %>",
    "cross-env": "<%= nodeDependencies['cross-env'] %>",
    "css-loader": "<%= nodeDependencies['css-loader'] %>",
    "css-minimizer-webpack-plugin": "<%= nodeDependencies['css-minimizer-webpack-plugin'] %>",
    "eslint": "<%= nodeDependencies['eslint'] %>",
    "eslint-config-prettier": "<%= nodeDependencies['eslint-config-prettier'] %>",
    "eslint-plugin-react": "<%= nodeDependencies['eslint-plugin-react'] %>",
    "eslint-webpack-plugin": "<%= nodeDependencies['eslint-webpack-plugin'] %>",
    "fork-ts-checker-webpack-plugin": "<%= nodeDependencies['fork-ts-checker-webpack-plugin'] %>",
    "html-webpack-plugin": "<%= nodeDependencies['html-webpack-plugin'] %>",
    "identity-obj-proxy": "<%= nodeDependencies['identity-obj-proxy'] %>",
    "jest": "<%= nodeDependencies['jest'] %>",
    "jest-environment-jsdom": "<%= nodeDependencies['jest-environment-jsdom'] %>",
    "jest-junit": "<%= nodeDependencies['jest-junit'] %>",
    "jest-sonar": "<%= nodeDependencies['jest-sonar'] %>",
    "json-loader": "<%= nodeDependencies['json-loader'] %>",
<%_ if (enableTranslation) { _%>
    "folder-hash": "<%= nodeDependencies['folder-hash'] %>",
    "merge-jsons-webpack-plugin": "<%= nodeDependencies['merge-jsons-webpack-plugin'] %>",
<%_ } _%>
    "mini-css-extract-plugin": "<%= nodeDependencies['mini-css-extract-plugin'] %>",
    "postcss-loader": "<%= nodeDependencies['postcss-loader'] %>",
<%_ if (enableI18nRTL) { _%>
    "postcss-rtlcss": "<%= nodeDependencies['postcss-rtlcss'] %>",
<%_ } _%>
    "react-infinite-scroll-component": "<%= nodeDependencies['react-infinite-scroll-component'] %>",
    "redux-mock-store": "<%= nodeDependencies['redux-mock-store'] %>",
    "rimraf": "<%= nodeDependencies['rimraf'] %>",
    "sass": "<%= nodeDependencies['sass'] %>",
    "sass-loader": "<%= nodeDependencies['sass-loader'] %>",
    "simple-progress-webpack-plugin": "<%= nodeDependencies['simple-progress-webpack-plugin'] %>",
    "sinon": "<%= nodeDependencies['sinon'] %>",
    "source-map-loader": "<%= nodeDependencies['source-map-loader'] %>",
    "sourcemap-istanbul-instrumenter-loader": "<%= nodeDependencies['sourcemap-istanbul-instrumenter-loader'] %>",
    "style-loader": "<%= nodeDependencies['style-loader'] %>",
    "swagger-ui-dist": "<%= nodeDependencies['swagger-ui-dist'] %>",
    "terser-webpack-plugin": "<%= nodeDependencies['terser-webpack-plugin'] %>",
    "thread-loader": "<%= nodeDependencies['thread-loader'] %>",
    "ts-jest": "<%= nodeDependencies['ts-jest'] %>",
    "ts-loader": "<%= nodeDependencies['ts-loader'] %>",
<%_ if (cypressTests) { _%>
    "cypress": "<%= nodeDependencies['cypress'] %>",
<%_ } _%>
    "typescript": "<%= nodeDependencies['typescript'] %>",
    "webpack": "<%= nodeDependencies['webpack'] %>",
    "webpack-cli": "<%= nodeDependencies['webpack-cli'] %>",
    "webpack-dev-server": "<%= nodeDependencies['webpack-dev-server'] %>",
    "webpack-merge": "<%= nodeDependencies['webpack-merge'] %>",
    "webpack-notifier": "<%= nodeDependencies['webpack-notifier'] %>",
    "workbox-webpack-plugin": "<%= nodeDependencies['workbox-webpack-plugin'] %>"
  },
  "engines": {
    "node": ">=<%= nodeVersion %>"
  },
  "config": {
    "default_environment": "prod"
  },
  "scripts": {
    "prettier:check": "prettier --check \"{,src/**/,webpack/,.blueprint/**/}*.{<%= prettierExtensions %>}\"",
    "prettier:format": "prettier --write \"{,src/**/,webpack/,.blueprint/**/}*.{<%= prettierExtensions %>}\"",
    "lint": "eslint . --ext .js,.ts,.jsx,.tsx",
    "lint:fix": "<%= clientPackageManager %> run lint -- --fix",
    "cleanup": "rimraf <%= this.relativeDir(clientRootDir, temporaryDir) %>",
    "clean-www": "rimraf <%= this.relativeDir(clientRootDir, clientDistDir) %>",
    "build": "<%= clientPackageManager %> run webapp:prod --",
    "build-watch": "concurrently 'npm run webapp:build:dev -- --watch'<% if(!skipServer) { %> npm:backend:start<% } %>",
    "jest": "jest --coverage --logHeapUsage --maxWorkers=2 --config jest.conf.js",
    "jest:update": "<%= clientPackageManager %> run jest -- --updateSnapshot",
    "start": "<%= clientPackageManager %> run webapp:dev --",
    "start-tls": "<%= clientPackageManager %> run webapp:dev -- --env tls",
<%_ if (skipServer) { _%>
    "sonar": "sonar-scanner",
<%_ } _%>
    "pretest": "<%= clientPackageManager %> run lint",
    "test": "<%= clientPackageManager %> run jest --",
    "test-ci": "<%= clientPackageManager %> run lint && <%= clientPackageManager %> run jest:update --",
    "test:watch": "<%= clientPackageManager %> run jest -- --watch",
    "watch": "concurrently 'npm run start' npm:backend:start",
    "webapp:build": "<%= clientPackageManager %> run clean-www && <%= clientPackageManager %> run webapp:build:dev --",
    "webapp:build:dev": "webpack --config webpack/webpack.dev.js --env stats=minimal",
    "webapp:build:prod": "webpack --config webpack/webpack.prod.js --progress=profile",
    "webapp:dev": "<%= clientPackageManager %> run webpack-dev-server -- --config webpack/webpack.dev.js --env stats=minimal",
    "webapp:dev-verbose": "<%= clientPackageManager %> run webpack-dev-server -- --config webpack/webpack.dev.js --progress=profile --env stats=normal",
    "webapp:prod": "<%= clientPackageManager %> run clean-www && <%= clientPackageManager %> run webapp:build:prod --",
    "webapp:test": "<%= clientPackageManager %> run test --",
    "webpack-dev-server": "webpack serve"
  }
}
