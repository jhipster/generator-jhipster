<%#
 Copyright 2013-2022 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
<%_ if (kubernetesUseDynamicStorage) { _%>
apiVersion: <%= KUBERNETES_CORE_API_VERSION %>
kind: PersistentVolumeClaim
metadata:
  name: <%= app.baseName.toLowerCase() %>-mssql-pvc
  namespace: <%= kubernetesNamespace %>
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  <%_ if (kubernetesStorageClassName) { _%>
  storageClassName: <%= kubernetesStorageClassName %>
  <%_ } _%>
---
<%_ } _%>
apiVersion: <%= KUBERNETES_DEPLOYMENT_API_VERSION %>
kind: Deployment
metadata:
  name: <%= app.baseName.toLowerCase() %>-mssql
  namespace: <%= kubernetesNamespace %>
spec:
  replicas: 1
  selector:
    matchLabels:
      app: <%= app.baseName.toLowerCase() %>-mssql
  template:
    metadata:
      labels:
        app: <%= app.baseName.toLowerCase() %>-mssql
<%_ if (istio) { _%>
      annotations:
        sidecar.istio.io/inject: "false"
<%_ } _%>
    spec:
      volumes:
      - name: mssqldb
        persistentVolumeClaim:
          claimName: mssql-data
      - name: data
<%_ if (kubernetesUseDynamicStorage) { _%>
        persistentVolumeClaim:
          claimName: <%= app.baseName.toLowerCase() %>-mssql-pvc
<%_ } else { _%>
        emptyDir: {}
<%_ } _%>
      containers:
      - name: mysql
        image: <%= DOCKER_MSSQL %>
        env:
        - name: MSSQL_PID
          value: "Express"
        - name: ACCEPT_EULA
          value: "Y"
        - name: MSSQL_SA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mssql
              key: SA_PASSWORD
        ports:
        - containerPort: 1433
        volumeMounts:
        - name: mssqldb
          mountPath: /var/opt/mssql
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1"

---
apiVersion: <%= KUBERNETES_CORE_API_VERSION  %>
kind: Service
metadata:
  name: <%= app.baseName.toLowerCase() %>-mssql
  namespace: <%= kubernetesNamespace %>
spec:
  selector:
    app: <%= app.baseName.toLowerCase() %>-mssql
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
  type: LoadBalancer
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mssql-data
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: managed-premium
  resources:
    requests:
      storage: 8Gi
