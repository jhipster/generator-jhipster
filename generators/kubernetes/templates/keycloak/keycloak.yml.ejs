<%#
 Copyright 2013-2018 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: <%= app.baseName.toLowerCase() %>-postgres-keycloak
  namespace: <%= kubernetesNamespace %>
spec:
  serviceName: <%= app.baseName.toLowerCase() %>-postgres-keycloak
  replicas: 1
  template:
    metadata:
      labels:
        app: <%= app.baseName.toLowerCase() %>-postgres-keycloak
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: root
              mountPath: /var/lib/postgresql/data
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            # The name of the PostgreSQL user, that will be used from the Keycloak
            - name: POSTGRES_USER
              value: keycloak
            # The password for the PostgreSQL user, that will be used from the Keycloak
            - name: POSTGRES_PASSWORD
              value: keycloak
  volumeClaimTemplates:
    - metadata:
        name: root
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: <%= app.baseName.toLowerCase() %>-postgres-keycloak
  namespace: <%= kubernetesNamespace %>
  labels:
    app: <%= app.baseName.toLowerCase() %>-postgres-keycloak
spec:
  ports:
  - port: 5432
  type: ClusterIP
  selector:
    app: <%= app.baseName.toLowerCase() %>-postgres-keycloak
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: <%= app.baseName.toLowerCase() %>-keycloak
  namespace: <%= kubernetesNamespace %>
  labels:
    app: <%= app.baseName.toLowerCase() %>-keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: <%= app.baseName.toLowerCase() %>-keycloak
  template:
    metadata:
      labels:
        app: <%= app.baseName.toLowerCase() %>-keycloak
    spec:
      containers:
      - name: <%= app.baseName.toLowerCase() %>-keycloak
        image: jboss/keycloak
        command: ["-b", "0.0.0.0", "-Dkeycloak.migration.action=import", "-Dkeycloak.migration.provider=dir", "-Dkeycloak.migration.dir=/opt/jboss/keycloak/realm-config", "-Dkeycloak.migration.strategy=OVERWRITE_EXISTING", "-Djboss.socket.binding.port-offset=1000"]
        volumeMounts:
        - name: config-volume
          mountPath: /opt/jboss/keycloak/realm-config
        ports:
        - containerPort: 9080
        - containerPort: 9443
        - containerPort: 10990
        env:
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: DB_VENDOR
          value: "postgres"
        # The PostgreSQL user
        - name: DB_USER
          value: "keycloak"
        # The PostgreSQL user's password
        - name: DB_PASSWORD
          value: "keycloak"
        # The PostgreSQL database address: "<postgres-service-name>"."<namespace>"
        - name: DB_ADDR
          value: "<%= app.baseName.toLowerCase() %>-postgres-keycloak.<%= kubernetesNamespace %>"
        # The Keycloak user, which will be used for the Keycloak "Admin Console"
        - name: KEYCLOAK_USER
          value: "admin"
        # The Keycloak user's password
        - name: KEYCLOAK_PASSWORD
          value: "admin"
---
apiVersion: v1
kind: Service
metadata:
  name: <%= app.baseName.toLowerCase() %>-keycloak
  namespace: <%= kubernetesNamespace %>
  labels:
    app: <%= app.baseName.toLowerCase() %>-keycloak
spec:
  ports:
  - port: 9080
    <%_ if (kubernetesServiceType !== 'Ingress') { _%>
    type: <%= kubernetesServiceType %>
    <%_ } else { _%>
    type: ClusterIP
    <%_ } _%>
  selector:
    app: <%= app.baseName.toLowerCase() %>-keycloak

