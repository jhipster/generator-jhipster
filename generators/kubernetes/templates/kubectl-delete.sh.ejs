#!/bin/bash
<%#
 Copyright 2013-2023 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
# Files are ordered in proper order with needed wait for the dependent custom resource definitions to get initialized.
# Usage: bash kubectl-apply.sh

usage(){
 cat << EOF

 Usage: $0 -f
 Description: To delete k8s manifests using the default \`kubectl delete -f\` command
[OR]
 Usage: $0 -k
 Description: To delete k8s manifests using the kustomize \`kubectl delete -k\` command

EOF
exit 0
}

logSummary() {
    echo ""
        echo "#####################################################"
        echo "All resources got deleted successfully."
        echo "#####################################################"
}

default() {
    suffix=k8s
<%_ if (useECK) { _%>
    kubectl delete -f eck-${suffix}/
<%_ } _%>
<%_ if (istio && kubernetesServiceTypeIngress) { _%>
    kubectl delete -f istio-${suffix}/
<%_ } _%> 
<%_ if (monitoringPrometheus) { _%>
    kubectl delete -f monitoring-${suffix}/jhipster-grafana-dashboard.yml
    kubectl delete -f monitoring-${suffix}/jhipster-grafana.yml
    kubectl delete -f monitoring-${suffix}/jhipster-prometheus-cr.yml
    kubectl delete -f monitoring-${suffix}/jhipster-prometheus-crd.yml    
<%_ } _%>
<%_ if (useKafka) { _%>
    kubectl delete -f messagebroker-${suffix}/
<%_ } _%> 
<%_ appConfigs.forEach((appConfig, index) =>  { _%>
    kubectl delete -f <%- appConfig.baseName.toLowerCase() %>-${suffix}/
<%_ }) _%>
<%_ if (serviceDiscoveryEureka || serviceDiscoveryConsul) { _%>
    kubectl delete -f registry-${suffix}/
<%_ } _%> 
<%_ if (useKeycloak) { _%>    
    kubectl delete -f keycloak-${suffix}/
<%_ } _%>
<%_ if (kubernetesStorageClassName !== '') { _%>
    kubectl delete -f storage-class.yml
<%_ } _%> 
<%_ if (!kubernetesNamespaceDefault) { _%>
    kubectl delete -f namespace.yml
<%_ } _%> 
}

kustomize() {
    kubectl delete -k ./
}


[[ "$@" =~ ^-[fk]{1}$ ]]  || usage;

while getopts ":fk" opt; do
    case ${opt} in
    f ) echo "Applying default \`kubectl delete -f\`"; default ;;
    k ) echo "Applying kustomize \`kubectl delete -k\`"; kustomize ;;
    \? | * ) usage ;;
    esac
done

logSummary
