import { defineComponent, inject, ref, Ref } from 'vue';
import { useRoute, useRouter } from 'vue-router/composables';

import UserManagementService from './user-management.service';
import AlertService from '@/shared/alert/alert.service';

export default defineComponent({
  name: '<%=jhiPrefixCapitalized%>UserManagementView',
  setup() {
    const route = useRoute();
    const router = useRouter();

    const alertService = inject('alertService', () => new AlertService());
    const userManagementService = inject('userManagementService', () => new UserManagementService(), true);

    const user: Ref<any> = ref(null);

    async function loadUser(userId: <%- user.primaryKey.tsType _%>) {
      try {
        const response = await userManagementService.get(userId);
        user.value = response.data;
      } catch (error) {
        alertService().showHttpError(router.app, error.response);
      }
    }

<%_ if (user.primaryKey.tsType === 'number') { _%>
    loadUser(Number(route.params.userId));
<%_ } else { _%>
    loadUser(route.params.userId);
<%_ } _%>

    return {
      alertService,
      userManagementService,
      user,
    };
  },
});
