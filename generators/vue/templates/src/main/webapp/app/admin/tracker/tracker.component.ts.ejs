import <% if (authenticationUsesCsrf) { %>Vue, <% } %>{ defineComponent, inject, ref, Ref, onMounted, onUnmounted } from 'vue';
import { Subscription } from 'rxjs';

import TrackerService from './tracker.service';

export default defineComponent({
  name: '<%=jhiPrefixCapitalized%>TrackerComponent',
  setup() {
    const trackerService = inject<TrackerService>('trackerService');
    const activities: Ref<any[]> = ref([]);
    const subscription: Ref<Subscription> = ref(null);

    const showActivity = (activity: any) => {
      let existingActivity = false;
      for (let index = 0; index < activities.value.length; index++) {
        if (activities.value[index].sessionId === activity.sessionId) {
          existingActivity = true;
          if (activity.page === 'logout') {
            activities.value.splice(index, 1);
          } else {
            activities.value.splice(index, 1);
            activities.value.push(activity);
          }
        }
      }
      if (!existingActivity && activity.page !== 'logout') {
        activities.value.push(activity);
      }
    };

    onMounted(() => {
      subscription.value = trackerService.subscribe(activity => {
        showActivity(activity);
      });
    });

    onUnmounted(() => {
      if (subscription.value) {
        subscription.value.unsubscribe();
        subscription.value = null;
      }
    });

    return {
      activities,
    };
  },
});
