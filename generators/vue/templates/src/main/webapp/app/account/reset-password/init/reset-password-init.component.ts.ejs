import { email, maxLength, minLength, required } from 'vuelidate/lib/validators';
import axios from 'axios';
import { defineComponent, ref, Ref } from 'vue';

const validations = {
  resetAccount: {
    email: {
      required,
      minLength: minLength(5),
      maxLength: maxLength(254),
      email,
    },
  },
};

interface ResetAccount {
  email: string | null;
}

export default defineComponent({
  name: 'ResetPasswordInit',
  validations,
  setup(prop) {
    const error: Ref<string> = ref(null);
    const success: Ref<boolean> = ref(false);
    const resetAccount: Ref<ResetAccount> = ref({
      email: null,
    });

    return {
      error,
      success,
      resetAccount,
    };
  },
  methods: {
    async requestReset(): Promise<void> {
      this.error = null;
      await axios
        .post('api/account/reset-password/init', this.resetAccount.email, {
          headers: {
            'content-type': 'text/plain',
          },
        })
        .then(() => {
          this.success = true;
        })
        .catch(() => {
          this.success = null;
          this.error = 'ERROR';
        });
    },
  },
});
