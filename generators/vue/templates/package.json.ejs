<%#
 Copyright 2013-2024 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
{
  "name": "<%= dasherizedBaseName %>",
  "version": "0.0.0",
  "description": "<%= projectDescription %>",
  "private": true,
  "license": "UNLICENSED",
  "cacheDirectories": [
    "node_modules"
  ],
  "dependencies": {
    "@fortawesome/fontawesome-svg-core": "<%= nodeDependencies['@fortawesome/fontawesome-svg-core'] %>",
    "@fortawesome/free-solid-svg-icons": "<%= nodeDependencies['@fortawesome/free-solid-svg-icons'] %>",
    "@fortawesome/vue-fontawesome": "<%= nodeDependencies['@fortawesome/vue-fontawesome'] %>",
    "@vue/compat": "<%= nodeDependencies.vue %>",
    "@vuelidate/core": "<%= nodeDependencies['@vuelidate/core'] %>",
    "@vuelidate/validators": "<%= nodeDependencies['@vuelidate/validators'] %>",
    "@vueuse/core": "<%= nodeDependencies['@vueuse/core'] %>",
    "axios": "<%= nodeDependencies['axios'] %>",
    "bootstrap": "<%= nodeDependencies['bootstrap'] %>",
    "bootstrap-vue": "<%= nodeDependencies['bootstrap-vue'] %>",
<%_ if (!clientThemeNone) { _%>
    "bootswatch": "<%= nodeDependencies['bootswatch'] %>",
<%_ } _%>
    "dayjs": "<%= nodeDependencies['dayjs'] %>",
<%_ if (communicationSpringWebsocket) { _%>
    "@stomp/rx-stomp": "1.1.4",
    "js-cookie": "<%= nodeDependencies['js-cookie'] %>",
    "sockjs-client": "1.5.2",
    "rxjs": "7.4.0",
<%_ } _%>
    "pinia": "<%= nodeDependencies.pinia %>",
    "vue": "<%= nodeDependencies['vue'] %>",
<%_ if (enableTranslation) { _%>
    "deepmerge": null,
    "vue-i18n": "<%= nodeDependencies['vue-i18n'] %>",
<%_ } _%>
    "vue-router": "<%= nodeDependencies['vue-router'] %>"
  },
  "devDependencies": {
<%_ if (applicationTypeGateway && microfrontend) { _%>
    "@module-federation/utilities": "<%= nodeDependencies['@module-federation/utilities'] %>",
<%_ } _%>
<%_ if (microfrontend) { _%>
    "@originjs/vite-plugin-federation": "1.3.3",
    "browser-sync-webpack-plugin": "<%= nodeDependencies['browser-sync-webpack-plugin'] %>",
    "copy-webpack-plugin": "<%= nodeDependencies['copy-webpack-plugin'] %>",
    "css-loader": "<%= nodeDependencies['css-loader'] %>",
    "css-minimizer-webpack-plugin": "<%= nodeDependencies['css-minimizer-webpack-plugin'] %>",
    "html-webpack-plugin": "<%= nodeDependencies['html-webpack-plugin'] %>",
  <%_ if (enableTranslation) { _%>
    "folder-hash": "<%= nodeDependencies['folder-hash'] %>",
    "merge-jsons-webpack-plugin": "<%= nodeDependencies['merge-jsons-webpack-plugin'] %>",
  <%_ } _%>
    "mini-css-extract-plugin": "<%= nodeDependencies['mini-css-extract-plugin'] %>",
    "postcss-loader": "<%= nodeDependencies['postcss-loader'] %>",
    "sass-loader": "<%= nodeDependencies['sass-loader'] %>",
    "terser-webpack-plugin": "<%= nodeDependencies['terser-webpack-plugin'] %>",
    "ts-loader": "<%= nodeDependencies['ts-loader'] %>",
    "vue-loader": "<%= nodeDependencies['vue-loader'] %>",
    "vue-style-loader": "<%= nodeDependencies['vue-style-loader'] %>",
    "webpack": "<%= nodeDependencies['webpack'] %>",
    "webpack-bundle-analyzer": "<%= nodeDependencies['webpack-bundle-analyzer'] %>",
    "webpack-cli": "<%= nodeDependencies['webpack-cli'] %>",
    "webpack-dev-server": "<%= nodeDependencies['webpack-dev-server'] %>",
    "webpack-merge": "<%= nodeDependencies['webpack-merge'] %>",
    "workbox-webpack-plugin": "<%= nodeDependencies['workbox-webpack-plugin'] %>",
<%_ } _%>
    "@pinia/testing": "<%= nodeDependencies['@pinia/testing'] %>",
    "@rushstack/eslint-patch": "<%= nodeDependencies['@rushstack/eslint-patch'] %>",
    "@types/node": "<%= nodeDependencies['@types/node'] %>",
    "@types/sinon": "<%= nodeDependencies['@types/sinon'] %>",
    "@tsconfig/node18": null,
    "@vitejs/plugin-vue": "<%= nodeDependencies['@vitejs/plugin-vue'] %>",
    "@vitest/coverage-v8": "<%= nodeDependencies.vitest %>",
    "@vue/eslint-config-prettier": "<%= nodeDependencies['@vue/eslint-config-prettier'] %>",
    "@vue/eslint-config-typescript": "<%= nodeDependencies['@vue/eslint-config-typescript'] %>",
    "@vue/test-utils": "<%= nodeDependencies['@vue/test-utils'] %>",
    "@vue/tsconfig": null,
    "axios-mock-adapter": "<%= nodeDependencies['axios-mock-adapter'] %>",
    "autoprefixer": "<%= nodeDependencies['autoprefixer'] %>",
    "flush-promises": null,
    "happy-dom": "<%= nodeDependencies['happy-dom'] %>",
    "numeral": "<%= nodeDependencies['numeral'] %>",
    "postcss-import": "<%= nodeDependencies['postcss-import'] %>",
    "postcss-url": "<%= nodeDependencies['postcss-url'] %>",
<%_ if (cypressTests) { _%>
    "cypress": "<%= nodeDependencies['cypress'] %>",
<%_ } _%>
    "rimraf": "<%= nodeDependencies['rimraf'] %>",
    "rollup-plugin-copy": null,
    "sass": "<%= nodeDependencies['sass'] %>",
    "sinon": "<%= nodeDependencies['sinon'] %>",
    "swagger-ui-dist": "<%= nodeDependencies['swagger-ui-dist'] %>",
    "eslint": "<%= nodeDependencies['eslint'] %>",
    "eslint-plugin-prettier": "<%= nodeDependencies['eslint-plugin-prettier'] %>",
    "eslint-plugin-vue": "<%= nodeDependencies['eslint-plugin-vue'] %>",
    "typescript": "<%= nodeDependencies['typescript'] %>",
    "vite": null,
    "vitest": "<%= nodeDependencies.vitest %>",
    "vitest-sonar-reporter": "<%= nodeDependencies['vitest-sonar-reporter'] %>"
  },
  "engines": {
    "node": ">=<%= nodeVersion %>",
    "npm": ">= 6.14.4"
  },
  "config": {
    "default_environment": "prod"
  },
  "scripts": {
<%_ if (microfrontend) { %>
    "prettier:check": "prettier --check \"{,src/**/,webpack/,.blueprint/**/}*.{<%= prettierExtensions %>}\"",
    "prettier:format": "prettier --write \"{,src/**/,webpack/,.blueprint/**/}*.{<%= prettierExtensions %>}\"",
<%_ } else { %>
    "prettier:check": "prettier --check \"{,src/**/,.blueprint/**/}*.{<%= prettierExtensions %>}\"",
    "prettier:format": "prettier --write \"{,src/**/,.blueprint/**/}*.{<%= prettierExtensions %>}\"",
<%_ } %>
    "lint": "eslint . --ext .ts,.vue ",
    "lint:fix": "eslint . --ext .ts,.vue --fix",
    "cleanup": "rimraf <%= this.relativeDir(clientRootDir, temporaryDir) %>",
    "clean-www": "rimraf <%= this.relativeDir(clientRootDir, clientDistDir) %>",
    "start": "<%= clientPackageManager %> run webapp:dev --",
    "start-tls": "<%= clientPackageManager %> run webapp:dev -- --env.tls",
    "serve": "<%= clientPackageManager %> run start --",
    "build": "<%= clientPackageManager %> run webapp:prod --",
    "build-watch": "concurrently 'npm run webapp:build:dev -- --watch'<% if(!skipServer) { %> npm:backend:start<% } %>",
    "vitest-run": "vitest --run --coverage",
    "vitest": "vitest",
    "pretest": "<%= clientPackageManager %> run lint",
    "test": "<%= clientPackageManager %> run vitest-run --",
    "test:watch": "<%= clientPackageManager %> run vitest",
    "watch": "concurrently npm:start<% if(!skipServer) { %> npm:backend:start<% } %>",
    "webapp:build": "<%= clientPackageManager %> run clean-www && <%= clientPackageManager %> run webapp:build:dev --",
<%_ if (microfrontend) { %>
    "webapp:build:dev": "<%= clientPackageManager %> run webpack -- --mode development --env stats=minimal",
    "webapp:build:prod": "<%= clientPackageManager %> run webpack -- --mode production --env stats=minimal",
    "webapp:dev": "<%= clientPackageManager %> run webpack-dev-server -- --mode development --env stats=normal",
<%_ } else { %>
    "webapp:build:dev": "<%= clientPackageManager %> run vite-build",
    "webapp:build:prod": "<%= clientPackageManager %> run vite-build",
    "webapp:dev": "<%= clientPackageManager %> run vite-serve",
    "webapp:serve": "<%= clientPackageManager %> run vite-serve",
<%_ } %>
    "webapp:prod": "<%= clientPackageManager %> run clean-www && <%= clientPackageManager %> run webapp:build:prod --",
    "webapp:test": "<%= clientPackageManager %> run test --",
<%_ if (microfrontend) { %>
    "webpack-dev-server": "webpack serve --config webpack/webpack.common.js",
    "webpack": "webpack --config webpack/webpack.common.js"
<%_ } else { %>
    "vite-serve": "vite",
    "vite-build": "vite build"
<%_ } %>
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not ie <= 8"
  ]
}
