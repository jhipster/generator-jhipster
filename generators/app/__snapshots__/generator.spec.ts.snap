// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generator - app help should print expected information 1`] = `
"Usage: jhipster app [options]

[Default] Create a new JHipster application based on the selected options

Options:
  --auto-crlf                              Detect line endings
  --defaults                               Execute jhipster with default config
  --skip-client                            Skip the client-side application generation
  --skip-server                            Skip the server-side application generation
  --jhi-prefix <value>                     Add prefix before services, controllers and states name
  --entity-suffix <value>                  Add suffix after entities name
  --dto-suffix <value>                     Add suffix after dtos name
  --blueprint <value...>                   DEPRECATED: Specify a generator blueprint to use for the sub generators
  --blueprints <value>                     A comma separated list of one or more generator blueprints to use for the sub generators, e.g. --blueprints kotlin,vuejs
  --ignore-errors                          Don't fail on prettier errors.
  --pk-type <value>                        Default primary key type (beta)
  --client-package-manager <value>         Force an unsupported client package manager
  --test-frameworks <value...>             Test frameworks to be generated
  --skip-cache                             Do not remember prompt answers (default: false)
  --skip-install                           Do not automatically install dependencies (default: false)
  --force-install                          Fail on install dependencies error (default: false)
  --ask-answered                           Show prompts for already configured options (default: false)
  --base-name <value>                      Application base name
  --skip-jhipster-dependencies             Don't write jhipster dependencies to package.json. (env: JHI_SKIP_JHIPSTER_DEPENDENCIES)
  --creation-timestamp <value>             Project creation timestamp (used for reproducible builds)
  --jdl-store <value>                      JDL store
  --prettier-tab-width <value>             Default tab width for prettier (default: 2)
  --monorepository                         Use monorepository
  --skip-commit-hook                       Skip adding husky commit hooks
  --db <value>                             Provide DB name for the application when skipping server side generation
  --skip-user-management                   Skip the user management module during app generation
  --recreate-initial-changelog             Recreate the initial database changelog based on the current config
  --cache-provider <value>                 Cache provider
  --enable-swagger-codegen                 API first development using OpenAPI-generator
  --enable-hibernate-cache                 Enable hibernate cache
  --search-engine <value>                  Provide search engine for the application when skipping server side generation
  --skip-check-length-of-identifier        Skip check the length of the identifier, only for recent Oracle databases that support 30+ characters metadata
  --skip-db-changelog                      Skip the generation of database migrations
  --skip-fake-data                         Skip generation of fake data for development
  --websocket <value>                      Provide websocket option for the application when skipping server side generation
  --project-version <value>                project version to use, this option is not persisted (env: JHI_PROJECT_VERSION)
  --jhipster-dependencies-version <value>  jhipster-dependencies version to use, this option is not persisted (env: JHIPSTER_DEPENDENCIES_VERSION)
  --application-type <value>               Application type to generate (choices: "monolith", "gateway", "microservice")
  --reactive                               Generate a reactive backend
  --service-discovery-type <value>         Service discovery type (choices: "consul", "eureka", "no")
  --auth <value>                           Provide authentication type for the application when skipping server side generation (choices: "jwt", "oauth2", "session")
  --feign-client                           Generate a feign client (default: false)
  --sync-user-with-idp                     Allow relationships with User for oauth2 applications
  --message-broker <value>                 message broker (choices: "kafka", "pulsar", "no")
  --database-migration <value>             Database migration (choices: "liquibase", "no")
  --graalvm-support                        Experimental GraalVM Native support
  --with-generated-flag                    Add a GeneratedByJHipster annotation to all generated java classes and interfaces
  --package-name <value>                   The package name for the generated application
  --build <value>                          Provide build tool for the application when skipping server side generation (default: maven) (choices: "maven", "gradle")
  --enable-gradle-enterprise               Enable Gradle Enterprise integration (default: false)
  --gradle-enterprise-host <value>         Gradle Enterprise Host
  --incremental-changelog                  Creates incremental database changelogs
  --dev-database-type <value>              Development database
  --client-framework <value>               Provide client framework for the application (choices: "angular", "react", "vue", "no")
  --microfrontend                          Enable microfrontend support
  --microfrontends <value>                 Microfrontends to load
  --with-admin-ui                          Generate administrative user interface
  --client-root-dir <value>                Client root
  --skip-git                               Skip git repository initialization
  --force-git                              Force commit to git repository
  --commit-msg <value>                     Commit changes (implies forceGit)
  --cypress-coverage                       Enable Cypress code coverage report generation
  --cypress-audit                          Enable cypress-audit/lighthouse report generation
  --enable-translation                     Enable translation
  -l, --language <value...>                Language to be added to application (existing languages are not removed)
  -n, --native-language [value]            Set application native language
  --regenerate-languages                   Regenerate languages
  -h, --help                               display help for command
"
`;

exports[`generator - app jdlStore with application and entities should match snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "creationTimestamp": 1577836800000,
    "jdlStore": "app.jdl"
  }
}
",
    "stateCleared": "modified",
  },
  "app.jdl": {
    "contents": "application {
  config {
    baseName jhipster
    skipClient true
    skipServer true
  }

  entities Foo, Bar
}

@ChangelogDate("20200101000100")
entity Foo
@ChangelogDate("20200101000200")
entity Bar
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - app jdlStore with application should match snapshot 1`] = `
{
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "creationTimestamp": 1577836800000,
    "jdlStore": "app.jdl"
  }
}
",
    "stateCleared": "modified",
  },
  "app.jdl": {
    "contents": "application {
  config {
    baseName jhipster
    skipClient true
    skipServer true
  }
}
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - app jdlStore with incremental changelog application and entities should match snapshot 1`] = `
{
  ".jhipster/Bar.json": {
    "contents": "{
  "annotations": {
    "changelogDate": "20200101000200"
  },
  "fields": [],
  "name": "Bar",
  "relationships": []
}
",
    "stateCleared": "modified",
  },
  ".jhipster/Foo.json": {
    "contents": "{
  "annotations": {
    "changelogDate": "20200101000100"
  },
  "fields": [],
  "name": "Foo",
  "relationships": []
}
",
    "stateCleared": "modified",
  },
  ".yo-rc.json": {
    "contents": "{
  "generator-jhipster": {
    "creationTimestamp": 1577836800000,
    "jdlStore": "app.jdl"
  }
}
",
    "stateCleared": "modified",
  },
  "app.jdl": {
    "contents": "application {
  config {
    baseName jhipster
    incrementalChangelog true
    skipClient true
    skipServer true
  }

  entities Foo, Bar
}

@ChangelogDate("20200101000100")
entity Foo
@ChangelogDate("20200101000200")
entity Bar
",
    "stateCleared": "modified",
  },
}
`;

exports[`generator - app with default config should match snapshot 1`] = `
{
  "ANGULAR": "angular",
  "CLIENT_WEBPACK_DIR": "webpack/",
  "DOCUMENTATION_ARCHIVE_PATH": "/documentation-archive/",
  "DOCUMENTATION_URL": "https://www.jhipster.tech",
  "JAVA_COMPATIBLE_VERSIONS": [
    "17",
    "21",
    "23",
  ],
  "JAVA_VERSION": "JAVA_VERSION",
  "LOGIN_REGEX": "^(?>[a-zA-Z0-9!$&*+=?^_\`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
  "MAIN_DIR": "src/main/",
  "REACT": "react",
  "SERVER_MAIN_RES_DIR": "src/main/resources/",
  "SERVER_MAIN_SRC_DIR": "src/main/java/",
  "SERVER_TEST_RES_DIR": "src/test/resources/",
  "SERVER_TEST_SRC_DIR": "src/test/java/",
  "TEST_DIR": "src/test/",
  "VUE": "vue",
  "addOpenapiGeneratorPlugin": undefined,
  "addPrettierExtensions": [Function],
  "addSpringMilestoneRepository": false,
  "angularEntities": [],
  "angularLocaleId": "en",
  "anyEntityHasRelationshipWithUser": false,
  "applicationType": "monolith",
  "applicationTypeAny": true,
  "applicationTypeGateway": false,
  "applicationTypeMicroservice": false,
  "applicationTypeMonolith": true,
  "authenticationType": "jwt",
  "authenticationTypeAny": true,
  "authenticationTypeJwt": true,
  "authenticationTypeOauth2": false,
  "authenticationTypeSession": false,
  "authenticationUsesCsrf": false,
  "authority": Any<Object>,
  "backendType": "Java",
  "backendTypeJavaAny": true,
  "backendTypeSpringBoot": true,
  "baseName": "jhipster",
  "blueprints": [],
  "buildTool": "maven",
  "buildToolAny": true,
  "buildToolExecutable": "mvnw",
  "buildToolGradle": false,
  "buildToolMaven": true,
  "buildToolUnknown": false,
  "cacheProvider": "ehcache",
  "cacheProviderAny": true,
  "cacheProviderCaffeine": false,
  "cacheProviderEhcache": true,
  "cacheProviderHazelcast": false,
  "cacheProviderInfinispan": false,
  "cacheProviderMemcached": false,
  "cacheProviderNo": false,
  "cacheProviderRedis": false,
  "camelizedBaseName": "jhipster",
  "capitalizedBaseName": "Jhipster",
  "caret": undefined,
  "cjsExtension": ".js",
  "cliName": undefined,
  "clientBundler": "webpack",
  "clientBundlerAny": true,
  "clientBundlerExperimentalEsbuild": false,
  "clientBundlerName": "Webpack",
  "clientBundlerVite": false,
  "clientBundlerWebpack": true,
  "clientDistDir": "target/classes/static/",
  "clientFramework": "angular",
  "clientFrameworkAngular": true,
  "clientFrameworkAny": true,
  "clientFrameworkBuiltIn": true,
  "clientFrameworkNo": false,
  "clientFrameworkReact": false,
  "clientFrameworkVue": false,
  "clientPackageJsonScripts": {},
  "clientPackageManager": "npm",
  "clientRootDir": "",
  "clientSrcDir": "src/main/webapp/",
  "clientTestDir": "src/test/javascript/",
  "clientTestFramework": "jest",
  "clientTestFrameworkName": "Jest",
  "clientTestFrameworks": undefined,
  "clientTestFrameworksAny": false,
  "clientTestFrameworksCypress": false,
  "clientTheme": "none",
  "clientThemeDark": false,
  "clientThemeLight": false,
  "clientThemeNone": true,
  "clientThemePrimary": false,
  "clientThemeVariant": "",
  "communicationSpringWebsocket": false,
  "cucumberTests": false,
  "customizeTemplatePaths": [],
  "cypressTests": false,
  "dasherizedBaseName": "jhipster",
  "databaseMigration": "liquibase",
  "databaseMigrationAny": true,
  "databaseMigrationLiquibase": true,
  "databaseMigrationNo": false,
  "databaseType": "sql",
  "databaseTypeAny": true,
  "databaseTypeCassandra": false,
  "databaseTypeCouchbase": false,
  "databaseTypeMongodb": false,
  "databaseTypeNeo4j": false,
  "databaseTypeNo": false,
  "databaseTypeSql": true,
  "defaultEnvironment": "prod",
  "defaultEnvironmentAny": true,
  "defaultEnvironmentDev": false,
  "defaultEnvironmentProd": true,
  "defaultPackaging": "jar",
  "defaultPackagingAny": true,
  "defaultPackagingJar": true,
  "defaultPackagingWar": false,
  "devDatabaseExtraOptions": "",
  "devDatabaseName": "jhipster",
  "devDatabasePassword": "",
  "devDatabaseType": "postgresql",
  "devDatabaseTypeH2Any": false,
  "devDatabaseTypeH2Disk": false,
  "devDatabaseTypeH2Memory": false,
  "devDatabaseTypeMariadb": false,
  "devDatabaseTypeMssql": false,
  "devDatabaseTypeMysql": false,
  "devDatabaseTypeOracle": false,
  "devDatabaseTypePostgres": true,
  "devDatabaseTypePostgresql": true,
  "devDatabaseUsername": "jhipster",
  "devHibernateDialect": "org.hibernate.dialect.PostgreSQLDialect",
  "devJdbcDriver": "org.postgresql.Driver",
  "devJdbcUrl": "jdbc:postgresql://localhost:5432/jhipster",
  "devLiquibaseUrl": "jdbc:postgresql://localhost:5432/jhipster",
  "devR2dbcUrl": undefined,
  "devServerPort": 4200,
  "devServerPortProxy": 9000,
  "dockerContainers": {
    "apache/kafka-native": "apache-kafka-native-placeholder",
    "apachepulsar/pulsar": "apachepulsar-pulsar-placeholder",
    "cassandra": "cassandra-placeholder",
    "cassandraImage": "cassandra-image-placeholder",
    "cassandraTag": "cassandra-tag-placeholder",
    "consul": "consul-placeholder",
    "consulConfigLoader": "consul-config-loader-placeholder",
    "consulConfigLoaderImage": "consul-config-loader-image-placeholder",
    "consulConfigLoaderTag": "consul-config-loader-tag-placeholder",
    "consulImage": "consul-image-placeholder",
    "consulTag": "consul-tag-placeholder",
    "couchbase": "couchbase-placeholder",
    "couchbase/server": "couchbase-server-placeholder",
    "couchbaseImage": "couchbase-image-placeholder",
    "couchbaseTag": "couchbase-tag-placeholder",
    "docker.io/bitnami/consul": "docker-io-bitnami-consul-placeholder",
    "eclipse-temurin": "eclipse-temurin-placeholder",
    "eclipseTemurin": "eclipse-temurin-placeholder",
    "eclipseTemurinImage": "eclipse-temurin-image-placeholder",
    "eclipseTemurinTag": "eclipse-temurin-tag-placeholder",
    "elasticsearch": "elasticsearch-placeholder",
    "elasticsearchImage": "elasticsearch-image-placeholder",
    "elasticsearchTag": "elasticsearch-tag-placeholder",
    "grafana": "grafana-placeholder",
    "grafana/grafana": "grafana-grafana-placeholder",
    "grafanaImage": "grafana-image-placeholder",
    "grafanaTag": "grafana-tag-placeholder",
    "grafanaWatcher": "grafana-watcher-placeholder",
    "grafanaWatcherImage": "grafana-watcher-image-placeholder",
    "grafanaWatcherTag": "grafana-watcher-tag-placeholder",
    "hazelcast": "hazelcast-placeholder",
    "hazelcast/management-center": "hazelcast-management-center-placeholder",
    "hazelcastImage": "hazelcast-image-placeholder",
    "hazelcastTag": "hazelcast-tag-placeholder",
    "javaJre": "java-jre-placeholder",
    "javaJreImage": "java-jre-image-placeholder",
    "javaJreTag": "java-jre-tag-placeholder",
    "jenkins": "jenkins-placeholder",
    "jenkins/jenkins": "jenkins-jenkins-placeholder",
    "jenkinsImage": "jenkins-image-placeholder",
    "jenkinsTag": "jenkins-tag-placeholder",
    "jhipster/consul-config-loader": "jhipster-consul-config-loader-placeholder",
    "jhipster/jhipster-control-center": "jhipster-jhipster-control-center-placeholder",
    "jhipster/jhipster-registry": "jhipster-jhipster-registry-placeholder",
    "jhipsterControlCenter": "jhipster-control-center-placeholder",
    "jhipsterControlCenterImage": "jhipster-control-center-image-placeholder",
    "jhipsterControlCenterTag": "jhipster-control-center-tag-placeholder",
    "jhipsterRegistry": "jhipster-registry-placeholder",
    "jhipsterRegistryImage": "jhipster-registry-image-placeholder",
    "jhipsterRegistryTag": "jhipster-registry-tag-placeholder",
    "kafka": "kafka-placeholder",
    "kafkaImage": "kafka-image-placeholder",
    "kafkaTag": "kafka-tag-placeholder",
    "keycloak": "keycloak-placeholder",
    "keycloakImage": "keycloak-image-placeholder",
    "keycloakTag": "keycloak-tag-placeholder",
    "mariadb": "mariadb-placeholder",
    "mariadbImage": "mariadb-image-placeholder",
    "mariadbTag": "mariadb-tag-placeholder",
    "mcr.microsoft.com/mssql/server": "mcr-microsoft-com-mssql-server-placeholder",
    "memcached": "memcached-placeholder",
    "memcachedImage": "memcached-image-placeholder",
    "memcachedTag": "memcached-tag-placeholder",
    "mongo": "mongo-placeholder",
    "mongoImage": "mongo-image-placeholder",
    "mongoTag": "mongo-tag-placeholder",
    "mongodb": "mongodb-placeholder",
    "mongodbImage": "mongodb-image-placeholder",
    "mongodbTag": "mongodb-tag-placeholder",
    "mssql": "mssql-placeholder",
    "mssqlImage": "mssql-image-placeholder",
    "mssqlTag": "mssql-tag-placeholder",
    "mysql": "mysql-placeholder",
    "mysqlImage": "mysql-image-placeholder",
    "mysqlTag": "mysql-tag-placeholder",
    "neo4J": "neo-4-j-placeholder",
    "neo4JImage": "neo-4-j-image-placeholder",
    "neo4JTag": "neo-4-j-tag-placeholder",
    "neo4j": "neo-4-j-placeholder",
    "openzipkin/zipkin": "openzipkin-zipkin-placeholder",
    "postgres": "postgres-placeholder",
    "postgresImage": "postgres-image-placeholder",
    "postgresTag": "postgres-tag-placeholder",
    "postgresql": "postgresql-placeholder",
    "postgresqlImage": "postgresql-image-placeholder",
    "postgresqlTag": "postgresql-tag-placeholder",
    "prom/alertmanager": "prom-alertmanager-placeholder",
    "prom/prometheus": "prom-prometheus-placeholder",
    "prometheus": "prometheus-placeholder",
    "prometheusAlertmanager": "prometheus-alertmanager-placeholder",
    "prometheusAlertmanagerImage": "prometheus-alertmanager-image-placeholder",
    "prometheusAlertmanagerTag": "prometheus-alertmanager-tag-placeholder",
    "prometheusImage": "prometheus-image-placeholder",
    "prometheusOperator": "prometheus-operator-placeholder",
    "prometheusOperatorImage": "prometheus-operator-image-placeholder",
    "prometheusOperatorTag": "prometheus-operator-tag-placeholder",
    "prometheusTag": "prometheus-tag-placeholder",
    "pulsar": "pulsar-placeholder",
    "pulsarImage": "pulsar-image-placeholder",
    "pulsarTag": "pulsar-tag-placeholder",
    "quay.io/coreos/grafana-watcher": "quay-io-coreos-grafana-watcher-placeholder",
    "quay.io/coreos/prometheus-operator": "quay-io-coreos-prometheus-operator-placeholder",
    "quay.io/keycloak/keycloak": "quay-io-keycloak-keycloak-placeholder",
    "redis": "redis-placeholder",
    "redisImage": "redis-image-placeholder",
    "redisTag": "redis-tag-placeholder",
    "sonar": "sonar-placeholder",
    "sonarImage": "sonar-image-placeholder",
    "sonarTag": "sonar-tag-placeholder",
    "sonarqube": "sonarqube-placeholder",
    "sonarqubeImage": "sonarqube-image-placeholder",
    "sonarqubeTag": "sonarqube-tag-placeholder",
    "swaggerEditor": "swagger-editor-placeholder",
    "swaggerEditorImage": "swagger-editor-image-placeholder",
    "swaggerEditorTag": "swagger-editor-tag-placeholder",
    "swaggerapi/swagger-editor": "swaggerapi-swagger-editor-placeholder",
    "zipkin": "zipkin-placeholder",
    "zipkinImage": "zipkin-image-placeholder",
    "zipkinTag": "zipkin-tag-placeholder",
  },
  "dockerServices": [
    "postgresql",
  ],
  "dockerServicesDir": "src/main/docker/",
  "documentationArchiveUrl": "https://www.jhipster.tech/documentation-archive/vJHIPSTER_VERSION",
  "domains": [
    "com.mycompany.myapp",
  ],
  "dtoSuffix": "DTO",
  "embeddableLaunchScript": undefined,
  "enableGradleEnterprise": false,
  "enableHibernateCache": true,
  "enableI18nRTL": false,
  "enableSwaggerCodegen": false,
  "enableTranslation": true,
  "endpointPrefix": "",
  "entityPackages": [
    "com.mycompany.myapp",
  ],
  "entitySuffix": "",
  "eslintConfigFile": "eslint.config.mjs",
  "fakerSeed": undefined,
  "feignClient": false,
  "frontendAppName": "jhipsterApp",
  "gatewayRoutes": undefined,
  "gatewayServerPort": undefined,
  "gatewayServicesApiAvailable": undefined,
  "gatlingTests": false,
  "generateAuthenticationApi": true,
  "generateBuiltInAuthorityEntity": true,
  "generateBuiltInUserEntity": true,
  "generateInMemoryUserCredentials": false,
  "generateSpringAuditor": true,
  "generateUserManagement": true,
  "githubRepository": undefined,
  "githubWorkflows": undefined,
  "graalvmSupport": undefined,
  "gradleEnterpriseHost": undefined,
  "hipster": "jhipster_family_member_3",
  "hipsterBugTrackerLink": "https://github.com/jhipster/generator-jhipster/issues?state=open",
  "hipsterBugTrackerProductName": "JHipster",
  "hipsterChatLink": "https://gitter.im/jhipster/generator-jhipster",
  "hipsterChatProductName": "JHipster",
  "hipsterDocumentationLink": "https://www.jhipster.tech/",
  "hipsterHomePageProductName": "JHipster",
  "hipsterName": "Java Hipster",
  "hipsterProductName": "JHipster",
  "hipsterProjectLink": "https://github.com/jhipster/generator-jhipster",
  "hipsterStackOverflowProductName": "JHipster",
  "hipsterStackoverflowLink": "https://stackoverflow.com/tags/jhipster/info",
  "hipsterTwitterLink": "https://twitter.com/jhipster",
  "hipsterTwitterUsername": "@jhipster",
  "humanizedBaseName": "JHipster",
  "imperativeOrReactive": "imperative",
  "incrementalChangelog": undefined,
  "javaCompatibleVersions": [
    "17",
    "21",
    "23",
  ],
  "javaDependencies": {
    "archunit-junit5": "'ARCHUNIT-JUNIT-5-VERSION'",
    "blockhound-junit-platform": "'BLOCKHOUND-JUNIT-PLATFORM-VERSION'",
    "checkstyle": "'CHECKSTYLE-VERSION'",
    "checksum-maven-plugin": "'CHECKSUM-MAVEN-PLUGIN-VERSION'",
    "common-custom-user-data-gradle-plugin": "'COMMON-CUSTOM-USER-DATA-GRADLE-PLUGIN-VERSION'",
    "commons-beanutils": "'COMMONS-BEANUTILS-VERSION'",
    "couchmove": "'COUCHMOVE-VERSION'",
    "cucumber-bom": "'CUCUMBER-BOM-VERSION'",
    "feign-reactor-bom": "'FEIGN-REACTOR-BOM-VERSION'",
    "frontend-maven-plugin": "'FRONTEND-MAVEN-PLUGIN-VERSION'",
    "gatling": "'GATLING-VERSION'",
    "gatling-gradle": "'GATLING-GRADLE-VERSION'",
    "gatling-maven-plugin": "'GATLING-MAVEN-PLUGIN-VERSION'",
    "git-commit-id-maven-plugin": "'GIT-COMMIT-ID-MAVEN-PLUGIN-VERSION'",
    "gradle-enterprise": "'GRADLE-ENTERPRISE-VERSION'",
    "gradle-git-properties": "'GRADLE-GIT-PROPERTIES-VERSION'",
    "gradle-liquibase": "'GRADLE-LIQUIBASE-VERSION'",
    "gradle-modernizer-plugin": "'GRADLE-MODERNIZER-PLUGIN-VERSION'",
    "gradle-openapi-generator": "'GRADLE-OPENAPI-GENERATOR-VERSION'",
    "gradle-sonarqube": "'GRADLE-SONARQUBE-VERSION'",
    "hazelcast-hibernate53": "'HAZELCAST-HIBERNATE-53-VERSION'",
    "hazelcast-spring": "'HAZELCAST-SPRING-VERSION'",
    "jackson-databind-nullable": "'JACKSON-DATABIND-NULLABLE-VERSION'",
    "jacoco-maven-plugin": "'JACOCO-MAVEN-PLUGIN-VERSION'",
    "jhipster-dependabot": "'JHIPSTER-DEPENDABOT-VERSION'",
    "jib-maven-plugin": "'JIB-MAVEN-PLUGIN-VERSION'",
    "jib-spring-boot-extension-maven": "'JIB-SPRING-BOOT-EXTENSION-MAVEN-VERSION'",
    "lifecycle-mapping": "'LIFECYCLE-MAPPING-VERSION'",
    "lz4-java": "'LZ-4-JAVA-VERSION'",
    "mapstruct": "'MAPSTRUCT-VERSION'",
    "maven-antrun-plugin": "'MAVEN-ANTRUN-PLUGIN-VERSION'",
    "maven-checkstyle-plugin": "'MAVEN-CHECKSTYLE-PLUGIN-VERSION'",
    "maven-clean-plugin": "'MAVEN-CLEAN-PLUGIN-VERSION'",
    "maven-compiler-plugin": "'MAVEN-COMPILER-PLUGIN-VERSION'",
    "maven-enforcer-plugin": "'MAVEN-ENFORCER-PLUGIN-VERSION'",
    "maven-failsafe-plugin": "'MAVEN-FAILSAFE-PLUGIN-VERSION'",
    "maven-jar-plugin": "'MAVEN-JAR-PLUGIN-VERSION'",
    "maven-javadoc-plugin": "'MAVEN-JAVADOC-PLUGIN-VERSION'",
    "maven-resources-plugin": "'MAVEN-RESOURCES-PLUGIN-VERSION'",
    "maven-site-plugin": "'MAVEN-SITE-PLUGIN-VERSION'",
    "maven-surefire-plugin": "'MAVEN-SUREFIRE-PLUGIN-VERSION'",
    "maven-war-plugin": "'MAVEN-WAR-PLUGIN-VERSION'",
    "micrometer-context-propagation": "'MICROMETER-CONTEXT-PROPAGATION-VERSION'",
    "modernizer-maven-plugin": "'MODERNIZER-MAVEN-PLUGIN-VERSION'",
    "mongock-bom": "'MONGOCK-BOM-VERSION'",
    "neo4j-migrations-spring-boot-starter": "'NEO-4-J-MIGRATIONS-SPRING-BOOT-STARTER-VERSION'",
    "node-gradle": "'NODE-GRADLE-VERSION'",
    "nohttp-checkstyle": "'NOHTTP-CHECKSTYLE-VERSION'",
    "openapi-generator-maven-plugin": "'OPENAPI-GENERATOR-MAVEN-PLUGIN-VERSION'",
    "picocli": "'PICOCLI-VERSION'",
    "properties-maven-plugin": "'PROPERTIES-MAVEN-PLUGIN-VERSION'",
    "redisson": "'REDISSON-VERSION'",
    "sonar-maven-plugin": "'SONAR-MAVEN-PLUGIN-VERSION'",
    "spotless-gradle-plugin": "'SPOTLESS-GRADLE-PLUGIN-VERSION'",
    "spotless-maven-plugin": "'SPOTLESS-MAVEN-PLUGIN-VERSION'",
    "spring-cloud-dependencies": "'SPRING-CLOUD-DEPENDENCIES-VERSION'",
    "springdoc": "'SPRINGDOC-VERSION'",
    "testng": "'TESTNG-VERSION'",
    "typesafe": "'TYPESAFE-VERSION'",
    "xmemcached": "'XMEMCACHED-VERSION'",
    "xmemcached-provider": "'XMEMCACHED-PROVIDER-VERSION'",
  },
  "javaManagedProperties": {},
  "javaNodeBuildPaths": [
    "angular.json",
    "package-lock.json",
    "package.json",
    "src/main/webapp/",
    "target/classes/static/",
    "tsconfig.app.json",
    "tsconfig.json",
    "webpack/",
  ],
  "javaPackageSrcDir": "src/main/java/com/mycompany/myapp/",
  "javaPackageTestDir": "src/test/java/com/mycompany/myapp/",
  "javaProperties": {},
  "javaVersion": "JAVA_VERSION",
  "jdlStore": undefined,
  "jhiPrefix": "jhi",
  "jhiPrefixCapitalized": "Jhi",
  "jhiPrefixDashed": "jhi",
  "jhiTablePrefix": "jhi",
  "jhipsterDependenciesVersion": "JHIPSTER_DEPENDENCIES_VERSION",
  "jhipsterPackageJson": Any<Object>,
  "jhipsterVersion": "JHIPSTER_VERSION",
  "jwtSecretKey": "SECRET--64",
  "languages": [
    "en",
  ],
  "languagesDefinition": [
    {
      "angularLocale": "en",
      "dayjsLocale": "en",
      "displayName": "English",
      "fakerjsLocale": "en",
      "javaLocaleMessageSourceSuffix": "en",
      "languageTag": "en",
      "name": "English",
      "rtl": false,
    },
  ],
  "liquibaseAddH2Properties": false,
  "liquibaseDefaultSchemaName": "",
  "listOrFlux": "List",
  "listOrFluxClassPath": "java.util.List",
  "lowercaseBaseName": "jhipster",
  "mainClass": "JhipsterApp",
  "mainJavaDir": "src/main/java/",
  "mainJavaPackageDir": "src/main/java/com/mycompany/myapp/",
  "mainJavaResourceDir": "src/main/resources/",
  "messageBroker": "no",
  "messageBrokerAny": false,
  "messageBrokerKafka": false,
  "messageBrokerNo": true,
  "messageBrokerPulsar": false,
  "microfrontend": false,
  "microfrontends": undefined,
  "mjsExtension": ".mjs",
  "monorepository": undefined,
  "nativeLanguage": "en",
  "nativeLanguageDefinition": {
    "angularLocale": "en",
    "dayjsLocale": "en",
    "displayName": "English",
    "fakerjsLocale": "en",
    "javaLocaleMessageSourceSuffix": "en",
    "languageTag": "en",
    "name": "English",
    "rtl": false,
  },
  "nodeDependencies": {
    "@angular-architects/module-federation": "ANGULAR_ARCHITECTS_MODULE_FEDERATION_VERSION",
    "@angular-architects/module-federation-runtime": "ANGULAR_ARCHITECTS_MODULE_FEDERATION_RUNTIME_VERSION",
    "@angular-builders/custom-esbuild": "ANGULAR_BUILDERS_CUSTOM_ESBUILD_VERSION",
    "@angular-builders/custom-webpack": "ANGULAR_BUILDERS_CUSTOM_WEBPACK_VERSION",
    "@angular-builders/jest": "ANGULAR_BUILDERS_JEST_VERSION",
    "@angular/cli": "ANGULAR_CLI_VERSION",
    "@angular/common": "ANGULAR_COMMON_VERSION",
    "@cypress/code-coverage": "CYPRESS_CODE_COVERAGE_VERSION",
    "@eslint/js": "ESLINT_JS_VERSION",
    "@fortawesome/angular-fontawesome": "FORTAWESOME_ANGULAR_FONTAWESOME_VERSION",
    "@fortawesome/fontawesome-svg-core": "FORTAWESOME_FONTAWESOME_SVG_CORE_VERSION",
    "@fortawesome/free-solid-svg-icons": "FORTAWESOME_FREE_SOLID_SVG_ICONS_VERSION",
    "@ng-bootstrap/ng-bootstrap": "NG_BOOTSTRAP_NG_BOOTSTRAP_VERSION",
    "@ngx-translate/core": "NGX_TRANSLATE_CORE_VERSION",
    "@ngx-translate/http-loader": "NGX_TRANSLATE_HTTP_LOADER_VERSION",
    "@popperjs/core": "POPPERJS_CORE_VERSION",
    "@stomp/rx-stomp": "STOMP_RX_STOMP_VERSION",
    "@types/jest": "TYPES_JEST_VERSION",
    "@types/node": "TYPES_NODE_VERSION",
    "@types/sockjs-client": "TYPES_SOCKJS_CLIENT_VERSION",
    "angular-eslint": "ANGULAR_ESLINT_VERSION",
    "babel-loader": "BABEL_LOADER_VERSION",
    "babel-plugin-istanbul": "BABEL_PLUGIN_ISTANBUL_VERSION",
    "bootstrap": "BOOTSTRAP_VERSION",
    "bootswatch": "BOOTSWATCH_VERSION",
    "browser-sync": "BROWSER_SYNC_VERSION",
    "browser-sync-webpack-plugin": "BROWSER_SYNC_WEBPACK_PLUGIN_VERSION",
    "buffer": "BUFFER_VERSION",
    "concurrently": "CONCURRENTLY_VERSION",
    "copy-webpack-plugin": "COPY_WEBPACK_PLUGIN_VERSION",
    "cypress": "CYPRESS_VERSION",
    "cypress-audit": "CYPRESS_AUDIT_VERSION",
    "dayjs": "DAYJS_VERSION",
    "deepmerge": "DEEPMERGE_VERSION",
    "eslint": "ESLINT_VERSION",
    "eslint-config-prettier": "ESLINT_CONFIG_PRETTIER_VERSION",
    "eslint-plugin-cypress": "ESLINT_PLUGIN_CYPRESS_VERSION",
    "eslint-plugin-prettier": "ESLINT_PLUGIN_PRETTIER_VERSION",
    "folder-hash": "FOLDER_HASH_VERSION",
    "globals": "GLOBALS_VERSION",
    "globby": "GLOBBY_VERSION",
    "husky": "HUSKY_VERSION",
    "jest": "JEST_VERSION",
    "jest-date-mock": "JEST_DATE_MOCK_VERSION",
    "jest-junit": "JEST_JUNIT_VERSION",
    "jest-preset-angular": "JEST_PRESET_ANGULAR_VERSION",
    "jest-sonar": "JEST_SONAR_VERSION",
    "lighthouse": "LIGHTHOUSE_VERSION",
    "lint-staged": "LINT_STAGED_VERSION",
    "merge-jsons-webpack-plugin": "MERGE_JSONS_WEBPACK_PLUGIN_VERSION",
    "ngx-cookie-service": "NGX_COOKIE_SERVICE_VERSION",
    "ngx-infinite-scroll": "NGX_INFINITE_SCROLL_VERSION",
    "npm": "NPM_VERSION",
    "nyc": "NYC_VERSION",
    "postcss-rtlcss": "POSTCSS_RTLCSS_VERSION",
    "prettier": "PRETTIER_VERSION",
    "prettier-plugin-java": "PRETTIER_PLUGIN_JAVA_VERSION",
    "prettier-plugin-packagejson": "PRETTIER_PLUGIN_PACKAGEJSON_VERSION",
    "rimraf": "RIMRAF_VERSION",
    "rxjs": "RXJS_VERSION",
    "sockjs-client": "SOCKJS_CLIENT_VERSION",
    "swagger-ui-dist": "SWAGGER_UI_DIST_VERSION",
    "ts-jest": "TS_JEST_VERSION",
    "tslib": "TSLIB_VERSION",
    "typescript": "TYPESCRIPT_VERSION",
    "typescript-eslint": "TYPESCRIPT_ESLINT_VERSION",
    "wait-on": "WAIT_ON_VERSION",
    "webpack": "WEBPACK_VERSION",
    "webpack-bundle-analyzer": "WEBPACK_BUNDLE_ANALYZER_VERSION",
    "webpack-merge": "WEBPACK_MERGE_VERSION",
    "webpack-notifier": "WEBPACK_NOTIFIER_VERSION",
    "zone.js": "ZONE_JS_VERSION",
  },
  "nodePackageManager": "npm",
  "nodeVersion": "NODE_VERSION",
  "optionalOrMono": "Optional",
  "optionalOrMonoClassPath": "java.util.Optional",
  "optionalOrMonoOfNullable": "Optional.ofNullable",
  "packageFolder": "com/mycompany/myapp/",
  "packageInfoJavadocs": [
    {
      "documentation": "Logging aspect.",
      "packageName": "com.mycompany.myapp.aop.logging",
    },
    {
      "documentation": "Application management.",
      "packageName": "com.mycompany.myapp.management",
    },
    {
      "documentation": "Webflux database column mapper.",
      "packageName": "com.mycompany.myapp.repository.rowmapper",
    },
    {
      "documentation": "Application security utilities.",
      "packageName": "com.mycompany.myapp.security",
    },
    {
      "documentation": "Data transfer objects for rest mapping.",
      "packageName": "com.mycompany.myapp.service.dto",
    },
    {
      "documentation": "Data transfer objects mappers.",
      "packageName": "com.mycompany.myapp.service.mapper",
    },
    {
      "documentation": "Request chain filters.",
      "packageName": "com.mycompany.myapp.web.filter",
    },
    {
      "documentation": "Rest layer error handling.",
      "packageName": "com.mycompany.myapp.web.rest.errors",
    },
    {
      "documentation": "Rest layer visual models.",
      "packageName": "com.mycompany.myapp.web.rest.vm",
    },
  ],
  "packageJsonNodeEngine": undefined,
  "packageJsonScripts": {},
  "packageJsonType": "commonjs",
  "packageJsonTypeAny": true,
  "packageJsonTypeCommonjs": true,
  "packageJsonTypeModule": false,
  "packageName": "com.mycompany.myapp",
  "pages": [],
  "prettierExtensions": "md,json,yml,js,cjs,mjs,ts,cts,mts,java,html,css,scss",
  "prettierFolders": ",**/",
  "prettierJava": undefined,
  "prettierTabWidth": 2,
  "prodDatabaseDriver": {
    "jdbc": {
      "artifactId": "postgresql",
      "groupId": "org.postgresql",
    },
    "r2dbc": {
      "artifactId": "r2dbc-postgresql",
      "groupId": "org.postgresql",
    },
    "testContainer": {
      "artifactId": "postgresql",
      "groupId": "org.testcontainers",
      "scope": "test",
    },
  },
  "prodDatabaseExtraOptions": "",
  "prodDatabaseName": "jhipster",
  "prodDatabasePassword": "",
  "prodDatabaseType": "postgresql",
  "prodDatabaseTypeAny": true,
  "prodDatabaseTypeMariadb": false,
  "prodDatabaseTypeMssql": false,
  "prodDatabaseTypeMysql": false,
  "prodDatabaseTypeOracle": false,
  "prodDatabaseTypePostgresql": true,
  "prodDatabaseUsername": "jhipster",
  "prodHibernateDialect": "org.hibernate.dialect.PostgreSQLDialect",
  "prodJdbcDriver": "org.postgresql.Driver",
  "prodJdbcUrl": "jdbc:postgresql://localhost:5432/jhipster",
  "prodLiquibaseUrl": "jdbc:postgresql://localhost:5432/jhipster",
  "projectDescription": "Description for JHipster",
  "projectVersion": "0.0.1-SNAPSHOT",
  "reactive": false,
  "reactorBlock": "",
  "reactorBlockOptional": "",
  "rememberMeKey": undefined,
  "requiresDeleteAllUsers": false,
  "routes": undefined,
  "searchEngine": "no",
  "searchEngineAny": false,
  "searchEngineCouchbase": false,
  "searchEngineElasticsearch": false,
  "searchEngineNo": true,
  "serverPort": 8080,
  "serviceDiscovery": "no",
  "serviceDiscoveryAny": false,
  "serviceDiscoveryConsul": false,
  "serviceDiscoveryEureka": false,
  "serviceDiscoveryNo": true,
  "serviceDiscoveryType": "no",
  "serviceDiscoveryTypeAny": false,
  "serviceDiscoveryTypeConsul": false,
  "serviceDiscoveryTypeEureka": false,
  "serviceDiscoveryTypeNo": true,
  "skipCheckLengthOfIdentifier": false,
  "skipClient": undefined,
  "skipCommitHook": undefined,
  "skipFakeData": false,
  "skipJhipsterDependencies": undefined,
  "skipServer": undefined,
  "skipUserManagement": false,
  "springBootDependencies": Any<Object>,
  "srcMainDir": "src/main/",
  "srcMainJava": "src/main/java/",
  "srcMainResources": "src/main/resources/",
  "srcMainWebapp": "src/main/webapp/",
  "srcTestDir": "src/test/",
  "srcTestJava": "src/test/java/",
  "srcTestJavascript": "src/test/javascript/",
  "srcTestResources": "src/test/resources/",
  "syncUserWithIdp": undefined,
  "temporaryDir": "target/",
  "testFrameworks": [],
  "testJavaDir": "src/test/java/",
  "testJavaPackageDir": "src/test/java/com/mycompany/myapp/",
  "testResourceDir": "src/test/resources/",
  "typescriptEslint": true,
  "upperFirstCamelCaseBaseName": "Jhipster",
  "useNpmWrapper": true,
  "user": Any<Object>,
  "userManagement": Any<Object>,
  "webappEnumerationsDir": "src/main/webapp/app/entities/enumerations/",
  "webappLoginRegExp": "^[a-zA-Z0-9!$&*+=?^_\`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$",
  "websocket": "no",
  "withAdminUi": true,
  "wrapMono": [Function],
}
`;

exports[`generator - app with gateway should match snapshot 1`] = `
{
  "ANGULAR": "angular",
  "CLIENT_WEBPACK_DIR": "webpack/",
  "DOCUMENTATION_ARCHIVE_PATH": "/documentation-archive/",
  "DOCUMENTATION_URL": "https://www.jhipster.tech",
  "JAVA_COMPATIBLE_VERSIONS": [
    "17",
    "21",
    "23",
  ],
  "JAVA_VERSION": "JAVA_VERSION",
  "LOGIN_REGEX": "^(?>[a-zA-Z0-9!$&*+=?^_\`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
  "MAIN_DIR": "src/main/",
  "REACT": "react",
  "SERVER_MAIN_RES_DIR": "src/main/resources/",
  "SERVER_MAIN_SRC_DIR": "src/main/java/",
  "SERVER_TEST_RES_DIR": "src/test/resources/",
  "SERVER_TEST_SRC_DIR": "src/test/java/",
  "TEST_DIR": "src/test/",
  "VUE": "vue",
  "addOpenapiGeneratorPlugin": undefined,
  "addPrettierExtensions": [Function],
  "addSpringMilestoneRepository": false,
  "angularEntities": [],
  "angularLocaleId": "en",
  "anyEntityHasRelationshipWithUser": false,
  "applicationType": "gateway",
  "applicationTypeAny": true,
  "applicationTypeGateway": true,
  "applicationTypeMicroservice": false,
  "applicationTypeMonolith": false,
  "authenticationType": "jwt",
  "authenticationTypeAny": true,
  "authenticationTypeJwt": true,
  "authenticationTypeOauth2": false,
  "authenticationTypeSession": false,
  "authenticationUsesCsrf": false,
  "authority": Any<Object>,
  "backendType": "Java",
  "backendTypeJavaAny": true,
  "backendTypeSpringBoot": true,
  "baseName": "jhipster",
  "blueprints": [],
  "buildTool": "maven",
  "buildToolAny": true,
  "buildToolExecutable": "mvnw",
  "buildToolGradle": false,
  "buildToolMaven": true,
  "buildToolUnknown": false,
  "cacheProvider": "no",
  "cacheProviderAny": false,
  "cacheProviderCaffeine": false,
  "cacheProviderEhcache": false,
  "cacheProviderHazelcast": false,
  "cacheProviderInfinispan": false,
  "cacheProviderMemcached": false,
  "cacheProviderNo": true,
  "cacheProviderRedis": false,
  "camelizedBaseName": "jhipster",
  "capitalizedBaseName": "Jhipster",
  "caret": undefined,
  "cjsExtension": ".js",
  "cliName": undefined,
  "clientBundler": "webpack",
  "clientBundlerAny": true,
  "clientBundlerExperimentalEsbuild": false,
  "clientBundlerName": "Webpack",
  "clientBundlerVite": false,
  "clientBundlerWebpack": true,
  "clientDistDir": "target/classes/static/",
  "clientFramework": "angular",
  "clientFrameworkAngular": true,
  "clientFrameworkAny": true,
  "clientFrameworkBuiltIn": true,
  "clientFrameworkNo": false,
  "clientFrameworkReact": false,
  "clientFrameworkVue": false,
  "clientPackageJsonScripts": {},
  "clientPackageManager": "npm",
  "clientRootDir": "",
  "clientSrcDir": "src/main/webapp/",
  "clientTestDir": "src/test/javascript/",
  "clientTestFramework": "jest",
  "clientTestFrameworkName": "Jest",
  "clientTestFrameworks": undefined,
  "clientTestFrameworksAny": false,
  "clientTestFrameworksCypress": false,
  "clientTheme": "none",
  "clientThemeDark": false,
  "clientThemeLight": false,
  "clientThemeNone": true,
  "clientThemePrimary": false,
  "clientThemeVariant": "",
  "communicationSpringWebsocket": false,
  "cucumberTests": false,
  "customizeTemplatePaths": [],
  "cypressTests": false,
  "dasherizedBaseName": "jhipster",
  "databaseMigration": "liquibase",
  "databaseMigrationAny": true,
  "databaseMigrationLiquibase": true,
  "databaseMigrationNo": false,
  "databaseType": "sql",
  "databaseTypeAny": true,
  "databaseTypeCassandra": false,
  "databaseTypeCouchbase": false,
  "databaseTypeMongodb": false,
  "databaseTypeNeo4j": false,
  "databaseTypeNo": false,
  "databaseTypeSql": true,
  "defaultEnvironment": "prod",
  "defaultEnvironmentAny": true,
  "defaultEnvironmentDev": false,
  "defaultEnvironmentProd": true,
  "defaultPackaging": "jar",
  "defaultPackagingAny": true,
  "defaultPackagingJar": true,
  "defaultPackagingWar": false,
  "devDatabaseExtraOptions": "",
  "devDatabaseName": "jhipster",
  "devDatabasePassword": "",
  "devDatabaseType": "postgresql",
  "devDatabaseTypeH2Any": false,
  "devDatabaseTypeH2Disk": false,
  "devDatabaseTypeH2Memory": false,
  "devDatabaseTypeMariadb": false,
  "devDatabaseTypeMssql": false,
  "devDatabaseTypeMysql": false,
  "devDatabaseTypeOracle": false,
  "devDatabaseTypePostgres": true,
  "devDatabaseTypePostgresql": true,
  "devDatabaseUsername": "jhipster",
  "devHibernateDialect": "org.hibernate.dialect.PostgreSQLDialect",
  "devJdbcDriver": "org.postgresql.Driver",
  "devJdbcUrl": "jdbc:postgresql://localhost:5432/jhipster",
  "devLiquibaseUrl": "jdbc:postgresql://localhost:5432/jhipster",
  "devR2dbcUrl": "r2dbc:postgresql://localhost:5432/jhipster",
  "devServerPort": 4200,
  "devServerPortProxy": 9000,
  "dockerContainers": {
    "apache/kafka-native": "apache-kafka-native-placeholder",
    "apachepulsar/pulsar": "apachepulsar-pulsar-placeholder",
    "cassandra": "cassandra-placeholder",
    "cassandraImage": "cassandra-image-placeholder",
    "cassandraTag": "cassandra-tag-placeholder",
    "consul": "consul-placeholder",
    "consulConfigLoader": "consul-config-loader-placeholder",
    "consulConfigLoaderImage": "consul-config-loader-image-placeholder",
    "consulConfigLoaderTag": "consul-config-loader-tag-placeholder",
    "consulImage": "consul-image-placeholder",
    "consulTag": "consul-tag-placeholder",
    "couchbase": "couchbase-placeholder",
    "couchbase/server": "couchbase-server-placeholder",
    "couchbaseImage": "couchbase-image-placeholder",
    "couchbaseTag": "couchbase-tag-placeholder",
    "docker.io/bitnami/consul": "docker-io-bitnami-consul-placeholder",
    "eclipse-temurin": "eclipse-temurin-placeholder",
    "eclipseTemurin": "eclipse-temurin-placeholder",
    "eclipseTemurinImage": "eclipse-temurin-image-placeholder",
    "eclipseTemurinTag": "eclipse-temurin-tag-placeholder",
    "elasticsearch": "elasticsearch-placeholder",
    "elasticsearchImage": "elasticsearch-image-placeholder",
    "elasticsearchTag": "elasticsearch-tag-placeholder",
    "grafana": "grafana-placeholder",
    "grafana/grafana": "grafana-grafana-placeholder",
    "grafanaImage": "grafana-image-placeholder",
    "grafanaTag": "grafana-tag-placeholder",
    "grafanaWatcher": "grafana-watcher-placeholder",
    "grafanaWatcherImage": "grafana-watcher-image-placeholder",
    "grafanaWatcherTag": "grafana-watcher-tag-placeholder",
    "hazelcast": "hazelcast-placeholder",
    "hazelcast/management-center": "hazelcast-management-center-placeholder",
    "hazelcastImage": "hazelcast-image-placeholder",
    "hazelcastTag": "hazelcast-tag-placeholder",
    "javaJre": "java-jre-placeholder",
    "javaJreImage": "java-jre-image-placeholder",
    "javaJreTag": "java-jre-tag-placeholder",
    "jenkins": "jenkins-placeholder",
    "jenkins/jenkins": "jenkins-jenkins-placeholder",
    "jenkinsImage": "jenkins-image-placeholder",
    "jenkinsTag": "jenkins-tag-placeholder",
    "jhipster/consul-config-loader": "jhipster-consul-config-loader-placeholder",
    "jhipster/jhipster-control-center": "jhipster-jhipster-control-center-placeholder",
    "jhipster/jhipster-registry": "jhipster-jhipster-registry-placeholder",
    "jhipsterControlCenter": "jhipster-control-center-placeholder",
    "jhipsterControlCenterImage": "jhipster-control-center-image-placeholder",
    "jhipsterControlCenterTag": "jhipster-control-center-tag-placeholder",
    "jhipsterRegistry": "jhipster-registry-placeholder",
    "jhipsterRegistryImage": "jhipster-registry-image-placeholder",
    "jhipsterRegistryTag": "jhipster-registry-tag-placeholder",
    "kafka": "kafka-placeholder",
    "kafkaImage": "kafka-image-placeholder",
    "kafkaTag": "kafka-tag-placeholder",
    "keycloak": "keycloak-placeholder",
    "keycloakImage": "keycloak-image-placeholder",
    "keycloakTag": "keycloak-tag-placeholder",
    "mariadb": "mariadb-placeholder",
    "mariadbImage": "mariadb-image-placeholder",
    "mariadbTag": "mariadb-tag-placeholder",
    "mcr.microsoft.com/mssql/server": "mcr-microsoft-com-mssql-server-placeholder",
    "memcached": "memcached-placeholder",
    "memcachedImage": "memcached-image-placeholder",
    "memcachedTag": "memcached-tag-placeholder",
    "mongo": "mongo-placeholder",
    "mongoImage": "mongo-image-placeholder",
    "mongoTag": "mongo-tag-placeholder",
    "mongodb": "mongodb-placeholder",
    "mongodbImage": "mongodb-image-placeholder",
    "mongodbTag": "mongodb-tag-placeholder",
    "mssql": "mssql-placeholder",
    "mssqlImage": "mssql-image-placeholder",
    "mssqlTag": "mssql-tag-placeholder",
    "mysql": "mysql-placeholder",
    "mysqlImage": "mysql-image-placeholder",
    "mysqlTag": "mysql-tag-placeholder",
    "neo4J": "neo-4-j-placeholder",
    "neo4JImage": "neo-4-j-image-placeholder",
    "neo4JTag": "neo-4-j-tag-placeholder",
    "neo4j": "neo-4-j-placeholder",
    "openzipkin/zipkin": "openzipkin-zipkin-placeholder",
    "postgres": "postgres-placeholder",
    "postgresImage": "postgres-image-placeholder",
    "postgresTag": "postgres-tag-placeholder",
    "postgresql": "postgresql-placeholder",
    "postgresqlImage": "postgresql-image-placeholder",
    "postgresqlTag": "postgresql-tag-placeholder",
    "prom/alertmanager": "prom-alertmanager-placeholder",
    "prom/prometheus": "prom-prometheus-placeholder",
    "prometheus": "prometheus-placeholder",
    "prometheusAlertmanager": "prometheus-alertmanager-placeholder",
    "prometheusAlertmanagerImage": "prometheus-alertmanager-image-placeholder",
    "prometheusAlertmanagerTag": "prometheus-alertmanager-tag-placeholder",
    "prometheusImage": "prometheus-image-placeholder",
    "prometheusOperator": "prometheus-operator-placeholder",
    "prometheusOperatorImage": "prometheus-operator-image-placeholder",
    "prometheusOperatorTag": "prometheus-operator-tag-placeholder",
    "prometheusTag": "prometheus-tag-placeholder",
    "pulsar": "pulsar-placeholder",
    "pulsarImage": "pulsar-image-placeholder",
    "pulsarTag": "pulsar-tag-placeholder",
    "quay.io/coreos/grafana-watcher": "quay-io-coreos-grafana-watcher-placeholder",
    "quay.io/coreos/prometheus-operator": "quay-io-coreos-prometheus-operator-placeholder",
    "quay.io/keycloak/keycloak": "quay-io-keycloak-keycloak-placeholder",
    "redis": "redis-placeholder",
    "redisImage": "redis-image-placeholder",
    "redisTag": "redis-tag-placeholder",
    "sonar": "sonar-placeholder",
    "sonarImage": "sonar-image-placeholder",
    "sonarTag": "sonar-tag-placeholder",
    "sonarqube": "sonarqube-placeholder",
    "sonarqubeImage": "sonarqube-image-placeholder",
    "sonarqubeTag": "sonarqube-tag-placeholder",
    "swaggerEditor": "swagger-editor-placeholder",
    "swaggerEditorImage": "swagger-editor-image-placeholder",
    "swaggerEditorTag": "swagger-editor-tag-placeholder",
    "swaggerapi/swagger-editor": "swaggerapi-swagger-editor-placeholder",
    "zipkin": "zipkin-placeholder",
    "zipkinImage": "zipkin-image-placeholder",
    "zipkinTag": "zipkin-tag-placeholder",
  },
  "dockerServices": [
    "consul",
    "zipkin",
    "postgresql",
  ],
  "dockerServicesDir": "src/main/docker/",
  "documentationArchiveUrl": "https://www.jhipster.tech/documentation-archive/vJHIPSTER_VERSION",
  "domains": [
    "com.mycompany.myapp",
  ],
  "dtoSuffix": "DTO",
  "embeddableLaunchScript": undefined,
  "enableGradleEnterprise": false,
  "enableHibernateCache": false,
  "enableI18nRTL": false,
  "enableSwaggerCodegen": false,
  "enableTranslation": true,
  "endpointPrefix": "",
  "entityPackages": [
    "com.mycompany.myapp",
  ],
  "entitySuffix": "",
  "eslintConfigFile": "eslint.config.mjs",
  "fakerSeed": undefined,
  "feignClient": false,
  "frontendAppName": "jhipsterApp",
  "gatewayRoutes": [],
  "gatewayServerPort": undefined,
  "gatewayServicesApiAvailable": true,
  "gatlingTests": false,
  "generateAuthenticationApi": true,
  "generateBuiltInAuthorityEntity": true,
  "generateBuiltInUserEntity": true,
  "generateInMemoryUserCredentials": false,
  "generateSpringAuditor": true,
  "generateUserManagement": true,
  "githubRepository": undefined,
  "githubWorkflows": undefined,
  "graalvmSupport": undefined,
  "gradleEnterpriseHost": undefined,
  "hipster": "jhipster_family_member_3",
  "hipsterBugTrackerLink": "https://github.com/jhipster/generator-jhipster/issues?state=open",
  "hipsterBugTrackerProductName": "JHipster",
  "hipsterChatLink": "https://gitter.im/jhipster/generator-jhipster",
  "hipsterChatProductName": "JHipster",
  "hipsterDocumentationLink": "https://www.jhipster.tech/",
  "hipsterHomePageProductName": "JHipster",
  "hipsterName": "Java Hipster",
  "hipsterProductName": "JHipster",
  "hipsterProjectLink": "https://github.com/jhipster/generator-jhipster",
  "hipsterStackOverflowProductName": "JHipster",
  "hipsterStackoverflowLink": "https://stackoverflow.com/tags/jhipster/info",
  "hipsterTwitterLink": "https://twitter.com/jhipster",
  "hipsterTwitterUsername": "@jhipster",
  "humanizedBaseName": "JHipster",
  "imperativeOrReactive": "reactive",
  "incrementalChangelog": undefined,
  "javaCompatibleVersions": [
    "17",
    "21",
    "23",
  ],
  "javaDependencies": {
    "archunit-junit5": "'ARCHUNIT-JUNIT-5-VERSION'",
    "blockhound-junit-platform": "'BLOCKHOUND-JUNIT-PLATFORM-VERSION'",
    "checkstyle": "'CHECKSTYLE-VERSION'",
    "checksum-maven-plugin": "'CHECKSUM-MAVEN-PLUGIN-VERSION'",
    "common-custom-user-data-gradle-plugin": "'COMMON-CUSTOM-USER-DATA-GRADLE-PLUGIN-VERSION'",
    "commons-beanutils": "'COMMONS-BEANUTILS-VERSION'",
    "couchmove": "'COUCHMOVE-VERSION'",
    "cucumber-bom": "'CUCUMBER-BOM-VERSION'",
    "feign-reactor-bom": "'FEIGN-REACTOR-BOM-VERSION'",
    "frontend-maven-plugin": "'FRONTEND-MAVEN-PLUGIN-VERSION'",
    "gatling": "'GATLING-VERSION'",
    "gatling-gradle": "'GATLING-GRADLE-VERSION'",
    "gatling-maven-plugin": "'GATLING-MAVEN-PLUGIN-VERSION'",
    "git-commit-id-maven-plugin": "'GIT-COMMIT-ID-MAVEN-PLUGIN-VERSION'",
    "gradle-enterprise": "'GRADLE-ENTERPRISE-VERSION'",
    "gradle-git-properties": "'GRADLE-GIT-PROPERTIES-VERSION'",
    "gradle-liquibase": "'GRADLE-LIQUIBASE-VERSION'",
    "gradle-modernizer-plugin": "'GRADLE-MODERNIZER-PLUGIN-VERSION'",
    "gradle-openapi-generator": "'GRADLE-OPENAPI-GENERATOR-VERSION'",
    "gradle-sonarqube": "'GRADLE-SONARQUBE-VERSION'",
    "jackson-databind-nullable": "'JACKSON-DATABIND-NULLABLE-VERSION'",
    "jacoco-maven-plugin": "'JACOCO-MAVEN-PLUGIN-VERSION'",
    "jhipster-dependabot": "'JHIPSTER-DEPENDABOT-VERSION'",
    "jib-maven-plugin": "'JIB-MAVEN-PLUGIN-VERSION'",
    "jib-spring-boot-extension-maven": "'JIB-SPRING-BOOT-EXTENSION-MAVEN-VERSION'",
    "lifecycle-mapping": "'LIFECYCLE-MAPPING-VERSION'",
    "lz4-java": "'LZ-4-JAVA-VERSION'",
    "mapstruct": "'MAPSTRUCT-VERSION'",
    "maven-antrun-plugin": "'MAVEN-ANTRUN-PLUGIN-VERSION'",
    "maven-checkstyle-plugin": "'MAVEN-CHECKSTYLE-PLUGIN-VERSION'",
    "maven-clean-plugin": "'MAVEN-CLEAN-PLUGIN-VERSION'",
    "maven-compiler-plugin": "'MAVEN-COMPILER-PLUGIN-VERSION'",
    "maven-enforcer-plugin": "'MAVEN-ENFORCER-PLUGIN-VERSION'",
    "maven-failsafe-plugin": "'MAVEN-FAILSAFE-PLUGIN-VERSION'",
    "maven-jar-plugin": "'MAVEN-JAR-PLUGIN-VERSION'",
    "maven-javadoc-plugin": "'MAVEN-JAVADOC-PLUGIN-VERSION'",
    "maven-resources-plugin": "'MAVEN-RESOURCES-PLUGIN-VERSION'",
    "maven-site-plugin": "'MAVEN-SITE-PLUGIN-VERSION'",
    "maven-surefire-plugin": "'MAVEN-SUREFIRE-PLUGIN-VERSION'",
    "maven-war-plugin": "'MAVEN-WAR-PLUGIN-VERSION'",
    "micrometer-context-propagation": "'MICROMETER-CONTEXT-PROPAGATION-VERSION'",
    "modernizer-maven-plugin": "'MODERNIZER-MAVEN-PLUGIN-VERSION'",
    "mongock-bom": "'MONGOCK-BOM-VERSION'",
    "neo4j-migrations-spring-boot-starter": "'NEO-4-J-MIGRATIONS-SPRING-BOOT-STARTER-VERSION'",
    "node-gradle": "'NODE-GRADLE-VERSION'",
    "nohttp-checkstyle": "'NOHTTP-CHECKSTYLE-VERSION'",
    "openapi-generator-maven-plugin": "'OPENAPI-GENERATOR-MAVEN-PLUGIN-VERSION'",
    "picocli": "'PICOCLI-VERSION'",
    "properties-maven-plugin": "'PROPERTIES-MAVEN-PLUGIN-VERSION'",
    "sonar-maven-plugin": "'SONAR-MAVEN-PLUGIN-VERSION'",
    "spotless-gradle-plugin": "'SPOTLESS-GRADLE-PLUGIN-VERSION'",
    "spotless-maven-plugin": "'SPOTLESS-MAVEN-PLUGIN-VERSION'",
    "spring-cloud-dependencies": "'SPRING-CLOUD-DEPENDENCIES-VERSION'",
    "springdoc": "'SPRINGDOC-VERSION'",
    "testng": "'TESTNG-VERSION'",
  },
  "javaManagedProperties": {},
  "javaNodeBuildPaths": [
    "angular.json",
    "package-lock.json",
    "package.json",
    "src/main/webapp/",
    "target/classes/static/",
    "tsconfig.app.json",
    "tsconfig.json",
    "webpack/",
  ],
  "javaPackageSrcDir": "src/main/java/com/mycompany/myapp/",
  "javaPackageTestDir": "src/test/java/com/mycompany/myapp/",
  "javaProperties": {},
  "javaVersion": "JAVA_VERSION",
  "jdlStore": undefined,
  "jhiPrefix": "jhi",
  "jhiPrefixCapitalized": "Jhi",
  "jhiPrefixDashed": "jhi",
  "jhiTablePrefix": "jhi",
  "jhipsterDependenciesVersion": "JHIPSTER_DEPENDENCIES_VERSION",
  "jhipsterPackageJson": Any<Object>,
  "jhipsterVersion": "JHIPSTER_VERSION",
  "jwtSecretKey": Any<String>,
  "languages": [
    "en",
  ],
  "languagesDefinition": [
    {
      "angularLocale": "en",
      "dayjsLocale": "en",
      "displayName": "English",
      "fakerjsLocale": "en",
      "javaLocaleMessageSourceSuffix": "en",
      "languageTag": "en",
      "name": "English",
      "rtl": false,
    },
  ],
  "liquibaseAddH2Properties": false,
  "liquibaseDefaultSchemaName": "",
  "listOrFlux": "Flux",
  "listOrFluxClassPath": "reactor.core.publisher.Flux",
  "lowercaseBaseName": "jhipster",
  "mainClass": "JhipsterApp",
  "mainJavaDir": "src/main/java/",
  "mainJavaPackageDir": "src/main/java/com/mycompany/myapp/",
  "mainJavaResourceDir": "src/main/resources/",
  "messageBroker": "no",
  "messageBrokerAny": false,
  "messageBrokerKafka": false,
  "messageBrokerNo": true,
  "messageBrokerPulsar": false,
  "microfrontend": undefined,
  "microfrontends": undefined,
  "mjsExtension": ".mjs",
  "monorepository": undefined,
  "nativeLanguage": "en",
  "nativeLanguageDefinition": {
    "angularLocale": "en",
    "dayjsLocale": "en",
    "displayName": "English",
    "fakerjsLocale": "en",
    "javaLocaleMessageSourceSuffix": "en",
    "languageTag": "en",
    "name": "English",
    "rtl": false,
  },
  "nodeDependencies": {
    "@angular-architects/module-federation": "ANGULAR_ARCHITECTS_MODULE_FEDERATION_VERSION",
    "@angular-architects/module-federation-runtime": "ANGULAR_ARCHITECTS_MODULE_FEDERATION_RUNTIME_VERSION",
    "@angular-builders/custom-esbuild": "ANGULAR_BUILDERS_CUSTOM_ESBUILD_VERSION",
    "@angular-builders/custom-webpack": "ANGULAR_BUILDERS_CUSTOM_WEBPACK_VERSION",
    "@angular-builders/jest": "ANGULAR_BUILDERS_JEST_VERSION",
    "@angular/cli": "ANGULAR_CLI_VERSION",
    "@angular/common": "ANGULAR_COMMON_VERSION",
    "@cypress/code-coverage": "CYPRESS_CODE_COVERAGE_VERSION",
    "@eslint/js": "ESLINT_JS_VERSION",
    "@fortawesome/angular-fontawesome": "FORTAWESOME_ANGULAR_FONTAWESOME_VERSION",
    "@fortawesome/fontawesome-svg-core": "FORTAWESOME_FONTAWESOME_SVG_CORE_VERSION",
    "@fortawesome/free-solid-svg-icons": "FORTAWESOME_FREE_SOLID_SVG_ICONS_VERSION",
    "@ng-bootstrap/ng-bootstrap": "NG_BOOTSTRAP_NG_BOOTSTRAP_VERSION",
    "@ngx-translate/core": "NGX_TRANSLATE_CORE_VERSION",
    "@ngx-translate/http-loader": "NGX_TRANSLATE_HTTP_LOADER_VERSION",
    "@popperjs/core": "POPPERJS_CORE_VERSION",
    "@stomp/rx-stomp": "STOMP_RX_STOMP_VERSION",
    "@types/jest": "TYPES_JEST_VERSION",
    "@types/node": "TYPES_NODE_VERSION",
    "@types/sockjs-client": "TYPES_SOCKJS_CLIENT_VERSION",
    "angular-eslint": "ANGULAR_ESLINT_VERSION",
    "babel-loader": "BABEL_LOADER_VERSION",
    "babel-plugin-istanbul": "BABEL_PLUGIN_ISTANBUL_VERSION",
    "bootstrap": "BOOTSTRAP_VERSION",
    "bootswatch": "BOOTSWATCH_VERSION",
    "browser-sync": "BROWSER_SYNC_VERSION",
    "browser-sync-webpack-plugin": "BROWSER_SYNC_WEBPACK_PLUGIN_VERSION",
    "buffer": "BUFFER_VERSION",
    "concurrently": "CONCURRENTLY_VERSION",
    "copy-webpack-plugin": "COPY_WEBPACK_PLUGIN_VERSION",
    "cypress": "CYPRESS_VERSION",
    "cypress-audit": "CYPRESS_AUDIT_VERSION",
    "dayjs": "DAYJS_VERSION",
    "deepmerge": "DEEPMERGE_VERSION",
    "eslint": "ESLINT_VERSION",
    "eslint-config-prettier": "ESLINT_CONFIG_PRETTIER_VERSION",
    "eslint-plugin-cypress": "ESLINT_PLUGIN_CYPRESS_VERSION",
    "eslint-plugin-prettier": "ESLINT_PLUGIN_PRETTIER_VERSION",
    "folder-hash": "FOLDER_HASH_VERSION",
    "globals": "GLOBALS_VERSION",
    "globby": "GLOBBY_VERSION",
    "husky": "HUSKY_VERSION",
    "jest": "JEST_VERSION",
    "jest-date-mock": "JEST_DATE_MOCK_VERSION",
    "jest-junit": "JEST_JUNIT_VERSION",
    "jest-preset-angular": "JEST_PRESET_ANGULAR_VERSION",
    "jest-sonar": "JEST_SONAR_VERSION",
    "lighthouse": "LIGHTHOUSE_VERSION",
    "lint-staged": "LINT_STAGED_VERSION",
    "merge-jsons-webpack-plugin": "MERGE_JSONS_WEBPACK_PLUGIN_VERSION",
    "ngx-cookie-service": "NGX_COOKIE_SERVICE_VERSION",
    "ngx-infinite-scroll": "NGX_INFINITE_SCROLL_VERSION",
    "npm": "NPM_VERSION",
    "nyc": "NYC_VERSION",
    "postcss-rtlcss": "POSTCSS_RTLCSS_VERSION",
    "prettier": "PRETTIER_VERSION",
    "prettier-plugin-java": "PRETTIER_PLUGIN_JAVA_VERSION",
    "prettier-plugin-packagejson": "PRETTIER_PLUGIN_PACKAGEJSON_VERSION",
    "rimraf": "RIMRAF_VERSION",
    "rxjs": "RXJS_VERSION",
    "sockjs-client": "SOCKJS_CLIENT_VERSION",
    "swagger-ui-dist": "SWAGGER_UI_DIST_VERSION",
    "ts-jest": "TS_JEST_VERSION",
    "tslib": "TSLIB_VERSION",
    "typescript": "TYPESCRIPT_VERSION",
    "typescript-eslint": "TYPESCRIPT_ESLINT_VERSION",
    "wait-on": "WAIT_ON_VERSION",
    "webpack": "WEBPACK_VERSION",
    "webpack-bundle-analyzer": "WEBPACK_BUNDLE_ANALYZER_VERSION",
    "webpack-merge": "WEBPACK_MERGE_VERSION",
    "webpack-notifier": "WEBPACK_NOTIFIER_VERSION",
    "zone.js": "ZONE_JS_VERSION",
  },
  "nodePackageManager": "npm",
  "nodeVersion": "NODE_VERSION",
  "optionalOrMono": "Mono",
  "optionalOrMonoClassPath": "reactor.core.publisher.Mono",
  "optionalOrMonoOfNullable": "Mono.justOrEmpty",
  "packageFolder": "com/mycompany/myapp/",
  "packageInfoJavadocs": [
    {
      "documentation": "Logging aspect.",
      "packageName": "com.mycompany.myapp.aop.logging",
    },
    {
      "documentation": "Application management.",
      "packageName": "com.mycompany.myapp.management",
    },
    {
      "documentation": "Webflux database column mapper.",
      "packageName": "com.mycompany.myapp.repository.rowmapper",
    },
    {
      "documentation": "Application security utilities.",
      "packageName": "com.mycompany.myapp.security",
    },
    {
      "documentation": "Data transfer objects for rest mapping.",
      "packageName": "com.mycompany.myapp.service.dto",
    },
    {
      "documentation": "Data transfer objects mappers.",
      "packageName": "com.mycompany.myapp.service.mapper",
    },
    {
      "documentation": "Request chain filters.",
      "packageName": "com.mycompany.myapp.web.filter",
    },
    {
      "documentation": "Rest layer error handling.",
      "packageName": "com.mycompany.myapp.web.rest.errors",
    },
    {
      "documentation": "Rest layer visual models.",
      "packageName": "com.mycompany.myapp.web.rest.vm",
    },
  ],
  "packageJsonNodeEngine": undefined,
  "packageJsonScripts": {},
  "packageJsonType": "commonjs",
  "packageJsonTypeAny": true,
  "packageJsonTypeCommonjs": true,
  "packageJsonTypeModule": false,
  "packageName": "com.mycompany.myapp",
  "pages": [],
  "prettierExtensions": "md,json,yml,js,cjs,mjs,ts,cts,mts,java,html,css,scss",
  "prettierFolders": ",**/",
  "prettierJava": undefined,
  "prettierTabWidth": 2,
  "prodDatabaseDriver": {
    "jdbc": {
      "artifactId": "postgresql",
      "groupId": "org.postgresql",
    },
    "r2dbc": {
      "artifactId": "r2dbc-postgresql",
      "groupId": "org.postgresql",
    },
    "testContainer": {
      "artifactId": "postgresql",
      "groupId": "org.testcontainers",
      "scope": "test",
    },
  },
  "prodDatabaseExtraOptions": "",
  "prodDatabaseName": "jhipster",
  "prodDatabasePassword": "",
  "prodDatabaseType": "postgresql",
  "prodDatabaseTypeAny": true,
  "prodDatabaseTypeMariadb": false,
  "prodDatabaseTypeMssql": false,
  "prodDatabaseTypeMysql": false,
  "prodDatabaseTypeOracle": false,
  "prodDatabaseTypePostgresql": true,
  "prodDatabaseUsername": "jhipster",
  "prodHibernateDialect": "org.hibernate.dialect.PostgreSQLDialect",
  "prodJdbcDriver": "org.postgresql.Driver",
  "prodJdbcUrl": "jdbc:postgresql://localhost:5432/jhipster",
  "prodLiquibaseUrl": "jdbc:postgresql://localhost:5432/jhipster",
  "prodR2dbcUrl": "r2dbc:postgresql://localhost:5432/jhipster",
  "projectDescription": "Description for JHipster",
  "projectVersion": "0.0.1-SNAPSHOT",
  "reactive": true,
  "reactorBlock": ".block()",
  "reactorBlockOptional": ".blockOptional()",
  "rememberMeKey": undefined,
  "requiresDeleteAllUsers": true,
  "routes": undefined,
  "searchEngine": "no",
  "searchEngineAny": false,
  "searchEngineCouchbase": false,
  "searchEngineElasticsearch": false,
  "searchEngineNo": true,
  "serverPort": 8080,
  "serviceDiscovery": "consul",
  "serviceDiscoveryAny": true,
  "serviceDiscoveryConsul": true,
  "serviceDiscoveryEureka": false,
  "serviceDiscoveryNo": false,
  "serviceDiscoveryType": "consul",
  "serviceDiscoveryTypeAny": true,
  "serviceDiscoveryTypeConsul": true,
  "serviceDiscoveryTypeEureka": false,
  "serviceDiscoveryTypeNo": false,
  "skipCheckLengthOfIdentifier": false,
  "skipClient": undefined,
  "skipCommitHook": undefined,
  "skipFakeData": false,
  "skipJhipsterDependencies": undefined,
  "skipServer": undefined,
  "skipUserManagement": false,
  "springBootDependencies": Any<Object>,
  "srcMainDir": "src/main/",
  "srcMainJava": "src/main/java/",
  "srcMainResources": "src/main/resources/",
  "srcMainWebapp": "src/main/webapp/",
  "srcTestDir": "src/test/",
  "srcTestJava": "src/test/java/",
  "srcTestJavascript": "src/test/javascript/",
  "srcTestResources": "src/test/resources/",
  "syncUserWithIdp": undefined,
  "temporaryDir": "target/",
  "testFrameworks": [],
  "testJavaDir": "src/test/java/",
  "testJavaPackageDir": "src/test/java/com/mycompany/myapp/",
  "testResourceDir": "src/test/resources/",
  "typescriptEslint": true,
  "upperFirstCamelCaseBaseName": "Jhipster",
  "useNpmWrapper": true,
  "user": Any<Object>,
  "userManagement": Any<Object>,
  "webappEnumerationsDir": "src/main/webapp/app/entities/enumerations/",
  "webappLoginRegExp": "^[a-zA-Z0-9!$&*+=?^_\`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$",
  "websocket": "no",
  "withAdminUi": true,
  "wrapMono": [Function],
}
`;

exports[`generator - app with microservice should match snapshot 1`] = `
{
  "ANGULAR": "angular",
  "CLIENT_WEBPACK_DIR": "webpack/",
  "DOCUMENTATION_ARCHIVE_PATH": "/documentation-archive/",
  "DOCUMENTATION_URL": "https://www.jhipster.tech",
  "JAVA_COMPATIBLE_VERSIONS": [
    "17",
    "21",
    "23",
  ],
  "JAVA_VERSION": "JAVA_VERSION",
  "LOGIN_REGEX": "^(?>[a-zA-Z0-9!$&*+=?^_\`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*)|(?>[_.@A-Za-z0-9-]+)$",
  "MAIN_DIR": "src/main/",
  "REACT": "react",
  "SERVER_MAIN_RES_DIR": "src/main/resources/",
  "SERVER_MAIN_SRC_DIR": "src/main/java/",
  "SERVER_TEST_RES_DIR": "src/test/resources/",
  "SERVER_TEST_SRC_DIR": "src/test/java/",
  "TEST_DIR": "src/test/",
  "VUE": "vue",
  "addOpenapiGeneratorPlugin": undefined,
  "addPrettierExtensions": [Function],
  "addSpringMilestoneRepository": false,
  "anyEntityHasRelationshipWithUser": false,
  "applicationType": "microservice",
  "applicationTypeAny": true,
  "applicationTypeGateway": false,
  "applicationTypeMicroservice": true,
  "applicationTypeMonolith": false,
  "authenticationType": "jwt",
  "authenticationTypeAny": true,
  "authenticationTypeJwt": true,
  "authenticationTypeOauth2": false,
  "authenticationTypeSession": false,
  "authenticationUsesCsrf": false,
  "backendType": "Java",
  "backendTypeJavaAny": true,
  "backendTypeSpringBoot": true,
  "baseName": "jhipster",
  "blueprints": [],
  "buildTool": "maven",
  "buildToolAny": true,
  "buildToolExecutable": "mvnw",
  "buildToolGradle": false,
  "buildToolMaven": true,
  "buildToolUnknown": false,
  "cacheProvider": "hazelcast",
  "cacheProviderAny": true,
  "cacheProviderCaffeine": false,
  "cacheProviderEhcache": false,
  "cacheProviderHazelcast": true,
  "cacheProviderInfinispan": false,
  "cacheProviderMemcached": false,
  "cacheProviderNo": false,
  "cacheProviderRedis": false,
  "camelizedBaseName": "jhipster",
  "capitalizedBaseName": "Jhipster",
  "caret": undefined,
  "cjsExtension": ".js",
  "cliName": undefined,
  "clientBundler": undefined,
  "clientBundlerAny": false,
  "clientBundlerExperimentalEsbuild": false,
  "clientBundlerName": undefined,
  "clientBundlerVite": false,
  "clientBundlerWebpack": false,
  "clientDistDir": "target/classes/static/",
  "clientFramework": "no",
  "clientFrameworkAngular": false,
  "clientFrameworkAny": false,
  "clientFrameworkBuiltIn": false,
  "clientFrameworkNo": true,
  "clientFrameworkReact": false,
  "clientFrameworkVue": false,
  "clientPackageJsonScripts": {},
  "clientPackageManager": "npm",
  "clientRootDir": "",
  "clientSrcDir": "src/main/webapp/",
  "clientTestDir": "src/test/javascript/",
  "clientTestFramework": undefined,
  "clientTestFrameworkName": undefined,
  "clientTestFrameworks": undefined,
  "clientTestFrameworksAny": false,
  "clientTestFrameworksCypress": false,
  "clientTheme": undefined,
  "clientThemeDark": false,
  "clientThemeLight": false,
  "clientThemeNone": false,
  "clientThemePrimary": false,
  "clientThemeVariant": undefined,
  "communicationSpringWebsocket": false,
  "cucumberTests": false,
  "customizeTemplatePaths": [],
  "cypressTests": false,
  "dasherizedBaseName": "jhipster",
  "databaseMigration": "liquibase",
  "databaseMigrationAny": true,
  "databaseMigrationLiquibase": true,
  "databaseMigrationNo": false,
  "databaseType": "sql",
  "databaseTypeAny": true,
  "databaseTypeCassandra": false,
  "databaseTypeCouchbase": false,
  "databaseTypeMongodb": false,
  "databaseTypeNeo4j": false,
  "databaseTypeNo": false,
  "databaseTypeSql": true,
  "defaultEnvironment": "prod",
  "defaultEnvironmentAny": true,
  "defaultEnvironmentDev": false,
  "defaultEnvironmentProd": true,
  "defaultPackaging": "jar",
  "defaultPackagingAny": true,
  "defaultPackagingJar": true,
  "defaultPackagingWar": false,
  "devDatabaseExtraOptions": "",
  "devDatabaseName": "jhipster",
  "devDatabasePassword": "",
  "devDatabaseType": "postgresql",
  "devDatabaseTypeH2Any": false,
  "devDatabaseTypeH2Disk": false,
  "devDatabaseTypeH2Memory": false,
  "devDatabaseTypeMariadb": false,
  "devDatabaseTypeMssql": false,
  "devDatabaseTypeMysql": false,
  "devDatabaseTypeOracle": false,
  "devDatabaseTypePostgres": true,
  "devDatabaseTypePostgresql": true,
  "devDatabaseUsername": "jhipster",
  "devHibernateDialect": "org.hibernate.dialect.PostgreSQLDialect",
  "devJdbcDriver": "org.postgresql.Driver",
  "devJdbcUrl": "jdbc:postgresql://localhost:5432/jhipster",
  "devLiquibaseUrl": "jdbc:postgresql://localhost:5432/jhipster",
  "devR2dbcUrl": undefined,
  "devServerPort": undefined,
  "devServerPortProxy": undefined,
  "dockerContainers": {
    "apache/kafka-native": "apache-kafka-native-placeholder",
    "apachepulsar/pulsar": "apachepulsar-pulsar-placeholder",
    "cassandra": "cassandra-placeholder",
    "cassandraImage": "cassandra-image-placeholder",
    "cassandraTag": "cassandra-tag-placeholder",
    "consul": "consul-placeholder",
    "consulConfigLoader": "consul-config-loader-placeholder",
    "consulConfigLoaderImage": "consul-config-loader-image-placeholder",
    "consulConfigLoaderTag": "consul-config-loader-tag-placeholder",
    "consulImage": "consul-image-placeholder",
    "consulTag": "consul-tag-placeholder",
    "couchbase": "couchbase-placeholder",
    "couchbase/server": "couchbase-server-placeholder",
    "couchbaseImage": "couchbase-image-placeholder",
    "couchbaseTag": "couchbase-tag-placeholder",
    "docker.io/bitnami/consul": "docker-io-bitnami-consul-placeholder",
    "eclipse-temurin": "eclipse-temurin-placeholder",
    "eclipseTemurin": "eclipse-temurin-placeholder",
    "eclipseTemurinImage": "eclipse-temurin-image-placeholder",
    "eclipseTemurinTag": "eclipse-temurin-tag-placeholder",
    "elasticsearch": "elasticsearch-placeholder",
    "elasticsearchImage": "elasticsearch-image-placeholder",
    "elasticsearchTag": "elasticsearch-tag-placeholder",
    "grafana": "grafana-placeholder",
    "grafana/grafana": "grafana-grafana-placeholder",
    "grafanaImage": "grafana-image-placeholder",
    "grafanaTag": "grafana-tag-placeholder",
    "grafanaWatcher": "grafana-watcher-placeholder",
    "grafanaWatcherImage": "grafana-watcher-image-placeholder",
    "grafanaWatcherTag": "grafana-watcher-tag-placeholder",
    "hazelcast": "hazelcast-placeholder",
    "hazelcast/management-center": "hazelcast-management-center-placeholder",
    "hazelcastImage": "hazelcast-image-placeholder",
    "hazelcastTag": "hazelcast-tag-placeholder",
    "javaJre": "java-jre-placeholder",
    "javaJreImage": "java-jre-image-placeholder",
    "javaJreTag": "java-jre-tag-placeholder",
    "jenkins": "jenkins-placeholder",
    "jenkins/jenkins": "jenkins-jenkins-placeholder",
    "jenkinsImage": "jenkins-image-placeholder",
    "jenkinsTag": "jenkins-tag-placeholder",
    "jhipster/consul-config-loader": "jhipster-consul-config-loader-placeholder",
    "jhipster/jhipster-control-center": "jhipster-jhipster-control-center-placeholder",
    "jhipster/jhipster-registry": "jhipster-jhipster-registry-placeholder",
    "jhipsterControlCenter": "jhipster-control-center-placeholder",
    "jhipsterControlCenterImage": "jhipster-control-center-image-placeholder",
    "jhipsterControlCenterTag": "jhipster-control-center-tag-placeholder",
    "jhipsterRegistry": "jhipster-registry-placeholder",
    "jhipsterRegistryImage": "jhipster-registry-image-placeholder",
    "jhipsterRegistryTag": "jhipster-registry-tag-placeholder",
    "kafka": "kafka-placeholder",
    "kafkaImage": "kafka-image-placeholder",
    "kafkaTag": "kafka-tag-placeholder",
    "keycloak": "keycloak-placeholder",
    "keycloakImage": "keycloak-image-placeholder",
    "keycloakTag": "keycloak-tag-placeholder",
    "mariadb": "mariadb-placeholder",
    "mariadbImage": "mariadb-image-placeholder",
    "mariadbTag": "mariadb-tag-placeholder",
    "mcr.microsoft.com/mssql/server": "mcr-microsoft-com-mssql-server-placeholder",
    "memcached": "memcached-placeholder",
    "memcachedImage": "memcached-image-placeholder",
    "memcachedTag": "memcached-tag-placeholder",
    "mongo": "mongo-placeholder",
    "mongoImage": "mongo-image-placeholder",
    "mongoTag": "mongo-tag-placeholder",
    "mongodb": "mongodb-placeholder",
    "mongodbImage": "mongodb-image-placeholder",
    "mongodbTag": "mongodb-tag-placeholder",
    "mssql": "mssql-placeholder",
    "mssqlImage": "mssql-image-placeholder",
    "mssqlTag": "mssql-tag-placeholder",
    "mysql": "mysql-placeholder",
    "mysqlImage": "mysql-image-placeholder",
    "mysqlTag": "mysql-tag-placeholder",
    "neo4J": "neo-4-j-placeholder",
    "neo4JImage": "neo-4-j-image-placeholder",
    "neo4JTag": "neo-4-j-tag-placeholder",
    "neo4j": "neo-4-j-placeholder",
    "openzipkin/zipkin": "openzipkin-zipkin-placeholder",
    "postgres": "postgres-placeholder",
    "postgresImage": "postgres-image-placeholder",
    "postgresTag": "postgres-tag-placeholder",
    "postgresql": "postgresql-placeholder",
    "postgresqlImage": "postgresql-image-placeholder",
    "postgresqlTag": "postgresql-tag-placeholder",
    "prom/alertmanager": "prom-alertmanager-placeholder",
    "prom/prometheus": "prom-prometheus-placeholder",
    "prometheus": "prometheus-placeholder",
    "prometheusAlertmanager": "prometheus-alertmanager-placeholder",
    "prometheusAlertmanagerImage": "prometheus-alertmanager-image-placeholder",
    "prometheusAlertmanagerTag": "prometheus-alertmanager-tag-placeholder",
    "prometheusImage": "prometheus-image-placeholder",
    "prometheusOperator": "prometheus-operator-placeholder",
    "prometheusOperatorImage": "prometheus-operator-image-placeholder",
    "prometheusOperatorTag": "prometheus-operator-tag-placeholder",
    "prometheusTag": "prometheus-tag-placeholder",
    "pulsar": "pulsar-placeholder",
    "pulsarImage": "pulsar-image-placeholder",
    "pulsarTag": "pulsar-tag-placeholder",
    "quay.io/coreos/grafana-watcher": "quay-io-coreos-grafana-watcher-placeholder",
    "quay.io/coreos/prometheus-operator": "quay-io-coreos-prometheus-operator-placeholder",
    "quay.io/keycloak/keycloak": "quay-io-keycloak-keycloak-placeholder",
    "redis": "redis-placeholder",
    "redisImage": "redis-image-placeholder",
    "redisTag": "redis-tag-placeholder",
    "sonar": "sonar-placeholder",
    "sonarImage": "sonar-image-placeholder",
    "sonarTag": "sonar-tag-placeholder",
    "sonarqube": "sonarqube-placeholder",
    "sonarqubeImage": "sonarqube-image-placeholder",
    "sonarqubeTag": "sonarqube-tag-placeholder",
    "swaggerEditor": "swagger-editor-placeholder",
    "swaggerEditorImage": "swagger-editor-image-placeholder",
    "swaggerEditorTag": "swagger-editor-tag-placeholder",
    "swaggerapi/swagger-editor": "swaggerapi-swagger-editor-placeholder",
    "zipkin": "zipkin-placeholder",
    "zipkinImage": "zipkin-image-placeholder",
    "zipkinTag": "zipkin-tag-placeholder",
  },
  "dockerServices": [
    "consul",
    "zipkin",
    "hazelcast",
    "postgresql",
  ],
  "dockerServicesDir": "src/main/docker/",
  "documentationArchiveUrl": "https://www.jhipster.tech/documentation-archive/vJHIPSTER_VERSION",
  "domains": [
    "com.mycompany.myapp",
  ],
  "dtoSuffix": "DTO",
  "embeddableLaunchScript": undefined,
  "enableGradleEnterprise": false,
  "enableHibernateCache": true,
  "enableI18nRTL": false,
  "enableSwaggerCodegen": false,
  "enableTranslation": true,
  "endpointPrefix": "services/jhipster",
  "entityPackages": [
    "com.mycompany.myapp",
  ],
  "entitySuffix": "",
  "fakerSeed": undefined,
  "feignClient": false,
  "frontendAppName": "jhipsterApp",
  "gatewayRoutes": undefined,
  "gatewayServerPort": undefined,
  "gatewayServicesApiAvailable": undefined,
  "gatlingTests": false,
  "generateAuthenticationApi": false,
  "generateBuiltInAuthorityEntity": undefined,
  "generateBuiltInUserEntity": undefined,
  "generateInMemoryUserCredentials": false,
  "generateSpringAuditor": true,
  "generateUserManagement": false,
  "githubRepository": undefined,
  "githubWorkflows": undefined,
  "graalvmSupport": undefined,
  "gradleEnterpriseHost": undefined,
  "hipster": "jhipster_family_member_3",
  "hipsterBugTrackerLink": "https://github.com/jhipster/generator-jhipster/issues?state=open",
  "hipsterBugTrackerProductName": "JHipster",
  "hipsterChatLink": "https://gitter.im/jhipster/generator-jhipster",
  "hipsterChatProductName": "JHipster",
  "hipsterDocumentationLink": "https://www.jhipster.tech/",
  "hipsterHomePageProductName": "JHipster",
  "hipsterName": "Java Hipster",
  "hipsterProductName": "JHipster",
  "hipsterProjectLink": "https://github.com/jhipster/generator-jhipster",
  "hipsterStackOverflowProductName": "JHipster",
  "hipsterStackoverflowLink": "https://stackoverflow.com/tags/jhipster/info",
  "hipsterTwitterLink": "https://twitter.com/jhipster",
  "hipsterTwitterUsername": "@jhipster",
  "humanizedBaseName": "JHipster",
  "imperativeOrReactive": "imperative",
  "incrementalChangelog": undefined,
  "javaCompatibleVersions": [
    "17",
    "21",
    "23",
  ],
  "javaDependencies": {
    "archunit-junit5": "'ARCHUNIT-JUNIT-5-VERSION'",
    "blockhound-junit-platform": "'BLOCKHOUND-JUNIT-PLATFORM-VERSION'",
    "checkstyle": "'CHECKSTYLE-VERSION'",
    "checksum-maven-plugin": "'CHECKSUM-MAVEN-PLUGIN-VERSION'",
    "common-custom-user-data-gradle-plugin": "'COMMON-CUSTOM-USER-DATA-GRADLE-PLUGIN-VERSION'",
    "commons-beanutils": "'COMMONS-BEANUTILS-VERSION'",
    "couchmove": "'COUCHMOVE-VERSION'",
    "cucumber-bom": "'CUCUMBER-BOM-VERSION'",
    "feign-reactor-bom": "'FEIGN-REACTOR-BOM-VERSION'",
    "frontend-maven-plugin": "'FRONTEND-MAVEN-PLUGIN-VERSION'",
    "gatling": "'GATLING-VERSION'",
    "gatling-gradle": "'GATLING-GRADLE-VERSION'",
    "gatling-maven-plugin": "'GATLING-MAVEN-PLUGIN-VERSION'",
    "git-commit-id-maven-plugin": "'GIT-COMMIT-ID-MAVEN-PLUGIN-VERSION'",
    "gradle-enterprise": "'GRADLE-ENTERPRISE-VERSION'",
    "gradle-git-properties": "'GRADLE-GIT-PROPERTIES-VERSION'",
    "gradle-liquibase": "'GRADLE-LIQUIBASE-VERSION'",
    "gradle-modernizer-plugin": "'GRADLE-MODERNIZER-PLUGIN-VERSION'",
    "gradle-openapi-generator": "'GRADLE-OPENAPI-GENERATOR-VERSION'",
    "gradle-sonarqube": "'GRADLE-SONARQUBE-VERSION'",
    "hazelcast-hibernate53": "'HAZELCAST-HIBERNATE-53-VERSION'",
    "hazelcast-spring": "'HAZELCAST-SPRING-VERSION'",
    "jackson-databind-nullable": "'JACKSON-DATABIND-NULLABLE-VERSION'",
    "jacoco-maven-plugin": "'JACOCO-MAVEN-PLUGIN-VERSION'",
    "jhipster-dependabot": "'JHIPSTER-DEPENDABOT-VERSION'",
    "jib-maven-plugin": "'JIB-MAVEN-PLUGIN-VERSION'",
    "jib-spring-boot-extension-maven": "'JIB-SPRING-BOOT-EXTENSION-MAVEN-VERSION'",
    "lifecycle-mapping": "'LIFECYCLE-MAPPING-VERSION'",
    "lz4-java": "'LZ-4-JAVA-VERSION'",
    "mapstruct": "'MAPSTRUCT-VERSION'",
    "maven-antrun-plugin": "'MAVEN-ANTRUN-PLUGIN-VERSION'",
    "maven-checkstyle-plugin": "'MAVEN-CHECKSTYLE-PLUGIN-VERSION'",
    "maven-clean-plugin": "'MAVEN-CLEAN-PLUGIN-VERSION'",
    "maven-compiler-plugin": "'MAVEN-COMPILER-PLUGIN-VERSION'",
    "maven-enforcer-plugin": "'MAVEN-ENFORCER-PLUGIN-VERSION'",
    "maven-failsafe-plugin": "'MAVEN-FAILSAFE-PLUGIN-VERSION'",
    "maven-jar-plugin": "'MAVEN-JAR-PLUGIN-VERSION'",
    "maven-javadoc-plugin": "'MAVEN-JAVADOC-PLUGIN-VERSION'",
    "maven-resources-plugin": "'MAVEN-RESOURCES-PLUGIN-VERSION'",
    "maven-site-plugin": "'MAVEN-SITE-PLUGIN-VERSION'",
    "maven-surefire-plugin": "'MAVEN-SUREFIRE-PLUGIN-VERSION'",
    "maven-war-plugin": "'MAVEN-WAR-PLUGIN-VERSION'",
    "micrometer-context-propagation": "'MICROMETER-CONTEXT-PROPAGATION-VERSION'",
    "modernizer-maven-plugin": "'MODERNIZER-MAVEN-PLUGIN-VERSION'",
    "mongock-bom": "'MONGOCK-BOM-VERSION'",
    "neo4j-migrations-spring-boot-starter": "'NEO-4-J-MIGRATIONS-SPRING-BOOT-STARTER-VERSION'",
    "node-gradle": "'NODE-GRADLE-VERSION'",
    "nohttp-checkstyle": "'NOHTTP-CHECKSTYLE-VERSION'",
    "openapi-generator-maven-plugin": "'OPENAPI-GENERATOR-MAVEN-PLUGIN-VERSION'",
    "picocli": "'PICOCLI-VERSION'",
    "properties-maven-plugin": "'PROPERTIES-MAVEN-PLUGIN-VERSION'",
    "redisson": "'REDISSON-VERSION'",
    "sonar-maven-plugin": "'SONAR-MAVEN-PLUGIN-VERSION'",
    "spotless-gradle-plugin": "'SPOTLESS-GRADLE-PLUGIN-VERSION'",
    "spotless-maven-plugin": "'SPOTLESS-MAVEN-PLUGIN-VERSION'",
    "spring-cloud-dependencies": "'SPRING-CLOUD-DEPENDENCIES-VERSION'",
    "springdoc": "'SPRINGDOC-VERSION'",
    "testng": "'TESTNG-VERSION'",
    "typesafe": "'TYPESAFE-VERSION'",
    "xmemcached": "'XMEMCACHED-VERSION'",
    "xmemcached-provider": "'XMEMCACHED-PROVIDER-VERSION'",
  },
  "javaManagedProperties": {},
  "javaNodeBuildPaths": [],
  "javaPackageSrcDir": "src/main/java/com/mycompany/myapp/",
  "javaPackageTestDir": "src/test/java/com/mycompany/myapp/",
  "javaProperties": {},
  "javaVersion": "JAVA_VERSION",
  "jdlStore": undefined,
  "jhiPrefix": "jhi",
  "jhiPrefixCapitalized": "Jhi",
  "jhiPrefixDashed": "jhi",
  "jhiTablePrefix": "jhi",
  "jhipsterDependenciesVersion": "JHIPSTER_DEPENDENCIES_VERSION",
  "jhipsterPackageJson": Any<Object>,
  "jhipsterVersion": "JHIPSTER_VERSION",
  "jwtSecretKey": Any<String>,
  "languages": [
    "en",
  ],
  "languagesDefinition": [
    {
      "angularLocale": "en",
      "dayjsLocale": "en",
      "displayName": "English",
      "fakerjsLocale": "en",
      "javaLocaleMessageSourceSuffix": "en",
      "languageTag": "en",
      "name": "English",
      "rtl": false,
    },
  ],
  "liquibaseAddH2Properties": false,
  "liquibaseDefaultSchemaName": "",
  "listOrFlux": "List",
  "listOrFluxClassPath": "java.util.List",
  "lowercaseBaseName": "jhipster",
  "mainClass": "JhipsterApp",
  "mainJavaDir": "src/main/java/",
  "mainJavaPackageDir": "src/main/java/com/mycompany/myapp/",
  "mainJavaResourceDir": "src/main/resources/",
  "messageBroker": "no",
  "messageBrokerAny": false,
  "messageBrokerKafka": false,
  "messageBrokerNo": true,
  "messageBrokerPulsar": false,
  "microfrontend": false,
  "microfrontends": undefined,
  "mjsExtension": ".mjs",
  "monorepository": undefined,
  "nativeLanguage": "en",
  "nativeLanguageDefinition": {
    "angularLocale": "en",
    "dayjsLocale": "en",
    "displayName": "English",
    "fakerjsLocale": "en",
    "javaLocaleMessageSourceSuffix": "en",
    "languageTag": "en",
    "name": "English",
    "rtl": false,
  },
  "nodeDependencies": {
    "concurrently": "CONCURRENTLY_VERSION",
    "eslint-config-prettier": "ESLINT_CONFIG_PRETTIER_VERSION",
    "eslint-plugin-prettier": "ESLINT_PLUGIN_PRETTIER_VERSION",
    "husky": "HUSKY_VERSION",
    "lint-staged": "LINT_STAGED_VERSION",
    "npm": "NPM_VERSION",
    "prettier": "PRETTIER_VERSION",
    "prettier-plugin-java": "PRETTIER_PLUGIN_JAVA_VERSION",
    "prettier-plugin-packagejson": "PRETTIER_PLUGIN_PACKAGEJSON_VERSION",
    "wait-on": "WAIT_ON_VERSION",
  },
  "nodePackageManager": "npm",
  "nodeVersion": "NODE_VERSION",
  "optionalOrMono": "Optional",
  "optionalOrMonoClassPath": "java.util.Optional",
  "optionalOrMonoOfNullable": "Optional.ofNullable",
  "packageFolder": "com/mycompany/myapp/",
  "packageInfoJavadocs": [
    {
      "documentation": "Logging aspect.",
      "packageName": "com.mycompany.myapp.aop.logging",
    },
    {
      "documentation": "Application management.",
      "packageName": "com.mycompany.myapp.management",
    },
    {
      "documentation": "Webflux database column mapper.",
      "packageName": "com.mycompany.myapp.repository.rowmapper",
    },
    {
      "documentation": "Application security utilities.",
      "packageName": "com.mycompany.myapp.security",
    },
    {
      "documentation": "Data transfer objects for rest mapping.",
      "packageName": "com.mycompany.myapp.service.dto",
    },
    {
      "documentation": "Data transfer objects mappers.",
      "packageName": "com.mycompany.myapp.service.mapper",
    },
    {
      "documentation": "Request chain filters.",
      "packageName": "com.mycompany.myapp.web.filter",
    },
    {
      "documentation": "Rest layer error handling.",
      "packageName": "com.mycompany.myapp.web.rest.errors",
    },
    {
      "documentation": "Rest layer visual models.",
      "packageName": "com.mycompany.myapp.web.rest.vm",
    },
  ],
  "packageJsonNodeEngine": undefined,
  "packageJsonScripts": {},
  "packageJsonType": "commonjs",
  "packageJsonTypeAny": true,
  "packageJsonTypeCommonjs": true,
  "packageJsonTypeModule": false,
  "packageName": "com.mycompany.myapp",
  "pages": [],
  "prettierExtensions": "md,json,yml,js,cjs,mjs,ts,cts,mts,java",
  "prettierFolders": ",**/",
  "prettierJava": undefined,
  "prettierTabWidth": 2,
  "prodDatabaseDriver": {
    "jdbc": {
      "artifactId": "postgresql",
      "groupId": "org.postgresql",
    },
    "r2dbc": {
      "artifactId": "r2dbc-postgresql",
      "groupId": "org.postgresql",
    },
    "testContainer": {
      "artifactId": "postgresql",
      "groupId": "org.testcontainers",
      "scope": "test",
    },
  },
  "prodDatabaseExtraOptions": "",
  "prodDatabaseName": "jhipster",
  "prodDatabasePassword": "",
  "prodDatabaseType": "postgresql",
  "prodDatabaseTypeAny": true,
  "prodDatabaseTypeMariadb": false,
  "prodDatabaseTypeMssql": false,
  "prodDatabaseTypeMysql": false,
  "prodDatabaseTypeOracle": false,
  "prodDatabaseTypePostgresql": true,
  "prodDatabaseUsername": "jhipster",
  "prodHibernateDialect": "org.hibernate.dialect.PostgreSQLDialect",
  "prodJdbcDriver": "org.postgresql.Driver",
  "prodJdbcUrl": "jdbc:postgresql://localhost:5432/jhipster",
  "prodLiquibaseUrl": "jdbc:postgresql://localhost:5432/jhipster",
  "projectDescription": "Description for JHipster",
  "projectVersion": "0.0.1-SNAPSHOT",
  "reactive": false,
  "reactorBlock": "",
  "reactorBlockOptional": "",
  "rememberMeKey": undefined,
  "requiresDeleteAllUsers": false,
  "routes": undefined,
  "searchEngine": "no",
  "searchEngineAny": false,
  "searchEngineCouchbase": false,
  "searchEngineElasticsearch": false,
  "searchEngineNo": true,
  "serverPort": 8081,
  "serviceDiscovery": "consul",
  "serviceDiscoveryAny": true,
  "serviceDiscoveryConsul": true,
  "serviceDiscoveryEureka": false,
  "serviceDiscoveryNo": false,
  "serviceDiscoveryType": "consul",
  "serviceDiscoveryTypeAny": true,
  "serviceDiscoveryTypeConsul": true,
  "serviceDiscoveryTypeEureka": false,
  "serviceDiscoveryTypeNo": false,
  "skipCheckLengthOfIdentifier": false,
  "skipClient": true,
  "skipCommitHook": undefined,
  "skipFakeData": false,
  "skipJhipsterDependencies": undefined,
  "skipServer": undefined,
  "skipUserManagement": true,
  "springBootDependencies": Any<Object>,
  "srcMainDir": "src/main/",
  "srcMainJava": "src/main/java/",
  "srcMainResources": "src/main/resources/",
  "srcMainWebapp": "src/main/webapp/",
  "srcTestDir": "src/test/",
  "srcTestJava": "src/test/java/",
  "srcTestJavascript": "src/test/javascript/",
  "srcTestResources": "src/test/resources/",
  "syncUserWithIdp": undefined,
  "temporaryDir": "target/",
  "testFrameworks": [],
  "testJavaDir": "src/test/java/",
  "testJavaPackageDir": "src/test/java/com/mycompany/myapp/",
  "testResourceDir": "src/test/resources/",
  "typescriptEslint": undefined,
  "upperFirstCamelCaseBaseName": "Jhipster",
  "useNpmWrapper": false,
  "websocket": "no",
  "withAdminUi": false,
  "wrapMono": [Function],
}
`;
