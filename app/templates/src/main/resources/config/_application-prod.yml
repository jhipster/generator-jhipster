# ===================================================================
# Spring Boot configuration for the "prod" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

spring:
    profiles:
        active: prod
    devtools:
        restart:
            enabled: false
        livereload:
            enabled: false
    <%_ if (databaseType == 'sql') { _%>
    datasource:
        <%_ if (prodDatabaseType == 'mysql') { _%>
        driver-class-name: com.mysql.jdbc.jdbc2.optional.MysqlDataSource
        <%_ } else if (prodDatabaseType == 'postgresql') { _%>
        driver-class-name: org.postgresql.ds.PGSimpleDataSource
        <%_ } else if (prodDatabaseType == 'oracle') { _%>
        driver-class-name: oracle.jdbc.pool.OracleDataSource
        <%_ } else { _%>
        driver-class-name: org.hsqldb.jdbc.JDBCDataSource
        <%_ } _%>
        <%_ if (prodDatabaseType == 'mysql') { _%>
        url: jdbc:mysql://localhost:3306/<%= baseName %>?useUnicode=true&characterEncoding=utf8
        <%_ } else if (prodDatabaseType == 'postgresql') { _%>
        url: jdbc:postgresql://localhost:5432/<%= baseName %>
        <%_ } else if (prodDatabaseType == 'oracle') { _%>
        url: jdbc:oracle:thin:@localhost:1521:<%= baseName %>
        <%_ } _%>
        name:
        <%_ if (prodDatabaseType == 'mysql') { _%>
        username: root
        <%_ } else if (prodDatabaseType == 'postgresql') { _%>
        username: <%= baseName %>
        <%_ } _%>
        password:
    jpa:
        <%_ if (prodDatabaseType == 'mysql') { _%>
        database-platform: org.hibernate.dialect.MySQLInnoDBDialect
        <%_ } else if (prodDatabaseType == 'postgresql') { _%>
        database-platform: <%=packageName%>.domain.util.FixedPostgreSQL82Dialect
        <%_ } else if (prodDatabaseType == 'oracle') { _%>
        database-platform: org.hibernate.dialect.Oracle10gDialect
        <%_ } else { _%>
        database-platform: org.hibernate.dialect.HSQLDialect
        <%_ } _%>
        <%_ if (prodDatabaseType == 'mysql') { _%>
        database: MYSQL
        <%_ } else if (prodDatabaseType == 'postgresql') { _%>
        database: POSTGRESQL
        <%_ } else if (prodDatabaseType == 'oracle') { _%>
        database: ORACLE
        <%_ } else { _%>
        database: HSQL
        <%_ } _%>
        show_sql: false
        properties:
            hibernate.cache.use_second_level_cache: <% if (hibernateCache == 'ehcache' || hibernateCache == 'hazelcast') { %>true<% } else { %>false<% } %>
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: false
            <%_ if (hibernateCache == 'ehcache') { _%>
            hibernate.cache.region.factory_class: org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
            <%_ } else if (hibernateCache == 'hazelcast') { _%>
            hibernate.cache.region.factory_class: <%=packageName%>.config.hazelcast.HazelcastCacheRegionFactory
            <%_ } _%>
            <%_ if (hibernateCache == 'hazelcast') { _%>
            hibernate.cache.use_minimal_puts: true
            hibernate.cache.hazelcast.use_lite_member: true
            <%_ } _%>
    <%_ } _%>
    <%_ if (databaseType == 'mongodb') { _%>
    data:
        mongodb:
            host: localhost
            port: 27017
            database: <%= baseName %>
    <%_ } _%>
    <%_ if (databaseType == 'cassandra') { _%>
    data:
        cassandra:
            contactPoints: localhost
            protocolVersion: V2
            compression: LZ4
            keyspaceName: <%= baseName %>
    <%_ } _%>
    <%_ if (searchEngine == 'elasticsearch') { _%>
    data:
        elasticsearch:
            cluster-name:
            cluster-nodes: localhost:9300
    <%_ } _%>
    mail:
        host: localhost
        port: 25
        username:
        password:
    thymeleaf:
        cache: true

liquibase:
    contexts: prod

server:
    port: 8080
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json

# ===================================================================
# JHipster specific properties
# ===================================================================

jhipster:
    http:
        cache: # Used by the CachingHttpHeadersFilter
            timeToLiveInDays: 31
    <%_ if (clusteredHttpSession == 'hazelcast' || hibernateCache == 'hazelcast' || hibernateCache == 'ehcache') { _%>
    <%_ if (devDatabaseType == 'mysql') { _%>
    datasource: # JHipster-specific configuration, in addition to the standard spring.datasource properties
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
    <%_ } _%>
    cache: # Hibernate 2nd level cache, used by CacheConfiguration
        timeToLiveSeconds: 3600
        <%_ if (clusteredHttpSession == 'hazelcast' || hibernateCache == 'hazelcast') { _%>
        hazelcast:
            backupCount: 1
        <%_ } _%>
        <%_ if (hibernateCache == 'ehcache') { _%>
        ehcache:
            maxBytesLocalHeap: 256M
        <%_ } _%>
    <%_ } _%>
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: <%= baseName %>@localhost
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        spark:
            enabled: false
            host: localhost
            port: 9999
        graphite:
            enabled: false
            host: localhost
            port: 2003
            prefix: <%= baseName %>
