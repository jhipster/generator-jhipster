<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId><%= packageName %></groupId>
    <artifactId><%= _.slugify(baseName) %></artifactId>
    <version>0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <description></description>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- Spring profile to use -->
                <spring.profiles.active>dev</spring.profiles.active>
                <!-- i18n resource files reloading -->
                <message.reloading.enabled>true</message.reloading.enabled>
                <!-- log configuration -->
                <logback.loglevel>DEBUG</logback.loglevel>
                <!-- ehcache configuration -->
                <ehcache.maxBytesLocalHeap>64M</ehcache.maxBytesLocalHeap>
                <!-- development database configuration -->
                <% if (devDatabaseType == 'mysql') { %><datasource.datasourceclassname>com.mysql.jdbc.jdbc2.optional.MysqlDataSource</datasource.datasourceclassname>
                <datasource.url>jdbc:mysql://localhost:3306/<%= baseName %></datasource.url>
                <datasource.databaseName></datasource.databaseName>
                <datasource.serverName></datasource.serverName>
                <datasource.username>root</datasource.username>
                <datasource.password></datasource.password><% } else if (devDatabaseType == 'postgresql') { %><datasource.datasourceclassname>org.postgresql.ds.PGSimpleDataSource</datasource.datasourceclassname>
                <datasource.url></datasource.url>
                <datasource.databaseName><%= baseName %></datasource.databaseName>
                <datasource.serverName>localhost</datasource.serverName>
                <datasource.username><%= baseName %></datasource.username>
                <datasource.password></datasource.password><% } else { %><datasource.datasourceclassname>org.hsqldb.jdbc.JDBCDataSource</datasource.datasourceclassname>
                <datasource.url>jdbc:hsqldb:mem:<%= baseName %></datasource.url>
                <datasource.databaseName></datasource.databaseName>
                <datasource.serverName></datasource.serverName>
                <datasource.username></datasource.username>
                <datasource.password></datasource.password><% } %>
                <% if (devDatabaseType == 'mysql') { %><hibernate.dialect>org.hibernate.dialect.MySQLInnoDBDialect</hibernate.dialect><% } else if (devDatabaseType == 'postgresql') { %><hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect><% } else { %><hibernate.dialect>org.hibernate.dialect.HSQLDialect</hibernate.dialect><% } %>
                <hibernate.show_sql>true</hibernate.show_sql>
                <hibernate.generate_statistics>true</hibernate.generate_statistics>
                <!-- email configuration -->
                <mail.host>localhost</mail.host>
                <mail.port>25</mail.port>
                <mail.user></mail.user>
                <mail.password></mail.password>
                <mail.tls></mail.tls>
                <mail.from>jhipster@localhost</mail.from>
                <jetty-maven-plugin.scan-interval-seconds>1</jetty-maven-plugin.scan-interval-seconds>
            </properties>
            <dependencies>
                <dependency>
                    <% if (devDatabaseType == 'mysql') { %><groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>5.1.27</version><% } else if (devDatabaseType == 'postgresql') { %><groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>9.3-1100-jdbc41</version><% } else { %><groupId>org.hsqldb</groupId>
                    <artifactId>hsqldb</artifactId>
                    <version>2.3.1</version><% } %>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <!-- Spring profile to use -->
                <spring.profiles.active>prod</spring.profiles.active>
                <!-- i18n resource files reloading -->
                <message.reloading.enabled>false</message.reloading.enabled>
                <!-- log configuration -->
                <logback.loglevel>WARN</logback.loglevel>
                <logback.appender>CONSOLE</logback.appender>
                <!-- ehcache configuration -->
                <ehcache.maxBytesLocalHeap>256M</ehcache.maxBytesLocalHeap>
                <!-- production database configuration -->
                <% if (prodDatabaseType == 'mysql') { %><datasource.datasourceclassname>com.mysql.jdbc.jdbc2.optional.MysqlDataSource</datasource.datasourceclassname>
                <datasource.url>jdbc:mysql://localhost:3306/<%= baseName %></datasource.url>
                <datasource.databaseName></datasource.databaseName>
                <datasource.serverName></datasource.serverName>
                <datasource.username>root</datasource.username>
                <datasource.password></datasource.password><% } else if (prodDatabaseType == 'postgresql') { %><datasource.datasourceclassname>org.postgresql.ds.PGSimpleDataSource</datasource.datasourceclassname>
                <datasource.url></datasource.url>
                <datasource.databaseName><%= baseName %></datasource.databaseName>
                <datasource.serverName>localhost</datasource.serverName>
                <datasource.username><%= baseName %></datasource.username>
                <datasource.password></datasource.password><% } %>
                <% if (prodDatabaseType == 'mysql') { %><hibernate.dialect>org.hibernate.dialect.MySQLInnoDBDialect</hibernate.dialect><% } else if (prodDatabaseType == 'postgresql') { %><hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect><% } %>
                <hibernate.show_sql>false</hibernate.show_sql>
                <hibernate.generate_statistics>false</hibernate.generate_statistics>
                <!-- email configuration -->
                <mail.host>localhost</mail.host>
                <mail.port>25</mail.port>
                <mail.user></mail.user>
                <mail.password></mail.password>
                <mail.tls></mail.tls>
                <mail.from>jhipster@localhost</mail.from>
                <jetty-maven-plugin.scan-interval-seconds>0</jetty-maven-plugin.scan-interval-seconds>
            </properties>
            <dependencies>
                <dependency>
                    <% if (prodDatabaseType == 'mysql') { %><groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>5.1.26</version><% } else if (prodDatabaseType == 'postgresql') { %><groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>9.3-1100-jdbc41</version><% } %>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>0.0.9</version>
                        <executions>
                            <execution>
                                <id>install node and npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <configuration>
                                    <nodeVersion>v0.10.22</nodeVersion>
                                    <npmVersion>1.3.14</npmVersion>
                                </configuration>
                            </execution>
                            <execution>
                                <id>npm install</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>grunt build</id>
                                <goals>
                                    <goal>grunt</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>        
    </profiles>
    
    <properties>
        <!-- Maven build properties -->
    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.6</java.version>

        <!-- Librairies versions -->
        <% if (springVersion == 'spring4') { %><spring.version>4.0.0.RC2</spring.version>
        <% } else { %><spring.version>3.2.5.RELEASE</spring.version><% } %>  
        <spring.security.version>3.1.4.RELEASE</spring.security.version>
        <hibernate.version>4.2.7.Final</hibernate.version>
        <codahale.metrics.version>3.0.1</codahale.metrics.version>
    </properties>

    <repositories>
        <repository>
            <id>sonatype-releases</id>
            <name>Sonatype Releases Repository</name>
            <url>http://oss.sonatype.org/content/repositories/releases/</url>
        </repository>
        <% if (springVersion == 'spring4') { %>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>http://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <% } %>  
    </repositories>
    <prerequisites>
        <maven>3.0.0</maven>
    </prerequisites>

    <dependencies>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.0.13</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.0.13</version>
        </dependency>
        <dependency>
            <groupId>com.codahale.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version><%= _.unescape('\$\{codahale.metrics.version}')%></version>
        </dependency>
        <dependency>
            <groupId>com.codahale.metrics</groupId>
            <artifactId>metrics-ehcache</artifactId>
            <version><%= _.unescape('\$\{codahale.metrics.version}')%></version>
        </dependency>
        <dependency>
            <groupId>com.codahale.metrics</groupId>
            <artifactId>metrics-graphite</artifactId>
            <version><%= _.unescape('\$\{codahale.metrics.version}')%></version>
        </dependency>
        <dependency>
            <groupId>com.codahale.metrics</groupId>
            <artifactId>metrics-jvm</artifactId>
            <version><%= _.unescape('\$\{codahale.metrics.version}')%></version>
        </dependency>
        <dependency>
            <groupId>com.codahale.metrics</groupId>
            <artifactId>metrics-servlet</artifactId>
            <version><%= _.unescape('\$\{codahale.metrics.version}')%></version>
        </dependency>
        <dependency>
            <groupId>com.codahale.metrics</groupId>
            <artifactId>metrics-servlets</artifactId>
            <version><%= _.unescape('\$\{codahale.metrics.version}')%></version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-json-org</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-hppc</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.ryantenney.metrics</groupId>
            <artifactId>metrics-spring</artifactId>
            <version>3.0.0-RC2</version>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>1.1.8</version>
        </dependency>
        <!-- The HikariCP Java Agent is disabled by default, as it is experimental
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP-agent</artifactId>
            <version>1.1.8</version>
        </dependency>
        -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.1.0.Final</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.3</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time-hibernate</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-web</artifactId>
            <version>2.0.4</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.7.4</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.7.4</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.geronimo.javamail</groupId>
            <artifactId>geronimo-javamail_1.4_mail</artifactId>
            <version>1.8.3</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version><%= _.unescape('\$\{hibernate.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version><%= _.unescape('\$\{hibernate.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version><%= _.unescape('\$\{hibernate.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.0.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.core</artifactId>
            <version>3.1.0.CR8</version>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>3.0.7</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version><%= _.unescape('\$\{spring.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version><%= _.unescape('\$\{spring.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version><%= _.unescape('\$\{spring.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version><%= _.unescape('\$\{spring.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version><%= _.unescape('\$\{spring.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version><%= _.unescape('\$\{spring.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version><%= _.unescape('\$\{spring.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version><%= _.unescape('\$\{spring.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version><%= _.unescape('\$\{spring.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version><%= _.unescape('\$\{spring.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>1.4.2.RELEASE</version>
         </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version><%= _.unescape('\$\{spring.security.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version><%= _.unescape('\$\{spring.security.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
            <version><%= _.unescape('\$\{spring.security.version}')%></version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version><%= _.unescape('\$\{spring.security.version}')%></version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
              <groupId>com.jayway.awaitility</groupId>
              <artifactId>awaitility</artifactId>
              <version>1.4.0</version>
              <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>0.9.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.3.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version><%= _.unescape('\$\{spring.version}')%></version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>root</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.3.1</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <message>You are running an older version of Maven. JHipster requires at least Maven 3.0</message>
                                    <version>[3.0.0,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <message>You are running an older version of Java. JHipster requires at least JDK 1.7</message>
                                    <version>[1.7.0,)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.16</version>
                <configuration>
                    <argLine>-XX:MaxPermSize=128m -Xmx256m</argLine>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <!-- Force alphabetical order to have a reproducible build -->
                    <runOrder>alphabetical</runOrder>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
    			<artifactId>jetty-maven-plugin</artifactId>
    			<version>9.1.0.v20131115</version>
                <configuration>
                    <scanIntervalSeconds><%= _.unescape('\$\{jetty-maven-plugin.scan-interval-seconds}')%></scanIntervalSeconds>
                    <stopKey>stop-jetty</stopKey>
                    <stopPort>9999</stopPort>
                    <systemProperties>
                        <systemProperty>
                            <name>jetty.port</name>
                            <value>8080</value>
                        </systemProperty>
                        <systemProperty>
                            <name>spring.profiles.active</name>
                            <value><%= _.unescape('\$\{spring.profiles.active}')%></value>
                        </systemProperty>
                    </systemProperties>
                    <jvmArgs>-javaagent:spring_loaded/springloaded-1.1.4.jar -noverify</jvmArgs>
                    <webApp>
                        <contextPath>/</contextPath>
                    </webApp>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <path>/</path>
                    <contextReloadable>true</contextReloadable>
                    <protocol>org.apache.coyote.http11.Http11NioProtocol</protocol>
                    <systemProperties>
                        <spring.profiles.active><%= _.unescape('\$\{spring.profiles.active}')%></spring.profiles.active>
                    </systemProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>2.2</version>
            </plugin>
        </plugins>
    </build>
</project>
