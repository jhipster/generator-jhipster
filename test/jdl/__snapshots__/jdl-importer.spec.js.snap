// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JDLImporter import when parsing JDL applications and deployment config with a realistic sample should export the application & deployment contents 1`] = `
Array [
  Object {
    "entities": Array [
      "Customer",
      "Product",
      "ProductCategory",
      "ProductOrder",
      "OrderItem",
      "Invoice",
      "Shipment",
      "Notification",
    ],
    "generator-jhipster": Object {
      "applicationType": "gateway",
      "authenticationType": "jwt",
      "baseName": "store",
      "buildTool": "gradle",
      "cacheProvider": "no",
      "clientFramework": "react",
      "clientPackageManager": "npm",
      "clientTheme": "none",
      "clientThemeVariant": "",
      "databaseType": "sql",
      "devDatabaseType": "h2Disk",
      "dtoSuffix": "DTO",
      "enableGradleEnterprise": false,
      "enableHibernateCache": false,
      "enableSwaggerCodegen": false,
      "enableTranslation": true,
      "entitySuffix": "",
      "gradleEnterpriseHost": "",
      "jhiPrefix": "jhi",
      "languages": Array [],
      "messageBroker": false,
      "packageFolder": "com/jhipster/demo/store",
      "packageName": "com.jhipster.demo.store",
      "prodDatabaseType": "mysql",
      "reactive": true,
      "searchEngine": false,
      "serverPort": "8080",
      "serviceDiscoveryType": false,
      "skipUserManagement": false,
      "testFrameworks": Array [
        "protractor",
      ],
      "websocket": false,
      "withAdminUi": true,
    },
  },
  Object {
    "entities": Array [
      "Product",
      "ProductCategory",
      "ProductOrder",
      "OrderItem",
    ],
    "generator-jhipster": Object {
      "applicationType": "microservice",
      "authenticationType": "jwt",
      "baseName": "product",
      "buildTool": "gradle",
      "cacheProvider": "hazelcast",
      "clientPackageManager": "npm",
      "databaseType": "sql",
      "devDatabaseType": "h2Disk",
      "dtoSuffix": "DTO",
      "enableGradleEnterprise": false,
      "enableHibernateCache": true,
      "enableSwaggerCodegen": false,
      "enableTranslation": true,
      "entitySuffix": "",
      "gradleEnterpriseHost": "",
      "jhiPrefix": "jhi",
      "languages": Array [],
      "messageBroker": false,
      "packageFolder": "com/jhipster/demo/product",
      "packageName": "com.jhipster.demo.product",
      "prodDatabaseType": "mysql",
      "reactive": false,
      "searchEngine": false,
      "serverPort": "8081",
      "serviceDiscoveryType": false,
      "skipClient": true,
      "skipUserManagement": true,
      "testFrameworks": Array [],
      "websocket": false,
    },
  },
  Object {
    "entities": Array [
      "Invoice",
      "Shipment",
    ],
    "generator-jhipster": Object {
      "applicationType": "microservice",
      "authenticationType": "jwt",
      "baseName": "invoice",
      "buildTool": "gradle",
      "cacheProvider": "ehcache",
      "clientPackageManager": "npm",
      "databaseType": "sql",
      "devDatabaseType": "h2Disk",
      "dtoSuffix": "DTO",
      "enableGradleEnterprise": false,
      "enableHibernateCache": true,
      "enableSwaggerCodegen": false,
      "enableTranslation": true,
      "entitySuffix": "",
      "gradleEnterpriseHost": "",
      "jhiPrefix": "jhi",
      "languages": Array [],
      "messageBroker": false,
      "packageFolder": "com/jhipster/demo/invoice",
      "packageName": "com.jhipster.demo.invoice",
      "prodDatabaseType": "mysql",
      "reactive": false,
      "searchEngine": false,
      "serverPort": "8082",
      "serviceDiscoveryType": false,
      "skipClient": true,
      "skipUserManagement": true,
      "testFrameworks": Array [],
      "websocket": false,
    },
  },
  Object {
    "entities": Array [
      "Notification",
    ],
    "generator-jhipster": Object {
      "applicationType": "microservice",
      "authenticationType": "jwt",
      "baseName": "notification",
      "buildTool": "gradle",
      "cacheProvider": "no",
      "clientPackageManager": "npm",
      "databaseType": "mongodb",
      "devDatabaseType": "mongodb",
      "dtoSuffix": "DTO",
      "enableGradleEnterprise": false,
      "enableHibernateCache": false,
      "enableSwaggerCodegen": false,
      "enableTranslation": true,
      "entitySuffix": "",
      "gradleEnterpriseHost": "",
      "jhiPrefix": "jhi",
      "languages": Array [],
      "messageBroker": false,
      "packageFolder": "com/jhipster/demo/notification",
      "packageName": "com.jhipster.demo.notification",
      "prodDatabaseType": "mongodb",
      "reactive": false,
      "searchEngine": false,
      "serverPort": "8083",
      "serviceDiscoveryType": false,
      "skipClient": true,
      "skipUserManagement": true,
      "testFrameworks": Array [],
      "websocket": false,
    },
  },
  Object {
    "generator-jhipster": Object {
      "appsFolders": Array [
        "store",
        "invoice",
        "notification",
        "product",
      ],
      "clusteredDbApps": Array [],
      "deploymentType": "docker-compose",
      "directoryPath": "../",
      "dockerRepositoryName": "deepu105",
      "gatewayType": "SpringCloudGateway",
      "monitoring": "no",
      "serviceDiscoveryType": false,
    },
  },
  Object {
    "generator-jhipster": Object {
      "appsFolders": Array [
        "store",
        "invoice",
        "notification",
        "product",
      ],
      "clusteredDbApps": Array [],
      "deploymentType": "kubernetes",
      "directoryPath": "../",
      "dockerPushCommand": "docker push",
      "dockerRepositoryName": "deepu105",
      "ingressDomain": "",
      "istio": false,
      "kubernetesNamespace": "default",
      "kubernetesServiceType": "LoadBalancer",
      "kubernetesStorageClassName": "",
      "kubernetesUseDynamicStorage": false,
      "monitoring": "no",
      "serviceDiscoveryType": false,
    },
  },
]
`;

exports[`JDLImporter import when parsing deployment config should export the deployment contents 1`] = `
Array [
  Object {
    "generator-jhipster": Object {
      "appsFolders": Array [
        "tata",
        "titi",
      ],
      "clusteredDbApps": Array [],
      "deploymentType": "docker-compose",
      "directoryPath": "../",
      "dockerRepositoryName": "test",
      "gatewayType": "SpringCloudGateway",
      "monitoring": "no",
      "serviceDiscoveryType": "eureka",
    },
  },
  Object {
    "generator-jhipster": Object {
      "appsFolders": Array [
        "tata",
        "titi",
      ],
      "clusteredDbApps": Array [],
      "deploymentType": "kubernetes",
      "directoryPath": "../",
      "dockerPushCommand": "docker push",
      "dockerRepositoryName": "test",
      "ingressDomain": "",
      "istio": false,
      "kubernetesNamespace": "default",
      "kubernetesServiceType": "LoadBalancer",
      "kubernetesStorageClassName": "KubernetesStorageClassName",
      "kubernetesUseDynamicStorage": false,
      "monitoring": "no",
      "serviceDiscoveryType": "eureka",
    },
  },
  Object {
    "generator-jhipster": Object {
      "appsFolders": Array [
        "tata",
        "titi",
      ],
      "clusteredDbApps": Array [],
      "deploymentType": "openshift",
      "directoryPath": "../",
      "dockerPushCommand": "docker push",
      "dockerRepositoryName": "test",
      "monitoring": "no",
      "openshiftNamespace": "default",
      "registryReplicas": 2,
      "serviceDiscoveryType": "eureka",
      "storageType": "ephemeral",
    },
  },
]
`;

exports[`JDLImporter import when parsing multiple JDL files with applications and entities should export myFirstApp applications 1`] = `
Object {
  "entities": Array [
    "A",
    "B",
    "E",
    "F",
  ],
  "generator-jhipster": Object {
    "applicationType": "monolith",
    "authenticationType": "jwt",
    "baseName": "myFirstApp",
    "buildTool": "maven",
    "cacheProvider": "ehcache",
    "clientFramework": "angularX",
    "clientPackageManager": "npm",
    "clientTheme": "yeti",
    "clientThemeVariant": "primary",
    "databaseType": "sql",
    "devDatabaseType": "h2Disk",
    "dtoSuffix": "DTO",
    "enableGradleEnterprise": false,
    "enableHibernateCache": true,
    "enableSwaggerCodegen": false,
    "enableTranslation": true,
    "entitySuffix": "",
    "gradleEnterpriseHost": "",
    "jhiPrefix": "jhi",
    "languages": Array [],
    "messageBroker": false,
    "packageFolder": "com/mycompany/myfirstapp",
    "packageName": "com.mycompany.myfirstapp",
    "prodDatabaseType": "postgresql",
    "reactive": false,
    "searchEngine": false,
    "serverPort": "8080",
    "serviceDiscoveryType": false,
    "skipUserManagement": false,
    "testFrameworks": Array [],
    "websocket": false,
    "withAdminUi": true,
  },
}
`;

exports[`JDLImporter import when parsing multiple JDL files with applications and entities should export mySecondApp applications 1`] = `
Object {
  "entities": Array [
    "E",
  ],
  "generator-jhipster": Object {
    "applicationType": "microservice",
    "authenticationType": "jwt",
    "baseName": "mySecondApp",
    "buildTool": "maven",
    "cacheProvider": "ehcache",
    "clientPackageManager": "npm",
    "databaseType": "sql",
    "devDatabaseType": "h2Disk",
    "dtoSuffix": "DTO",
    "enableGradleEnterprise": false,
    "enableHibernateCache": true,
    "enableSwaggerCodegen": false,
    "enableTranslation": true,
    "entitySuffix": "",
    "gradleEnterpriseHost": "",
    "jhiPrefix": "jhi",
    "languages": Array [],
    "messageBroker": false,
    "packageFolder": "com/mycompany/myapp",
    "packageName": "com.mycompany.myapp",
    "prodDatabaseType": "postgresql",
    "reactive": false,
    "searchEngine": false,
    "serverPort": "8091",
    "serviceDiscoveryType": "eureka",
    "skipClient": true,
    "skipUserManagement": true,
    "testFrameworks": Array [],
    "websocket": false,
  },
}
`;

exports[`JDLImporter import when parsing multiple JDL files with applications and entities should export myThirdApp applications 1`] = `
Object {
  "entities": Array [
    "F",
  ],
  "generator-jhipster": Object {
    "applicationType": "microservice",
    "authenticationType": "jwt",
    "baseName": "myThirdApp",
    "buildTool": "maven",
    "cacheProvider": "ehcache",
    "clientPackageManager": "npm",
    "databaseType": "sql",
    "devDatabaseType": "h2Disk",
    "dtoSuffix": "DTO",
    "enableGradleEnterprise": false,
    "enableHibernateCache": true,
    "enableSwaggerCodegen": false,
    "enableTranslation": true,
    "entitySuffix": "",
    "gradleEnterpriseHost": "",
    "jhiPrefix": "jhi",
    "languages": Array [],
    "messageBroker": false,
    "packageFolder": "com/mycompany/myapp",
    "packageName": "com.mycompany.myapp",
    "prodDatabaseType": "postgresql",
    "reactive": false,
    "searchEngine": false,
    "serverPort": "8092",
    "serviceDiscoveryType": "eureka",
    "skipClient": true,
    "skipUserManagement": true,
    "testFrameworks": Array [],
    "websocket": false,
  },
}
`;

exports[`JDLImporter import when parsing multiple JDL files with applications and entities should export the entities for myFirstApp 1`] = `
Object {
  "applications": Array [
    "myFirstApp",
  ],
  "dto": "no",
  "embedded": false,
  "entityTableName": "a",
  "fields": Array [],
  "fluentMethods": true,
  "jpaMetamodelFiltering": false,
  "name": "A",
  "pagination": "no",
  "readOnly": false,
  "relationships": Array [],
  "service": "no",
}
`;

exports[`JDLImporter import when parsing multiple JDL files with applications and entities should export the entities for myFirstApp 2`] = `
Object {
  "applications": Array [
    "myFirstApp",
  ],
  "dto": "no",
  "embedded": false,
  "entityTableName": "b",
  "fields": Array [],
  "fluentMethods": true,
  "jpaMetamodelFiltering": false,
  "name": "B",
  "pagination": "no",
  "readOnly": false,
  "relationships": Array [],
  "service": "no",
}
`;

exports[`JDLImporter import when parsing multiple JDL files with applications and entities should export the entities for myFirstApp 3`] = `
Object {
  "applications": Array [
    "myFirstApp",
    "mySecondApp",
  ],
  "dto": "no",
  "embedded": false,
  "entityTableName": "e",
  "fields": Array [],
  "fluentMethods": true,
  "jpaMetamodelFiltering": false,
  "microserviceName": "mySecondApp",
  "name": "E",
  "pagination": "no",
  "readOnly": false,
  "relationships": Array [],
  "service": "no",
}
`;

exports[`JDLImporter import when parsing multiple JDL files with applications and entities should export the entities for myFirstApp 4`] = `
Object {
  "applications": Array [
    "myFirstApp",
    "myThirdApp",
  ],
  "dto": "no",
  "embedded": false,
  "entityTableName": "f",
  "fields": Array [],
  "fluentMethods": true,
  "jpaMetamodelFiltering": false,
  "name": "F",
  "pagination": "no",
  "readOnly": false,
  "relationships": Array [],
  "service": "no",
}
`;

exports[`JDLImporter import when parsing multiple JDL files with applications and entities should export the entities for mySecondApp 1`] = `
Object {
  "applications": Array [
    "myFirstApp",
    "mySecondApp",
  ],
  "dto": "no",
  "embedded": false,
  "entityTableName": "e",
  "fields": Array [],
  "fluentMethods": true,
  "jpaMetamodelFiltering": false,
  "microserviceName": "mySecondApp",
  "name": "E",
  "pagination": "no",
  "readOnly": false,
  "relationships": Array [],
  "service": "no",
}
`;

exports[`JDLImporter import when parsing multiple JDL files with applications and entities should export the entities for myThirdApp 1`] = `
Object {
  "applications": Array [
    "myFirstApp",
    "myThirdApp",
  ],
  "dto": "no",
  "embedded": false,
  "entityTableName": "f",
  "fields": Array [],
  "fluentMethods": true,
  "jpaMetamodelFiltering": false,
  "name": "F",
  "pagination": "no",
  "readOnly": false,
  "relationships": Array [],
  "service": "no",
}
`;
