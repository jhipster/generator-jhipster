dependencies {
    // jhipster-needle-gradle-dependency - JHipster will add additional dependencies here
}

ext {
    springProfiles = "prod" + springProfiles

    if (project.hasProperty("api-docs")) {
        springProfiles += ",api-docs"
    }
}

springBoot {
    buildInfo()
}

bootRun {
    args = ["--spring.profiles.active=${springProfiles}"]
}

task webapp(type: NpmTask) {
    dependsOn npmInstall
    args = ["run", "webapp:prod"]
    environment = [APP_VERSION: project.version]
}

processResources {
    inputs.property('version', version)
    inputs.property('springProfiles', springProfiles)
    filesMatching("**/application.yml") {
        filter {
            it.replace("@project.version@", version)
        }
    }
    filesMatching("**/bootstrap.yml") {
        filter {
            it.replace("@spring.profiles.active@", springProfiles)
        }
    }
}

task integrationTest(type: Test) {
    maxHeapSize = "1G"
    useJUnitPlatform()
    description = "Execute integration tests."
    group = "verification"
    include "**/*IT*", "**/*IntTest*"
    testLogging {
        events 'FAILED', 'SKIPPED'
        exceptionFormat "full"
    }
    systemProperty('spring.profiles.active', 'test,testprod')
    systemProperty('java.security.egd', 'file:/dev/./urandom')
    // uncomment if the tests reports are not generated
    // see https://github.com/jhipster/generator-jhipster/pull/2771 and https://github.com/jhipster/generator-jhipster/pull/4484
    // ignoreFailures true
    reports.html.required = false
}
integrationTest.dependsOn test

processResources.dependsOn webapp
bootJar.dependsOn processResources
