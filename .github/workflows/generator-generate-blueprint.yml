#
# Copyright the original author or authors from the JHipster project.
#
# This file is part of the JHipster project, see https://www.jhipster.tech/
# for more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Blueprint Generator
on: [workflow_call]
env:
  FORCE_COLOR: 2
jobs:
  check-generator-generate-blueprint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/app
    if: >-
      !contains(github.event.head_commit.message, '[ci skip]') &&
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.pull_request.title, '[skip ci]') &&
      !contains(github.event.pull_request.title, '[ci skip]') &&
      github.event.action != 'closed' &&
      !contains(github.event.pull_request.labels.*.name, 'pr: skip-ci')
    timeout-minutes: 40
    steps:
      #----------------------------------------------------------------------
      # Install all tools and check configuration
      #----------------------------------------------------------------------
      - name: 'SETUP: Checkout generator-jhipster'
        uses: actions/checkout@v5
        with:
          path: generator-jhipster
          fetch-depth: 2
      - uses: ./generator-jhipster/.github/actions/setup-default-node-java
      - uses: jhipster/actions/setup-runner@v0
        with:
          maven-cache: true
          binary-dir: ${{ github.workspace }}/generator-jhipster/bin
      - run: npm ci --ignore-scripts
        working-directory: ${{ github.workspace }}/generator-jhipster
      - run: npm link
        working-directory: ${{ github.workspace }}/generator-jhipster
      #----------------------------------------------------------------------
      # Install JHipster and generate project+entities
      #----------------------------------------------------------------------
      - uses: jhipster/actions/build-jhipster-bom@v0
        with:
          jhipster-bom-ref: main
      - name: 'GENERATION: generate blueprint'
        run: |
          cd ..
          mkdir generator-jhipster-foo
          cd generator-jhipster-foo
          cp ${{ github.workspace }}/generator-jhipster/.blueprint/generate-sample/templates/test-integration/generate-blueprint-samples/default/.yo-rc.json .
          jhipster.cjs generate-blueprint --force --link-jhipster-dependency --generate-snapshots --skip-install
          npm link generator-jhipster
          npm link
      - name: 'GENERATION: project'
        run: jhipster-foo --defaults --client-test-frameworks cypress
        env:
          JHI_CLI: jhipster.cjs
      - name: 'GENERATION: jhipster info'
        run: jhipster info
      #----------------------------------------------------------------------
      # Launch tests
      #----------------------------------------------------------------------
      - name: 'TESTS: blueprint files should be written'
        run: |
          ls template-file-client
          ls template-file-common
          ls template-file-cypress
          ls template-file-server
      - name: 'TESTS: backend'
        id: backend
        if: steps.compare.outputs.equals != 'true' && matrix.skip-backend-tests != 'true'
        run: npm run ci:backend:test
      - name: 'BACKEND: Store failure logs'
        uses: actions/upload-artifact@v4
        if: always() && steps.backend.outcome == 'failure'
        with:
          name: log-${{ matrix.app-sample }}
          path: ${{ steps.setup.outputs.application-path }}/*/test-results/**/*.xml
      - name: 'E2E: Store failure screenshots'
        uses: actions/upload-artifact@v4
        if: always() && steps.e2e.outcome == 'failure'
        with:
          name: screenshots-${{ matrix.app-sample }}
          path: ${{ steps.setup.outputs.application-path }}/*/cypress/screenshots
