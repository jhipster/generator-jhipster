#
# Copyright 2013-2020 the original author or authors from the JHipster project.
#
# This file is part of the JHipster project, see https://www.jhipster.tech/
# for more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Angular
on: [push, pull_request]
env:
    JHI_RUN_APP: 1
    JHI_JDK: 11
    JHI_LIB_REPO: https://github.com/jhipster/jhipster.git
    JHI_LIB_BRANCH: master
    JHI_GEN_REPO: https://github.com/jhipster/generator-jhipster.git
    JHI_GEN_BRANCH: master
    SPRING_OUTPUT_ANSI_ENABLED: ALWAYS
    SPRING_JPA_SHOW_SQL: false
    JHI_DISABLE_WEBPACK_LOGS: true
    JHI_E2E_HEADLESS: true
    JHI_SCRIPTS: ./test-integration/scripts
    NG_CLI_ANALYTICS: 'false'
    JHI_GITHUB_CI: true
jobs:
    applications:
        name: ${{ matrix.app-type }}
        runs-on: ${{ matrix.os }}
        if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
        timeout-minutes: 40
        strategy:
            fail-fast: false
            matrix:
                node_version: [12.16.1]
                os: [ubuntu-latest]
                app-type:
                    - ngx-default
                    - ngx-psql-es-noi18n-mapsid
                    - ngx-mariadb-oauth2-infinispan
                    - ngx-mongodb-kafka-cucumber
                    - ngx-h2mem-ws-nol2
                    - ngx-gradle-fr
                    - ngx-gradle-psql-es-noi18n-mapsid
                    - ngx-gradle-mariadb-oauth2-infinispan
                    - ngx-gradle-mongodb-kafka-cucumber
                    - ngx-gradle-yarn-h2disk-ws-nocache
                include:
                    - app-type: ngx-default
                      entity: sql
                      profile: prod
                      war: 0
                      protractor: 1
                    - app-type: ngx-psql-es-noi18n-mapsid
                      entity: sqlfull
                      profile: prod
                      war: 0
                      protractor: 1
                    - app-type: ngx-mariadb-oauth2-infinispan
                      entity: sqlfull
                      profile: prod
                      war: 0
                      protractor: 1
                    - app-type: ngx-mongodb-kafka-cucumber
                      entity: mongodb
                      profile: dev,webpack
                      war: 0
                      protractor: 1
                    - app-type: ngx-h2mem-ws-nol2
                      entity: sql
                      profile: dev,webpack
                      war: 0 # TODO: need change to 1, when maven+war is fixed
                      protractor: 1
                    - app-type: ngx-gradle-fr
                      entity: sql
                      profile: prod
                      war: 0
                      protractor: 1
                    - app-type: ngx-gradle-psql-es-noi18n-mapsid
                      entity: sqlfull
                      profile: prod
                      war: 0
                      protractor: 1
                    - app-type: ngx-gradle-mariadb-oauth2-infinispan
                      entity: sql
                      profile: dev,webpack
                      war: 0
                      protractor: 1
                    - app-type: ngx-gradle-mongodb-kafka-cucumber
                      entity: mongodb
                      profile: prod
                      war: 0
                      protractor: 1
                    - app-type: ngx-gradle-yarn-h2disk-ws-nocache
                      entity: sql
                      profile: dev,webpack
                      war: 1
                      protractor: 1
        env:
            JHI_ENTITY: ${{ matrix.entity }}
            JHI_APP: ${{ matrix.app-type }}
            JHI_PROFILE: ${{ matrix.profile }}
            JHI_WAR: ${{ matrix.war }}
            JHI_PROTRACTOR: ${{ matrix.protractor }}
        steps:
            #----------------------------------------------------------------------
            # Install all tools and check configuration
            #----------------------------------------------------------------------
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node_version }}
            - name: Download latest chrome binary
              run: |
                  sudo apt update
                  sudo apt install google-chrome-stable
            - uses: actions/setup-java@v1
              with:
                  java-version: '11.x'
            - name: 'TOOLS: configure tools installed by the system'
              run: $JHI_SCRIPTS/03-system.sh
            - name: 'TOOLS: configure git'
              run: $JHI_SCRIPTS/04-git-config.sh
            #----------------------------------------------------------------------
            # Install JHipster and generate project+entities
            #----------------------------------------------------------------------
            - name: 'GENERATION: install JHipster'
              run: $JHI_SCRIPTS/10-install-jhipster.sh
            - name: 'GENERATION: entities'
              run: $JHI_SCRIPTS/11-generate-entities.sh
            - name: 'GENERATION: project'
              run: $JHI_SCRIPTS/12-generate-project.sh
            - name: 'GENERATION: replace version in generated project'
              run: $JHI_SCRIPTS/13-replace-version-generated-project.sh
            - name: 'GENERATION: jhipster info'
              run: $JHI_SCRIPTS/14-jhipster-info.sh
            #----------------------------------------------------------------------
            # Launch tests
            #----------------------------------------------------------------------
            - name: 'TESTS: Start docker-compose containers'
              run: $JHI_SCRIPTS/20-docker-compose.sh
            - name: 'TESTS: backend'
              run: $JHI_SCRIPTS/21-tests-backend.sh
            - name: 'TESTS: frontend'
              run: $JHI_SCRIPTS/22-tests-frontend.sh
            - name: 'TESTS: packaging'
              run: $JHI_SCRIPTS/23-package.sh
            - name: 'TESTS: End-to-End'
              run: $JHI_SCRIPTS/24-tests-e2e.sh
            - name: 'TESTS: Sonar analysis'
              run: $JHI_SCRIPTS/25-sonar-analyze.sh
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
