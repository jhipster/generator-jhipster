#
# Copyright 2013-2021 the original author or authors from the JHipster project.
#
# This file is part of the JHipster project, see https://www.jhipster.tech/
# for more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Build cache
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
env:
  JHI_LIB_REPO: https://github.com/jhipster/jhipster-bom.git
  JHI_LIB_BRANCH: main
  JHI_GEN_REPO: https://github.com/jhipster/generator-jhipster.git
  JHI_GEN_BRANCH: main
  SPRING_OUTPUT_ANSI_ENABLED: ALWAYS
  SPRING_JPA_SHOW_SQL: false
  JHI_DISABLE_WEBPACK_LOGS: true
  JHI_E2E_HEADLESS: true
  JHI_HOME: ${{ github.workspace }}/generator-jhipster
  JHI_SCRIPTS: ${{ github.workspace }}/generator-jhipster/test-integration/scripts
  JHI_JDL_SAMPLES: ${{ github.workspace }}/generator-jhipster/test-integration/jdl-samples
  JHI_FOLDER_APP: ${{ github.workspace }}/app
  NG_CLI_ANALYTICS: 'false'
  JHI_GITHUB_CI: true
  FORCE_COLOR: 1
  SPRING_PROFILES_ACTIVE: testcontainers
  # https://github.com/actions/virtual-environments/issues/1499#issuecomment-689467080
  MAVEN_OPTS: >-
    -Dhttp.keepAlive=false
    -Dmaven.wagon.http.pool=false
    -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
jobs:
  npm_cache:
    name: Create NPM cache
    runs-on: ubuntu-20.04
    steps:
      - name: 'SETUP: Checkout generator-jhipster'
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 14
      - name: 'SETUP: Get date for cache key'
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
      - name: 'SETUP: load npm cache'
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress/
          key: ${{ runner.os }}-node-${{ steps.get-date.outputs.date }}

      - name: 'Install generator-jhipster npm version'
        run: npm install -g npm@$(node -e "console.log(require('./generators/generator-constants').NPM_VERSION);")
      - name: Cache generator-jhipster node_modules
        run: npm ci
        continue-on-error: true
      - name: Cache last released generator-jhipster
        run: npm install -g generator-jhipster@latest
        continue-on-error: true
      - name: Cache common node_modules
        run: npm install
        continue-on-error: true
        working-directory: generators/common/templates/
      - name: Cache angular node_modules
        run: npm install
        continue-on-error: true
        working-directory: generators/client/templates/angular
      - name: Cache client common node_modules
        run: |
          npm install
          npx cypress install
        continue-on-error: true
        working-directory: generators/client/templates/common
      - name: Cache react node_modules
        run: npm install --legacy-peer-deps
        continue-on-error: true
        working-directory: generators/client/templates/react
      - name: Cache vue node_modules
        run: npm install
        continue-on-error: true
        working-directory: generators/client/templates/vue

  maven_cache:
    name: Create Maven cache
    if: always()
    needs: npm_cache
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ${{ github.workspace }}/app
    steps:
      - name: 'SETUP: Checkout generator-jhipster'
        uses: actions/checkout@v2
        with:
          path: generator-jhipster
      - name: 'SETUP: Create required structure'
        run: |
          mkdir app
        working-directory: ${{ github.workspace }}
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 14
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11.x'
      - name: 'SETUP: Get date for cache key'
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
      - name: 'SETUP: load npm cache'
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress/
          key: ${{ runner.os }}-node-${{ steps.get-date.outputs.date }}-cache
          restore-keys: ${{ runner.os }}-node-${{ steps.get-date.outputs.date }}
      - name: 'SETUP: load maven cache'
        uses: actions/cache@v2.1.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ steps.get-date.outputs.date }}
      - name: 'Install generator-jhipster npm version'
        run: npm install -g npm@$(node -e "console.log(require('./generators/generator-constants').NPM_VERSION);")

      - name: 'GENERATION: install JHipster'
        run: $JHI_SCRIPTS/10-install-jhipster.sh
      - name: 'GENERATION: copy jdl'
        run: |
          ls $JHI_JDL_SAMPLES
          ls $JHI_JDL_SAMPLES/cache/
          cp $JHI_JDL_SAMPLES/cache/*.jdl .
      - name: 'GENERATION: project'
        run: jhipster jdl *.jdl --skip-jhipster-dependencies --skip-install --workspaces
      - name: 'GENERATION: replace version in generated project'
        run: $JHI_SCRIPTS/13-replace-version-generated-project.sh
      - name: Install workspaces deps
        run: npm install
      - name: Build cache
        run: npm run backend:build-cache || true
        continue-on-error: true

  gradle_cache:
    name: Create Gradle cache
    if: always()
    needs: [npm_cache, maven_cache]
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ${{ github.workspace }}/app
    steps:
      - name: 'SETUP: Checkout generator-jhipster'
        uses: actions/checkout@v2
        with:
          path: generator-jhipster
      - name: 'SETUP: Create required structure'
        run: |
          mkdir app
        working-directory: ${{ github.workspace }}
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 14
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11.x'
      - name: 'SETUP: Get date for cache key'
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
      - name: 'SETUP: load npm cache'
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress/
          key: ${{ runner.os }}-node-${{ steps.get-date.outputs.date }}-cache
          restore-keys: ${{ runner.os }}-node-${{ steps.get-date.outputs.date }}
      - name: 'SETUP: load maven cache'
        uses: actions/cache@v2.1.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ steps.get-date.outputs.date }}
      - name: 'SETUP: load gradle cache'
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ steps.get-date.outputs.date }}
      - name: 'Install generator-jhipster npm version'
        run: npm install -g npm@$(node -e "console.log(require('./generators/generator-constants').NPM_VERSION);")

      - name: 'GENERATION: install JHipster'
        run: $JHI_SCRIPTS/10-install-jhipster.sh
      - name: 'GENERATION: copy jdl'
        run: cp $JHI_JDL_SAMPLES/cache/*.jdl .
      - name: 'GENERATION: project'
        run: jhipster jdl *.jdl --skip-jhipster-dependencies --skip-install --build gradle --workspaces
      - name: 'GENERATION: replace version in generated project'
        run: $JHI_SCRIPTS/13-replace-version-generated-project.sh
      - name: Install workspaces deps
        run: npm install
      - name: Build cache
        run: npm run backend:build-cache || true
        continue-on-error: true
